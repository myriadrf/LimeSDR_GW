/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post99, git sha1 a1bb0255d) */

(* top =  1  *)
(* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:97" *)
(* generator = "Amaranth" *)
module fft(in_q, strobe_in, start, wf_start, wf_strobe, wf_real, wf_imag, clk, rst, out_real, out_imag, strobe_out, done, wr_state, wr_state_valid, in_i);
  reg \$auto$verilog_backend.cc:2352:dump_module$1  = 0;
  wire [24:0] \$1 ;
  wire [33:0] \$10 ;
  reg [8:0] \$100 ;
  reg \$101 ;
  reg \$102 ;
  reg [8:0] \$103 ;
  reg [8:0] \$104 ;
  reg [8:0] \$105 ;
  reg [8:0] \$106 ;
  reg [20:0] \$107 ;
  reg [20:0] \$108 ;
  reg [20:0] \$109 ;
  wire [33:0] \$11 ;
  reg [20:0] \$110 ;
  reg [20:0] \$111 ;
  reg [20:0] \$112 ;
  reg [8:0] \$113 ;
  reg [8:0] \$114 ;
  reg \$115 ;
  reg [20:0] \$116 ;
  reg [20:0] \$117 ;
  wire [33:0] \$12 ;
  wire [33:0] \$13 ;
  wire [33:0] \$14 ;
  wire [33:0] \$15 ;
  wire [33:0] \$16 ;
  wire [33:0] \$17 ;
  wire [21:0] \$18 ;
  wire [21:0] \$19 ;
  wire [24:0] \$2 ;
  wire [21:0] \$20 ;
  wire [21:0] \$21 ;
  wire [21:0] \$22 ;
  wire [21:0] \$23 ;
  wire \$24 ;
  wire \$25 ;
  wire \$26 ;
  wire \$27 ;
  wire \$28 ;
  wire \$29 ;
  wire [25:0] \$3 ;
  wire \$30 ;
  wire \$31 ;
  wire \$32 ;
  wire \$33 ;
  wire \$34 ;
  wire \$35 ;
  wire \$36 ;
  wire \$37 ;
  wire \$38 ;
  wire \$39 ;
  wire [25:0] \$4 ;
  wire \$40 ;
  wire \$41 ;
  wire \$42 ;
  wire \$43 ;
  wire [10:0] \$44 ;
  wire \$45 ;
  wire [10:0] \$46 ;
  wire \$47 ;
  wire [8:0] \$48 ;
  wire [4:0] \$49 ;
  wire [24:0] \$5 ;
  wire \$50 ;
  wire [3:0] \$51 ;
  wire \$52 ;
  wire [11:0] \$53 ;
  wire [12:0] \$54 ;
  wire [11:0] \$55 ;
  wire [12:0] \$56 ;
  wire [11:0] \$57 ;
  wire [12:0] \$58 ;
  wire [11:0] \$59 ;
  wire [24:0] \$6 ;
  wire [12:0] \$60 ;
  wire [3:0] \$61 ;
  wire \$62 ;
  wire [3:0] \$63 ;
  wire \$64 ;
  wire [11:0] \$65 ;
  wire [11:0] \$66 ;
  wire [11:0] \$67 ;
  wire [11:0] \$68 ;
  wire [3:0] \$69 ;
  wire [25:0] \$7 ;
  wire \$70 ;
  wire [3:0] \$71 ;
  wire \$72 ;
  wire [3:0] \$73 ;
  wire \$74 ;
  wire [3:0] \$75 ;
  wire \$76 ;
  wire [10:0] \$77 ;
  wire [10:0] \$78 ;
  wire [10:0] \$79 ;
  wire [25:0] \$8 ;
  wire [10:0] \$80 ;
  wire [3:0] \$81 ;
  wire \$82 ;
  wire [10:0] \$83 ;
  wire \$84 ;
  wire [10:0] \$85 ;
  reg \$86 ;
  reg [9:0] \$87 ;
  reg [4:0] \$88 ;
  reg [9:0] \$89 ;
  wire [10:0] \$9 ;
  reg \$90 ;
  reg \$91 ;
  reg [8:0] \$92 ;
  reg \$93 ;
  reg \$94 ;
  reg [3:0] \$95 ;
  reg [8:0] \$96 ;
  reg [20:0] \$97 ;
  reg [20:0] \$98 ;
  reg [8:0] \$99 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:127" *)
  wire [8:0] Wi_r_addr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:127" *)
  wire [12:0] Wi_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:126" *)
  wire [8:0] Wr_r_addr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:126" *)
  wire [12:0] Wr_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:161" *)
  reg [20:0] ai = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:160" *)
  reg [20:0] ar = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:163" *)
  reg [20:0] bi = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:162" *)
  reg [20:0] br = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:183" *)
  wire [20:0] bwi;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:182" *)
  wire [20:0] bwr;
  (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input clk;
  wire clk;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:197" *)
  wire [20:0] di;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:70" *)
  output done;
  reg done = 1'h1;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:198" *)
  wire [20:0] dr;
  (* src = "/usr/lib/python3.12/contextlib.py:144" *)
  reg [4:0] fsm_state = 5'h00;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:137" *)
  wire [11:0] i_cooked;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:130" *)
  reg [9:0] idx = 10'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:72" *)
  input [11:0] in_i;
  wire [11:0] in_i;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:73" *)
  input [11:0] in_q;
  wire [11:0] in_q;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:158" *)
  reg [8:0] mask = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:179" *)
  wire [20:0] mii;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:181" *)
  wire [20:0] mir;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:180" *)
  wire [20:0] mri;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:178" *)
  wire [20:0] mrr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:75" *)
  output [20:0] out_imag;
  reg [20:0] out_imag = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:74" *)
  output [20:0] out_real;
  reg [20:0] out_real = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:138" *)
  wire [11:0] q_cooked;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:131" *)
  wire [8:0] revidx;
  (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_ir.py:283" *)
  input rst;
  wire rst;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:195" *)
  wire [20:0] si;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:196" *)
  wire [20:0] sr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:157" *)
  reg [3:0] stage = 4'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:69" *)
  input start;
  wire start;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:76" *)
  input strobe_in;
  wire strobe_in;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:77" *)
  output strobe_out;
  reg strobe_out = 1'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:123" *)
  wire [8:0] wFi_r_addr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:123" *)
  wire [12:0] wFi_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:124" *)
  wire [12:0] wFi_w_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:124" *)
  reg wFi_w_en = 1'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:121" *)
  wire [8:0] wFr_r_addr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:121" *)
  wire [12:0] wFr_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:122" *)
  reg [8:0] wFr_w_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:122" *)
  wire [12:0] wFr_w_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:122" *)
  reg wFr_w_en = 1'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:124" *)
  input [12:0] wf_imag;
  wire [12:0] wf_imag;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:122" *)
  input [12:0] wf_real;
  wire [12:0] wf_real;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:79" *)
  input wf_start;
  wire wf_start;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:80" *)
  input wf_strobe;
  wire wf_strobe;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:136" *)
  wire [12:0] wfi;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:149" *)
  reg [9:0] wfidx = 10'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:135" *)
  wire [12:0] wfr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:167" *)
  wire [12:0] wi;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:156" *)
  wire [8:0] widx;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:166" *)
  wire [12:0] wr;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:84" *)
  output wr_state;
  reg wr_state;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:85" *)
  output wr_state_valid;
  reg wr_state_valid;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:114" *)
  reg [8:0] xi_r_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:114" *)
  wire [20:0] xi_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:115" *)
  reg [8:0] xi_w_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:115" *)
  reg [20:0] xi_w_data = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:115" *)
  reg xi_w_en = 1'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:112" *)
  reg [8:0] xr_r_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:112" *)
  wire [20:0] xr_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:113" *)
  reg [8:0] xr_w_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:113" *)
  reg [20:0] xr_w_data = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:113" *)
  reg xr_w_en = 1'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:118" *)
  reg [8:0] yi_r_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:118" *)
  wire [20:0] yi_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:119" *)
  reg [8:0] yi_w_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:119" *)
  reg [20:0] yi_w_data = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:119" *)
  reg yi_w_en = 1'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:116" *)
  reg [8:0] yr_r_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:116" *)
  wire [20:0] yr_r_data;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:117" *)
  reg [8:0] yr_w_addr = 9'h000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:117" *)
  reg [20:0] yr_w_data = 21'h000000;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:117" *)
  reg yr_w_en = 1'h0;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:110" *)
  reg [12:0] Wi_rd [511:0];
  initial begin
    Wi_rd[0] = 13'h0000;
    Wi_rd[1] = 13'h1fe7;
    Wi_rd[2] = 13'h1fce;
    Wi_rd[3] = 13'h1fb5;
    Wi_rd[4] = 13'h1f9c;
    Wi_rd[5] = 13'h1f83;
    Wi_rd[6] = 13'h1f6a;
    Wi_rd[7] = 13'h1f51;
    Wi_rd[8] = 13'h1f38;
    Wi_rd[9] = 13'h1f1f;
    Wi_rd[10] = 13'h1f06;
    Wi_rd[11] = 13'h1eed;
    Wi_rd[12] = 13'h1ed4;
    Wi_rd[13] = 13'h1ebb;
    Wi_rd[14] = 13'h1ea2;
    Wi_rd[15] = 13'h1e8a;
    Wi_rd[16] = 13'h1e71;
    Wi_rd[17] = 13'h1e58;
    Wi_rd[18] = 13'h1e40;
    Wi_rd[19] = 13'h1e27;
    Wi_rd[20] = 13'h1e0f;
    Wi_rd[21] = 13'h1df7;
    Wi_rd[22] = 13'h1dde;
    Wi_rd[23] = 13'h1dc6;
    Wi_rd[24] = 13'h1dae;
    Wi_rd[25] = 13'h1d96;
    Wi_rd[26] = 13'h1d7e;
    Wi_rd[27] = 13'h1d66;
    Wi_rd[28] = 13'h1d4f;
    Wi_rd[29] = 13'h1d37;
    Wi_rd[30] = 13'h1d1f;
    Wi_rd[31] = 13'h1d08;
    Wi_rd[32] = 13'h1cf1;
    Wi_rd[33] = 13'h1cda;
    Wi_rd[34] = 13'h1cc3;
    Wi_rd[35] = 13'h1cac;
    Wi_rd[36] = 13'h1c95;
    Wi_rd[37] = 13'h1c7e;
    Wi_rd[38] = 13'h1c68;
    Wi_rd[39] = 13'h1c51;
    Wi_rd[40] = 13'h1c3b;
    Wi_rd[41] = 13'h1c25;
    Wi_rd[42] = 13'h1c0f;
    Wi_rd[43] = 13'h1bf9;
    Wi_rd[44] = 13'h1be4;
    Wi_rd[45] = 13'h1bce;
    Wi_rd[46] = 13'h1bb9;
    Wi_rd[47] = 13'h1ba4;
    Wi_rd[48] = 13'h1b8f;
    Wi_rd[49] = 13'h1b7a;
    Wi_rd[50] = 13'h1b65;
    Wi_rd[51] = 13'h1b51;
    Wi_rd[52] = 13'h1b3d;
    Wi_rd[53] = 13'h1b28;
    Wi_rd[54] = 13'h1b15;
    Wi_rd[55] = 13'h1b01;
    Wi_rd[56] = 13'h1aed;
    Wi_rd[57] = 13'h1ada;
    Wi_rd[58] = 13'h1ac7;
    Wi_rd[59] = 13'h1ab4;
    Wi_rd[60] = 13'h1aa1;
    Wi_rd[61] = 13'h1a8f;
    Wi_rd[62] = 13'h1a7c;
    Wi_rd[63] = 13'h1a6a;
    Wi_rd[64] = 13'h1a58;
    Wi_rd[65] = 13'h1a47;
    Wi_rd[66] = 13'h1a35;
    Wi_rd[67] = 13'h1a24;
    Wi_rd[68] = 13'h1a13;
    Wi_rd[69] = 13'h1a02;
    Wi_rd[70] = 13'h19f2;
    Wi_rd[71] = 13'h19e1;
    Wi_rd[72] = 13'h19d1;
    Wi_rd[73] = 13'h19c2;
    Wi_rd[74] = 13'h19b2;
    Wi_rd[75] = 13'h19a3;
    Wi_rd[76] = 13'h1994;
    Wi_rd[77] = 13'h1985;
    Wi_rd[78] = 13'h1976;
    Wi_rd[79] = 13'h1968;
    Wi_rd[80] = 13'h195a;
    Wi_rd[81] = 13'h194c;
    Wi_rd[82] = 13'h193e;
    Wi_rd[83] = 13'h1931;
    Wi_rd[84] = 13'h1924;
    Wi_rd[85] = 13'h1917;
    Wi_rd[86] = 13'h190b;
    Wi_rd[87] = 13'h18fe;
    Wi_rd[88] = 13'h18f2;
    Wi_rd[89] = 13'h18e7;
    Wi_rd[90] = 13'h18db;
    Wi_rd[91] = 13'h18d0;
    Wi_rd[92] = 13'h18c5;
    Wi_rd[93] = 13'h18bb;
    Wi_rd[94] = 13'h18b0;
    Wi_rd[95] = 13'h18a6;
    Wi_rd[96] = 13'h189c;
    Wi_rd[97] = 13'h1893;
    Wi_rd[98] = 13'h188a;
    Wi_rd[99] = 13'h1881;
    Wi_rd[100] = 13'h1878;
    Wi_rd[101] = 13'h1870;
    Wi_rd[102] = 13'h1868;
    Wi_rd[103] = 13'h1860;
    Wi_rd[104] = 13'h1859;
    Wi_rd[105] = 13'h1852;
    Wi_rd[106] = 13'h184b;
    Wi_rd[107] = 13'h1844;
    Wi_rd[108] = 13'h183e;
    Wi_rd[109] = 13'h1838;
    Wi_rd[110] = 13'h1832;
    Wi_rd[111] = 13'h182d;
    Wi_rd[112] = 13'h1828;
    Wi_rd[113] = 13'h1823;
    Wi_rd[114] = 13'h181f;
    Wi_rd[115] = 13'h181b;
    Wi_rd[116] = 13'h1817;
    Wi_rd[117] = 13'h1813;
    Wi_rd[118] = 13'h1810;
    Wi_rd[119] = 13'h180d;
    Wi_rd[120] = 13'h180a;
    Wi_rd[121] = 13'h1808;
    Wi_rd[122] = 13'h1806;
    Wi_rd[123] = 13'h1804;
    Wi_rd[124] = 13'h1803;
    Wi_rd[125] = 13'h1802;
    Wi_rd[126] = 13'h1801;
    Wi_rd[127] = 13'h1801;
    Wi_rd[128] = 13'h1800;
    Wi_rd[129] = 13'h1801;
    Wi_rd[130] = 13'h1801;
    Wi_rd[131] = 13'h1802;
    Wi_rd[132] = 13'h1803;
    Wi_rd[133] = 13'h1804;
    Wi_rd[134] = 13'h1806;
    Wi_rd[135] = 13'h1808;
    Wi_rd[136] = 13'h180a;
    Wi_rd[137] = 13'h180d;
    Wi_rd[138] = 13'h1810;
    Wi_rd[139] = 13'h1813;
    Wi_rd[140] = 13'h1817;
    Wi_rd[141] = 13'h181b;
    Wi_rd[142] = 13'h181f;
    Wi_rd[143] = 13'h1823;
    Wi_rd[144] = 13'h1828;
    Wi_rd[145] = 13'h182d;
    Wi_rd[146] = 13'h1832;
    Wi_rd[147] = 13'h1838;
    Wi_rd[148] = 13'h183e;
    Wi_rd[149] = 13'h1844;
    Wi_rd[150] = 13'h184b;
    Wi_rd[151] = 13'h1852;
    Wi_rd[152] = 13'h1859;
    Wi_rd[153] = 13'h1860;
    Wi_rd[154] = 13'h1868;
    Wi_rd[155] = 13'h1870;
    Wi_rd[156] = 13'h1878;
    Wi_rd[157] = 13'h1881;
    Wi_rd[158] = 13'h188a;
    Wi_rd[159] = 13'h1893;
    Wi_rd[160] = 13'h189c;
    Wi_rd[161] = 13'h18a6;
    Wi_rd[162] = 13'h18b0;
    Wi_rd[163] = 13'h18bb;
    Wi_rd[164] = 13'h18c5;
    Wi_rd[165] = 13'h18d0;
    Wi_rd[166] = 13'h18db;
    Wi_rd[167] = 13'h18e7;
    Wi_rd[168] = 13'h18f2;
    Wi_rd[169] = 13'h18fe;
    Wi_rd[170] = 13'h190b;
    Wi_rd[171] = 13'h1917;
    Wi_rd[172] = 13'h1924;
    Wi_rd[173] = 13'h1931;
    Wi_rd[174] = 13'h193e;
    Wi_rd[175] = 13'h194c;
    Wi_rd[176] = 13'h195a;
    Wi_rd[177] = 13'h1968;
    Wi_rd[178] = 13'h1976;
    Wi_rd[179] = 13'h1985;
    Wi_rd[180] = 13'h1994;
    Wi_rd[181] = 13'h19a3;
    Wi_rd[182] = 13'h19b2;
    Wi_rd[183] = 13'h19c2;
    Wi_rd[184] = 13'h19d1;
    Wi_rd[185] = 13'h19e1;
    Wi_rd[186] = 13'h19f2;
    Wi_rd[187] = 13'h1a02;
    Wi_rd[188] = 13'h1a13;
    Wi_rd[189] = 13'h1a24;
    Wi_rd[190] = 13'h1a35;
    Wi_rd[191] = 13'h1a47;
    Wi_rd[192] = 13'h1a58;
    Wi_rd[193] = 13'h1a6a;
    Wi_rd[194] = 13'h1a7c;
    Wi_rd[195] = 13'h1a8f;
    Wi_rd[196] = 13'h1aa1;
    Wi_rd[197] = 13'h1ab4;
    Wi_rd[198] = 13'h1ac7;
    Wi_rd[199] = 13'h1ada;
    Wi_rd[200] = 13'h1aed;
    Wi_rd[201] = 13'h1b01;
    Wi_rd[202] = 13'h1b15;
    Wi_rd[203] = 13'h1b28;
    Wi_rd[204] = 13'h1b3d;
    Wi_rd[205] = 13'h1b51;
    Wi_rd[206] = 13'h1b65;
    Wi_rd[207] = 13'h1b7a;
    Wi_rd[208] = 13'h1b8f;
    Wi_rd[209] = 13'h1ba4;
    Wi_rd[210] = 13'h1bb9;
    Wi_rd[211] = 13'h1bce;
    Wi_rd[212] = 13'h1be4;
    Wi_rd[213] = 13'h1bf9;
    Wi_rd[214] = 13'h1c0f;
    Wi_rd[215] = 13'h1c25;
    Wi_rd[216] = 13'h1c3b;
    Wi_rd[217] = 13'h1c51;
    Wi_rd[218] = 13'h1c68;
    Wi_rd[219] = 13'h1c7e;
    Wi_rd[220] = 13'h1c95;
    Wi_rd[221] = 13'h1cac;
    Wi_rd[222] = 13'h1cc3;
    Wi_rd[223] = 13'h1cda;
    Wi_rd[224] = 13'h1cf1;
    Wi_rd[225] = 13'h1d08;
    Wi_rd[226] = 13'h1d1f;
    Wi_rd[227] = 13'h1d37;
    Wi_rd[228] = 13'h1d4f;
    Wi_rd[229] = 13'h1d66;
    Wi_rd[230] = 13'h1d7e;
    Wi_rd[231] = 13'h1d96;
    Wi_rd[232] = 13'h1dae;
    Wi_rd[233] = 13'h1dc6;
    Wi_rd[234] = 13'h1dde;
    Wi_rd[235] = 13'h1df7;
    Wi_rd[236] = 13'h1e0f;
    Wi_rd[237] = 13'h1e27;
    Wi_rd[238] = 13'h1e40;
    Wi_rd[239] = 13'h1e58;
    Wi_rd[240] = 13'h1e71;
    Wi_rd[241] = 13'h1e8a;
    Wi_rd[242] = 13'h1ea2;
    Wi_rd[243] = 13'h1ebb;
    Wi_rd[244] = 13'h1ed4;
    Wi_rd[245] = 13'h1eed;
    Wi_rd[246] = 13'h1f06;
    Wi_rd[247] = 13'h1f1f;
    Wi_rd[248] = 13'h1f38;
    Wi_rd[249] = 13'h1f51;
    Wi_rd[250] = 13'h1f6a;
    Wi_rd[251] = 13'h1f83;
    Wi_rd[252] = 13'h1f9c;
    Wi_rd[253] = 13'h1fb5;
    Wi_rd[254] = 13'h1fce;
    Wi_rd[255] = 13'h1fe7;
    Wi_rd[256] = 13'h0000;
    Wi_rd[257] = 13'h0019;
    Wi_rd[258] = 13'h0032;
    Wi_rd[259] = 13'h004b;
    Wi_rd[260] = 13'h0064;
    Wi_rd[261] = 13'h007d;
    Wi_rd[262] = 13'h0096;
    Wi_rd[263] = 13'h00af;
    Wi_rd[264] = 13'h00c8;
    Wi_rd[265] = 13'h00e1;
    Wi_rd[266] = 13'h00fa;
    Wi_rd[267] = 13'h0113;
    Wi_rd[268] = 13'h012c;
    Wi_rd[269] = 13'h0145;
    Wi_rd[270] = 13'h015e;
    Wi_rd[271] = 13'h0176;
    Wi_rd[272] = 13'h018f;
    Wi_rd[273] = 13'h01a8;
    Wi_rd[274] = 13'h01c0;
    Wi_rd[275] = 13'h01d9;
    Wi_rd[276] = 13'h01f1;
    Wi_rd[277] = 13'h0209;
    Wi_rd[278] = 13'h0222;
    Wi_rd[279] = 13'h023a;
    Wi_rd[280] = 13'h0252;
    Wi_rd[281] = 13'h026a;
    Wi_rd[282] = 13'h0282;
    Wi_rd[283] = 13'h029a;
    Wi_rd[284] = 13'h02b1;
    Wi_rd[285] = 13'h02c9;
    Wi_rd[286] = 13'h02e1;
    Wi_rd[287] = 13'h02f8;
    Wi_rd[288] = 13'h030f;
    Wi_rd[289] = 13'h0326;
    Wi_rd[290] = 13'h033d;
    Wi_rd[291] = 13'h0354;
    Wi_rd[292] = 13'h036b;
    Wi_rd[293] = 13'h0382;
    Wi_rd[294] = 13'h0398;
    Wi_rd[295] = 13'h03af;
    Wi_rd[296] = 13'h03c5;
    Wi_rd[297] = 13'h03db;
    Wi_rd[298] = 13'h03f1;
    Wi_rd[299] = 13'h0407;
    Wi_rd[300] = 13'h041c;
    Wi_rd[301] = 13'h0432;
    Wi_rd[302] = 13'h0447;
    Wi_rd[303] = 13'h045c;
    Wi_rd[304] = 13'h0471;
    Wi_rd[305] = 13'h0486;
    Wi_rd[306] = 13'h049b;
    Wi_rd[307] = 13'h04af;
    Wi_rd[308] = 13'h04c3;
    Wi_rd[309] = 13'h04d8;
    Wi_rd[310] = 13'h04eb;
    Wi_rd[311] = 13'h04ff;
    Wi_rd[312] = 13'h0513;
    Wi_rd[313] = 13'h0526;
    Wi_rd[314] = 13'h0539;
    Wi_rd[315] = 13'h054c;
    Wi_rd[316] = 13'h055f;
    Wi_rd[317] = 13'h0571;
    Wi_rd[318] = 13'h0584;
    Wi_rd[319] = 13'h0596;
    Wi_rd[320] = 13'h05a8;
    Wi_rd[321] = 13'h05b9;
    Wi_rd[322] = 13'h05cb;
    Wi_rd[323] = 13'h05dc;
    Wi_rd[324] = 13'h05ed;
    Wi_rd[325] = 13'h05fe;
    Wi_rd[326] = 13'h060e;
    Wi_rd[327] = 13'h061f;
    Wi_rd[328] = 13'h062f;
    Wi_rd[329] = 13'h063e;
    Wi_rd[330] = 13'h064e;
    Wi_rd[331] = 13'h065d;
    Wi_rd[332] = 13'h066c;
    Wi_rd[333] = 13'h067b;
    Wi_rd[334] = 13'h068a;
    Wi_rd[335] = 13'h0698;
    Wi_rd[336] = 13'h06a6;
    Wi_rd[337] = 13'h06b4;
    Wi_rd[338] = 13'h06c2;
    Wi_rd[339] = 13'h06cf;
    Wi_rd[340] = 13'h06dc;
    Wi_rd[341] = 13'h06e9;
    Wi_rd[342] = 13'h06f5;
    Wi_rd[343] = 13'h0702;
    Wi_rd[344] = 13'h070e;
    Wi_rd[345] = 13'h0719;
    Wi_rd[346] = 13'h0725;
    Wi_rd[347] = 13'h0730;
    Wi_rd[348] = 13'h073b;
    Wi_rd[349] = 13'h0745;
    Wi_rd[350] = 13'h0750;
    Wi_rd[351] = 13'h075a;
    Wi_rd[352] = 13'h0764;
    Wi_rd[353] = 13'h076d;
    Wi_rd[354] = 13'h0776;
    Wi_rd[355] = 13'h077f;
    Wi_rd[356] = 13'h0788;
    Wi_rd[357] = 13'h0790;
    Wi_rd[358] = 13'h0798;
    Wi_rd[359] = 13'h07a0;
    Wi_rd[360] = 13'h07a7;
    Wi_rd[361] = 13'h07ae;
    Wi_rd[362] = 13'h07b5;
    Wi_rd[363] = 13'h07bc;
    Wi_rd[364] = 13'h07c2;
    Wi_rd[365] = 13'h07c8;
    Wi_rd[366] = 13'h07ce;
    Wi_rd[367] = 13'h07d3;
    Wi_rd[368] = 13'h07d8;
    Wi_rd[369] = 13'h07dd;
    Wi_rd[370] = 13'h07e1;
    Wi_rd[371] = 13'h07e5;
    Wi_rd[372] = 13'h07e9;
    Wi_rd[373] = 13'h07ed;
    Wi_rd[374] = 13'h07f0;
    Wi_rd[375] = 13'h07f3;
    Wi_rd[376] = 13'h07f6;
    Wi_rd[377] = 13'h07f8;
    Wi_rd[378] = 13'h07fa;
    Wi_rd[379] = 13'h07fc;
    Wi_rd[380] = 13'h07fd;
    Wi_rd[381] = 13'h07fe;
    Wi_rd[382] = 13'h07ff;
    Wi_rd[383] = 13'h07ff;
    Wi_rd[384] = 13'h0800;
    Wi_rd[385] = 13'h07ff;
    Wi_rd[386] = 13'h07ff;
    Wi_rd[387] = 13'h07fe;
    Wi_rd[388] = 13'h07fd;
    Wi_rd[389] = 13'h07fc;
    Wi_rd[390] = 13'h07fa;
    Wi_rd[391] = 13'h07f8;
    Wi_rd[392] = 13'h07f6;
    Wi_rd[393] = 13'h07f3;
    Wi_rd[394] = 13'h07f0;
    Wi_rd[395] = 13'h07ed;
    Wi_rd[396] = 13'h07e9;
    Wi_rd[397] = 13'h07e5;
    Wi_rd[398] = 13'h07e1;
    Wi_rd[399] = 13'h07dd;
    Wi_rd[400] = 13'h07d8;
    Wi_rd[401] = 13'h07d3;
    Wi_rd[402] = 13'h07ce;
    Wi_rd[403] = 13'h07c8;
    Wi_rd[404] = 13'h07c2;
    Wi_rd[405] = 13'h07bc;
    Wi_rd[406] = 13'h07b5;
    Wi_rd[407] = 13'h07ae;
    Wi_rd[408] = 13'h07a7;
    Wi_rd[409] = 13'h07a0;
    Wi_rd[410] = 13'h0798;
    Wi_rd[411] = 13'h0790;
    Wi_rd[412] = 13'h0788;
    Wi_rd[413] = 13'h077f;
    Wi_rd[414] = 13'h0776;
    Wi_rd[415] = 13'h076d;
    Wi_rd[416] = 13'h0764;
    Wi_rd[417] = 13'h075a;
    Wi_rd[418] = 13'h0750;
    Wi_rd[419] = 13'h0745;
    Wi_rd[420] = 13'h073b;
    Wi_rd[421] = 13'h0730;
    Wi_rd[422] = 13'h0725;
    Wi_rd[423] = 13'h0719;
    Wi_rd[424] = 13'h070e;
    Wi_rd[425] = 13'h0702;
    Wi_rd[426] = 13'h06f5;
    Wi_rd[427] = 13'h06e9;
    Wi_rd[428] = 13'h06dc;
    Wi_rd[429] = 13'h06cf;
    Wi_rd[430] = 13'h06c2;
    Wi_rd[431] = 13'h06b4;
    Wi_rd[432] = 13'h06a6;
    Wi_rd[433] = 13'h0698;
    Wi_rd[434] = 13'h068a;
    Wi_rd[435] = 13'h067b;
    Wi_rd[436] = 13'h066c;
    Wi_rd[437] = 13'h065d;
    Wi_rd[438] = 13'h064e;
    Wi_rd[439] = 13'h063e;
    Wi_rd[440] = 13'h062f;
    Wi_rd[441] = 13'h061f;
    Wi_rd[442] = 13'h060e;
    Wi_rd[443] = 13'h05fe;
    Wi_rd[444] = 13'h05ed;
    Wi_rd[445] = 13'h05dc;
    Wi_rd[446] = 13'h05cb;
    Wi_rd[447] = 13'h05b9;
    Wi_rd[448] = 13'h05a8;
    Wi_rd[449] = 13'h0596;
    Wi_rd[450] = 13'h0584;
    Wi_rd[451] = 13'h0571;
    Wi_rd[452] = 13'h055f;
    Wi_rd[453] = 13'h054c;
    Wi_rd[454] = 13'h0539;
    Wi_rd[455] = 13'h0526;
    Wi_rd[456] = 13'h0513;
    Wi_rd[457] = 13'h04ff;
    Wi_rd[458] = 13'h04eb;
    Wi_rd[459] = 13'h04d8;
    Wi_rd[460] = 13'h04c3;
    Wi_rd[461] = 13'h04af;
    Wi_rd[462] = 13'h049b;
    Wi_rd[463] = 13'h0486;
    Wi_rd[464] = 13'h0471;
    Wi_rd[465] = 13'h045c;
    Wi_rd[466] = 13'h0447;
    Wi_rd[467] = 13'h0432;
    Wi_rd[468] = 13'h041c;
    Wi_rd[469] = 13'h0407;
    Wi_rd[470] = 13'h03f1;
    Wi_rd[471] = 13'h03db;
    Wi_rd[472] = 13'h03c5;
    Wi_rd[473] = 13'h03af;
    Wi_rd[474] = 13'h0398;
    Wi_rd[475] = 13'h0382;
    Wi_rd[476] = 13'h036b;
    Wi_rd[477] = 13'h0354;
    Wi_rd[478] = 13'h033d;
    Wi_rd[479] = 13'h0326;
    Wi_rd[480] = 13'h030f;
    Wi_rd[481] = 13'h02f8;
    Wi_rd[482] = 13'h02e1;
    Wi_rd[483] = 13'h02c9;
    Wi_rd[484] = 13'h02b1;
    Wi_rd[485] = 13'h029a;
    Wi_rd[486] = 13'h0282;
    Wi_rd[487] = 13'h026a;
    Wi_rd[488] = 13'h0252;
    Wi_rd[489] = 13'h023a;
    Wi_rd[490] = 13'h0222;
    Wi_rd[491] = 13'h0209;
    Wi_rd[492] = 13'h01f1;
    Wi_rd[493] = 13'h01d9;
    Wi_rd[494] = 13'h01c0;
    Wi_rd[495] = 13'h01a8;
    Wi_rd[496] = 13'h018f;
    Wi_rd[497] = 13'h0176;
    Wi_rd[498] = 13'h015e;
    Wi_rd[499] = 13'h0145;
    Wi_rd[500] = 13'h012c;
    Wi_rd[501] = 13'h0113;
    Wi_rd[502] = 13'h00fa;
    Wi_rd[503] = 13'h00e1;
    Wi_rd[504] = 13'h00c8;
    Wi_rd[505] = 13'h00af;
    Wi_rd[506] = 13'h0096;
    Wi_rd[507] = 13'h007d;
    Wi_rd[508] = 13'h0064;
    Wi_rd[509] = 13'h004b;
    Wi_rd[510] = 13'h0032;
    Wi_rd[511] = 13'h0019;
  end
  reg [12:0] _0_;
  always @(posedge clk) begin
    _0_ <= Wi_rd[\$9 [8:0]];
  end
  assign wi = _0_;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:109" *)
  reg [12:0] Wr_rd [511:0];
  initial begin
    Wr_rd[0] = 13'h0800;
    Wr_rd[1] = 13'h07ff;
    Wr_rd[2] = 13'h07ff;
    Wr_rd[3] = 13'h07fe;
    Wr_rd[4] = 13'h07fd;
    Wr_rd[5] = 13'h07fc;
    Wr_rd[6] = 13'h07fa;
    Wr_rd[7] = 13'h07f8;
    Wr_rd[8] = 13'h07f6;
    Wr_rd[9] = 13'h07f3;
    Wr_rd[10] = 13'h07f0;
    Wr_rd[11] = 13'h07ed;
    Wr_rd[12] = 13'h07e9;
    Wr_rd[13] = 13'h07e5;
    Wr_rd[14] = 13'h07e1;
    Wr_rd[15] = 13'h07dd;
    Wr_rd[16] = 13'h07d8;
    Wr_rd[17] = 13'h07d3;
    Wr_rd[18] = 13'h07ce;
    Wr_rd[19] = 13'h07c8;
    Wr_rd[20] = 13'h07c2;
    Wr_rd[21] = 13'h07bc;
    Wr_rd[22] = 13'h07b5;
    Wr_rd[23] = 13'h07ae;
    Wr_rd[24] = 13'h07a7;
    Wr_rd[25] = 13'h07a0;
    Wr_rd[26] = 13'h0798;
    Wr_rd[27] = 13'h0790;
    Wr_rd[28] = 13'h0788;
    Wr_rd[29] = 13'h077f;
    Wr_rd[30] = 13'h0776;
    Wr_rd[31] = 13'h076d;
    Wr_rd[32] = 13'h0764;
    Wr_rd[33] = 13'h075a;
    Wr_rd[34] = 13'h0750;
    Wr_rd[35] = 13'h0745;
    Wr_rd[36] = 13'h073b;
    Wr_rd[37] = 13'h0730;
    Wr_rd[38] = 13'h0725;
    Wr_rd[39] = 13'h0719;
    Wr_rd[40] = 13'h070e;
    Wr_rd[41] = 13'h0702;
    Wr_rd[42] = 13'h06f5;
    Wr_rd[43] = 13'h06e9;
    Wr_rd[44] = 13'h06dc;
    Wr_rd[45] = 13'h06cf;
    Wr_rd[46] = 13'h06c2;
    Wr_rd[47] = 13'h06b4;
    Wr_rd[48] = 13'h06a6;
    Wr_rd[49] = 13'h0698;
    Wr_rd[50] = 13'h068a;
    Wr_rd[51] = 13'h067b;
    Wr_rd[52] = 13'h066c;
    Wr_rd[53] = 13'h065d;
    Wr_rd[54] = 13'h064e;
    Wr_rd[55] = 13'h063e;
    Wr_rd[56] = 13'h062f;
    Wr_rd[57] = 13'h061f;
    Wr_rd[58] = 13'h060e;
    Wr_rd[59] = 13'h05fe;
    Wr_rd[60] = 13'h05ed;
    Wr_rd[61] = 13'h05dc;
    Wr_rd[62] = 13'h05cb;
    Wr_rd[63] = 13'h05b9;
    Wr_rd[64] = 13'h05a8;
    Wr_rd[65] = 13'h0596;
    Wr_rd[66] = 13'h0584;
    Wr_rd[67] = 13'h0571;
    Wr_rd[68] = 13'h055f;
    Wr_rd[69] = 13'h054c;
    Wr_rd[70] = 13'h0539;
    Wr_rd[71] = 13'h0526;
    Wr_rd[72] = 13'h0513;
    Wr_rd[73] = 13'h04ff;
    Wr_rd[74] = 13'h04eb;
    Wr_rd[75] = 13'h04d8;
    Wr_rd[76] = 13'h04c3;
    Wr_rd[77] = 13'h04af;
    Wr_rd[78] = 13'h049b;
    Wr_rd[79] = 13'h0486;
    Wr_rd[80] = 13'h0471;
    Wr_rd[81] = 13'h045c;
    Wr_rd[82] = 13'h0447;
    Wr_rd[83] = 13'h0432;
    Wr_rd[84] = 13'h041c;
    Wr_rd[85] = 13'h0407;
    Wr_rd[86] = 13'h03f1;
    Wr_rd[87] = 13'h03db;
    Wr_rd[88] = 13'h03c5;
    Wr_rd[89] = 13'h03af;
    Wr_rd[90] = 13'h0398;
    Wr_rd[91] = 13'h0382;
    Wr_rd[92] = 13'h036b;
    Wr_rd[93] = 13'h0354;
    Wr_rd[94] = 13'h033d;
    Wr_rd[95] = 13'h0326;
    Wr_rd[96] = 13'h030f;
    Wr_rd[97] = 13'h02f8;
    Wr_rd[98] = 13'h02e1;
    Wr_rd[99] = 13'h02c9;
    Wr_rd[100] = 13'h02b1;
    Wr_rd[101] = 13'h029a;
    Wr_rd[102] = 13'h0282;
    Wr_rd[103] = 13'h026a;
    Wr_rd[104] = 13'h0252;
    Wr_rd[105] = 13'h023a;
    Wr_rd[106] = 13'h0222;
    Wr_rd[107] = 13'h0209;
    Wr_rd[108] = 13'h01f1;
    Wr_rd[109] = 13'h01d9;
    Wr_rd[110] = 13'h01c0;
    Wr_rd[111] = 13'h01a8;
    Wr_rd[112] = 13'h018f;
    Wr_rd[113] = 13'h0176;
    Wr_rd[114] = 13'h015e;
    Wr_rd[115] = 13'h0145;
    Wr_rd[116] = 13'h012c;
    Wr_rd[117] = 13'h0113;
    Wr_rd[118] = 13'h00fa;
    Wr_rd[119] = 13'h00e1;
    Wr_rd[120] = 13'h00c8;
    Wr_rd[121] = 13'h00af;
    Wr_rd[122] = 13'h0096;
    Wr_rd[123] = 13'h007d;
    Wr_rd[124] = 13'h0064;
    Wr_rd[125] = 13'h004b;
    Wr_rd[126] = 13'h0032;
    Wr_rd[127] = 13'h0019;
    Wr_rd[128] = 13'h0000;
    Wr_rd[129] = 13'h1fe7;
    Wr_rd[130] = 13'h1fce;
    Wr_rd[131] = 13'h1fb5;
    Wr_rd[132] = 13'h1f9c;
    Wr_rd[133] = 13'h1f83;
    Wr_rd[134] = 13'h1f6a;
    Wr_rd[135] = 13'h1f51;
    Wr_rd[136] = 13'h1f38;
    Wr_rd[137] = 13'h1f1f;
    Wr_rd[138] = 13'h1f06;
    Wr_rd[139] = 13'h1eed;
    Wr_rd[140] = 13'h1ed4;
    Wr_rd[141] = 13'h1ebb;
    Wr_rd[142] = 13'h1ea2;
    Wr_rd[143] = 13'h1e8a;
    Wr_rd[144] = 13'h1e71;
    Wr_rd[145] = 13'h1e58;
    Wr_rd[146] = 13'h1e40;
    Wr_rd[147] = 13'h1e27;
    Wr_rd[148] = 13'h1e0f;
    Wr_rd[149] = 13'h1df7;
    Wr_rd[150] = 13'h1dde;
    Wr_rd[151] = 13'h1dc6;
    Wr_rd[152] = 13'h1dae;
    Wr_rd[153] = 13'h1d96;
    Wr_rd[154] = 13'h1d7e;
    Wr_rd[155] = 13'h1d66;
    Wr_rd[156] = 13'h1d4f;
    Wr_rd[157] = 13'h1d37;
    Wr_rd[158] = 13'h1d1f;
    Wr_rd[159] = 13'h1d08;
    Wr_rd[160] = 13'h1cf1;
    Wr_rd[161] = 13'h1cda;
    Wr_rd[162] = 13'h1cc3;
    Wr_rd[163] = 13'h1cac;
    Wr_rd[164] = 13'h1c95;
    Wr_rd[165] = 13'h1c7e;
    Wr_rd[166] = 13'h1c68;
    Wr_rd[167] = 13'h1c51;
    Wr_rd[168] = 13'h1c3b;
    Wr_rd[169] = 13'h1c25;
    Wr_rd[170] = 13'h1c0f;
    Wr_rd[171] = 13'h1bf9;
    Wr_rd[172] = 13'h1be4;
    Wr_rd[173] = 13'h1bce;
    Wr_rd[174] = 13'h1bb9;
    Wr_rd[175] = 13'h1ba4;
    Wr_rd[176] = 13'h1b8f;
    Wr_rd[177] = 13'h1b7a;
    Wr_rd[178] = 13'h1b65;
    Wr_rd[179] = 13'h1b51;
    Wr_rd[180] = 13'h1b3d;
    Wr_rd[181] = 13'h1b28;
    Wr_rd[182] = 13'h1b15;
    Wr_rd[183] = 13'h1b01;
    Wr_rd[184] = 13'h1aed;
    Wr_rd[185] = 13'h1ada;
    Wr_rd[186] = 13'h1ac7;
    Wr_rd[187] = 13'h1ab4;
    Wr_rd[188] = 13'h1aa1;
    Wr_rd[189] = 13'h1a8f;
    Wr_rd[190] = 13'h1a7c;
    Wr_rd[191] = 13'h1a6a;
    Wr_rd[192] = 13'h1a58;
    Wr_rd[193] = 13'h1a47;
    Wr_rd[194] = 13'h1a35;
    Wr_rd[195] = 13'h1a24;
    Wr_rd[196] = 13'h1a13;
    Wr_rd[197] = 13'h1a02;
    Wr_rd[198] = 13'h19f2;
    Wr_rd[199] = 13'h19e1;
    Wr_rd[200] = 13'h19d1;
    Wr_rd[201] = 13'h19c2;
    Wr_rd[202] = 13'h19b2;
    Wr_rd[203] = 13'h19a3;
    Wr_rd[204] = 13'h1994;
    Wr_rd[205] = 13'h1985;
    Wr_rd[206] = 13'h1976;
    Wr_rd[207] = 13'h1968;
    Wr_rd[208] = 13'h195a;
    Wr_rd[209] = 13'h194c;
    Wr_rd[210] = 13'h193e;
    Wr_rd[211] = 13'h1931;
    Wr_rd[212] = 13'h1924;
    Wr_rd[213] = 13'h1917;
    Wr_rd[214] = 13'h190b;
    Wr_rd[215] = 13'h18fe;
    Wr_rd[216] = 13'h18f2;
    Wr_rd[217] = 13'h18e7;
    Wr_rd[218] = 13'h18db;
    Wr_rd[219] = 13'h18d0;
    Wr_rd[220] = 13'h18c5;
    Wr_rd[221] = 13'h18bb;
    Wr_rd[222] = 13'h18b0;
    Wr_rd[223] = 13'h18a6;
    Wr_rd[224] = 13'h189c;
    Wr_rd[225] = 13'h1893;
    Wr_rd[226] = 13'h188a;
    Wr_rd[227] = 13'h1881;
    Wr_rd[228] = 13'h1878;
    Wr_rd[229] = 13'h1870;
    Wr_rd[230] = 13'h1868;
    Wr_rd[231] = 13'h1860;
    Wr_rd[232] = 13'h1859;
    Wr_rd[233] = 13'h1852;
    Wr_rd[234] = 13'h184b;
    Wr_rd[235] = 13'h1844;
    Wr_rd[236] = 13'h183e;
    Wr_rd[237] = 13'h1838;
    Wr_rd[238] = 13'h1832;
    Wr_rd[239] = 13'h182d;
    Wr_rd[240] = 13'h1828;
    Wr_rd[241] = 13'h1823;
    Wr_rd[242] = 13'h181f;
    Wr_rd[243] = 13'h181b;
    Wr_rd[244] = 13'h1817;
    Wr_rd[245] = 13'h1813;
    Wr_rd[246] = 13'h1810;
    Wr_rd[247] = 13'h180d;
    Wr_rd[248] = 13'h180a;
    Wr_rd[249] = 13'h1808;
    Wr_rd[250] = 13'h1806;
    Wr_rd[251] = 13'h1804;
    Wr_rd[252] = 13'h1803;
    Wr_rd[253] = 13'h1802;
    Wr_rd[254] = 13'h1801;
    Wr_rd[255] = 13'h1801;
    Wr_rd[256] = 13'h1800;
    Wr_rd[257] = 13'h1801;
    Wr_rd[258] = 13'h1801;
    Wr_rd[259] = 13'h1802;
    Wr_rd[260] = 13'h1803;
    Wr_rd[261] = 13'h1804;
    Wr_rd[262] = 13'h1806;
    Wr_rd[263] = 13'h1808;
    Wr_rd[264] = 13'h180a;
    Wr_rd[265] = 13'h180d;
    Wr_rd[266] = 13'h1810;
    Wr_rd[267] = 13'h1813;
    Wr_rd[268] = 13'h1817;
    Wr_rd[269] = 13'h181b;
    Wr_rd[270] = 13'h181f;
    Wr_rd[271] = 13'h1823;
    Wr_rd[272] = 13'h1828;
    Wr_rd[273] = 13'h182d;
    Wr_rd[274] = 13'h1832;
    Wr_rd[275] = 13'h1838;
    Wr_rd[276] = 13'h183e;
    Wr_rd[277] = 13'h1844;
    Wr_rd[278] = 13'h184b;
    Wr_rd[279] = 13'h1852;
    Wr_rd[280] = 13'h1859;
    Wr_rd[281] = 13'h1860;
    Wr_rd[282] = 13'h1868;
    Wr_rd[283] = 13'h1870;
    Wr_rd[284] = 13'h1878;
    Wr_rd[285] = 13'h1881;
    Wr_rd[286] = 13'h188a;
    Wr_rd[287] = 13'h1893;
    Wr_rd[288] = 13'h189c;
    Wr_rd[289] = 13'h18a6;
    Wr_rd[290] = 13'h18b0;
    Wr_rd[291] = 13'h18bb;
    Wr_rd[292] = 13'h18c5;
    Wr_rd[293] = 13'h18d0;
    Wr_rd[294] = 13'h18db;
    Wr_rd[295] = 13'h18e7;
    Wr_rd[296] = 13'h18f2;
    Wr_rd[297] = 13'h18fe;
    Wr_rd[298] = 13'h190b;
    Wr_rd[299] = 13'h1917;
    Wr_rd[300] = 13'h1924;
    Wr_rd[301] = 13'h1931;
    Wr_rd[302] = 13'h193e;
    Wr_rd[303] = 13'h194c;
    Wr_rd[304] = 13'h195a;
    Wr_rd[305] = 13'h1968;
    Wr_rd[306] = 13'h1976;
    Wr_rd[307] = 13'h1985;
    Wr_rd[308] = 13'h1994;
    Wr_rd[309] = 13'h19a3;
    Wr_rd[310] = 13'h19b2;
    Wr_rd[311] = 13'h19c2;
    Wr_rd[312] = 13'h19d1;
    Wr_rd[313] = 13'h19e1;
    Wr_rd[314] = 13'h19f2;
    Wr_rd[315] = 13'h1a02;
    Wr_rd[316] = 13'h1a13;
    Wr_rd[317] = 13'h1a24;
    Wr_rd[318] = 13'h1a35;
    Wr_rd[319] = 13'h1a47;
    Wr_rd[320] = 13'h1a58;
    Wr_rd[321] = 13'h1a6a;
    Wr_rd[322] = 13'h1a7c;
    Wr_rd[323] = 13'h1a8f;
    Wr_rd[324] = 13'h1aa1;
    Wr_rd[325] = 13'h1ab4;
    Wr_rd[326] = 13'h1ac7;
    Wr_rd[327] = 13'h1ada;
    Wr_rd[328] = 13'h1aed;
    Wr_rd[329] = 13'h1b01;
    Wr_rd[330] = 13'h1b15;
    Wr_rd[331] = 13'h1b28;
    Wr_rd[332] = 13'h1b3d;
    Wr_rd[333] = 13'h1b51;
    Wr_rd[334] = 13'h1b65;
    Wr_rd[335] = 13'h1b7a;
    Wr_rd[336] = 13'h1b8f;
    Wr_rd[337] = 13'h1ba4;
    Wr_rd[338] = 13'h1bb9;
    Wr_rd[339] = 13'h1bce;
    Wr_rd[340] = 13'h1be4;
    Wr_rd[341] = 13'h1bf9;
    Wr_rd[342] = 13'h1c0f;
    Wr_rd[343] = 13'h1c25;
    Wr_rd[344] = 13'h1c3b;
    Wr_rd[345] = 13'h1c51;
    Wr_rd[346] = 13'h1c68;
    Wr_rd[347] = 13'h1c7e;
    Wr_rd[348] = 13'h1c95;
    Wr_rd[349] = 13'h1cac;
    Wr_rd[350] = 13'h1cc3;
    Wr_rd[351] = 13'h1cda;
    Wr_rd[352] = 13'h1cf1;
    Wr_rd[353] = 13'h1d08;
    Wr_rd[354] = 13'h1d1f;
    Wr_rd[355] = 13'h1d37;
    Wr_rd[356] = 13'h1d4f;
    Wr_rd[357] = 13'h1d66;
    Wr_rd[358] = 13'h1d7e;
    Wr_rd[359] = 13'h1d96;
    Wr_rd[360] = 13'h1dae;
    Wr_rd[361] = 13'h1dc6;
    Wr_rd[362] = 13'h1dde;
    Wr_rd[363] = 13'h1df7;
    Wr_rd[364] = 13'h1e0f;
    Wr_rd[365] = 13'h1e27;
    Wr_rd[366] = 13'h1e40;
    Wr_rd[367] = 13'h1e58;
    Wr_rd[368] = 13'h1e71;
    Wr_rd[369] = 13'h1e8a;
    Wr_rd[370] = 13'h1ea2;
    Wr_rd[371] = 13'h1ebb;
    Wr_rd[372] = 13'h1ed4;
    Wr_rd[373] = 13'h1eed;
    Wr_rd[374] = 13'h1f06;
    Wr_rd[375] = 13'h1f1f;
    Wr_rd[376] = 13'h1f38;
    Wr_rd[377] = 13'h1f51;
    Wr_rd[378] = 13'h1f6a;
    Wr_rd[379] = 13'h1f83;
    Wr_rd[380] = 13'h1f9c;
    Wr_rd[381] = 13'h1fb5;
    Wr_rd[382] = 13'h1fce;
    Wr_rd[383] = 13'h1fe7;
    Wr_rd[384] = 13'h0000;
    Wr_rd[385] = 13'h0019;
    Wr_rd[386] = 13'h0032;
    Wr_rd[387] = 13'h004b;
    Wr_rd[388] = 13'h0064;
    Wr_rd[389] = 13'h007d;
    Wr_rd[390] = 13'h0096;
    Wr_rd[391] = 13'h00af;
    Wr_rd[392] = 13'h00c8;
    Wr_rd[393] = 13'h00e1;
    Wr_rd[394] = 13'h00fa;
    Wr_rd[395] = 13'h0113;
    Wr_rd[396] = 13'h012c;
    Wr_rd[397] = 13'h0145;
    Wr_rd[398] = 13'h015e;
    Wr_rd[399] = 13'h0176;
    Wr_rd[400] = 13'h018f;
    Wr_rd[401] = 13'h01a8;
    Wr_rd[402] = 13'h01c0;
    Wr_rd[403] = 13'h01d9;
    Wr_rd[404] = 13'h01f1;
    Wr_rd[405] = 13'h0209;
    Wr_rd[406] = 13'h0222;
    Wr_rd[407] = 13'h023a;
    Wr_rd[408] = 13'h0252;
    Wr_rd[409] = 13'h026a;
    Wr_rd[410] = 13'h0282;
    Wr_rd[411] = 13'h029a;
    Wr_rd[412] = 13'h02b1;
    Wr_rd[413] = 13'h02c9;
    Wr_rd[414] = 13'h02e1;
    Wr_rd[415] = 13'h02f8;
    Wr_rd[416] = 13'h030f;
    Wr_rd[417] = 13'h0326;
    Wr_rd[418] = 13'h033d;
    Wr_rd[419] = 13'h0354;
    Wr_rd[420] = 13'h036b;
    Wr_rd[421] = 13'h0382;
    Wr_rd[422] = 13'h0398;
    Wr_rd[423] = 13'h03af;
    Wr_rd[424] = 13'h03c5;
    Wr_rd[425] = 13'h03db;
    Wr_rd[426] = 13'h03f1;
    Wr_rd[427] = 13'h0407;
    Wr_rd[428] = 13'h041c;
    Wr_rd[429] = 13'h0432;
    Wr_rd[430] = 13'h0447;
    Wr_rd[431] = 13'h045c;
    Wr_rd[432] = 13'h0471;
    Wr_rd[433] = 13'h0486;
    Wr_rd[434] = 13'h049b;
    Wr_rd[435] = 13'h04af;
    Wr_rd[436] = 13'h04c3;
    Wr_rd[437] = 13'h04d8;
    Wr_rd[438] = 13'h04eb;
    Wr_rd[439] = 13'h04ff;
    Wr_rd[440] = 13'h0513;
    Wr_rd[441] = 13'h0526;
    Wr_rd[442] = 13'h0539;
    Wr_rd[443] = 13'h054c;
    Wr_rd[444] = 13'h055f;
    Wr_rd[445] = 13'h0571;
    Wr_rd[446] = 13'h0584;
    Wr_rd[447] = 13'h0596;
    Wr_rd[448] = 13'h05a8;
    Wr_rd[449] = 13'h05b9;
    Wr_rd[450] = 13'h05cb;
    Wr_rd[451] = 13'h05dc;
    Wr_rd[452] = 13'h05ed;
    Wr_rd[453] = 13'h05fe;
    Wr_rd[454] = 13'h060e;
    Wr_rd[455] = 13'h061f;
    Wr_rd[456] = 13'h062f;
    Wr_rd[457] = 13'h063e;
    Wr_rd[458] = 13'h064e;
    Wr_rd[459] = 13'h065d;
    Wr_rd[460] = 13'h066c;
    Wr_rd[461] = 13'h067b;
    Wr_rd[462] = 13'h068a;
    Wr_rd[463] = 13'h0698;
    Wr_rd[464] = 13'h06a6;
    Wr_rd[465] = 13'h06b4;
    Wr_rd[466] = 13'h06c2;
    Wr_rd[467] = 13'h06cf;
    Wr_rd[468] = 13'h06dc;
    Wr_rd[469] = 13'h06e9;
    Wr_rd[470] = 13'h06f5;
    Wr_rd[471] = 13'h0702;
    Wr_rd[472] = 13'h070e;
    Wr_rd[473] = 13'h0719;
    Wr_rd[474] = 13'h0725;
    Wr_rd[475] = 13'h0730;
    Wr_rd[476] = 13'h073b;
    Wr_rd[477] = 13'h0745;
    Wr_rd[478] = 13'h0750;
    Wr_rd[479] = 13'h075a;
    Wr_rd[480] = 13'h0764;
    Wr_rd[481] = 13'h076d;
    Wr_rd[482] = 13'h0776;
    Wr_rd[483] = 13'h077f;
    Wr_rd[484] = 13'h0788;
    Wr_rd[485] = 13'h0790;
    Wr_rd[486] = 13'h0798;
    Wr_rd[487] = 13'h07a0;
    Wr_rd[488] = 13'h07a7;
    Wr_rd[489] = 13'h07ae;
    Wr_rd[490] = 13'h07b5;
    Wr_rd[491] = 13'h07bc;
    Wr_rd[492] = 13'h07c2;
    Wr_rd[493] = 13'h07c8;
    Wr_rd[494] = 13'h07ce;
    Wr_rd[495] = 13'h07d3;
    Wr_rd[496] = 13'h07d8;
    Wr_rd[497] = 13'h07dd;
    Wr_rd[498] = 13'h07e1;
    Wr_rd[499] = 13'h07e5;
    Wr_rd[500] = 13'h07e9;
    Wr_rd[501] = 13'h07ed;
    Wr_rd[502] = 13'h07f0;
    Wr_rd[503] = 13'h07f3;
    Wr_rd[504] = 13'h07f6;
    Wr_rd[505] = 13'h07f8;
    Wr_rd[506] = 13'h07fa;
    Wr_rd[507] = 13'h07fc;
    Wr_rd[508] = 13'h07fd;
    Wr_rd[509] = 13'h07fe;
    Wr_rd[510] = 13'h07ff;
    Wr_rd[511] = 13'h07ff;
  end
  reg [12:0] _1_;
  always @(posedge clk) begin
    _1_ <= Wr_rd[\$9 [8:0]];
  end
  assign wr = _1_;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:108" *)
  reg [12:0] wFi_rd [511:0];
  initial begin
    wFi_rd[0] = 13'h0000;
    wFi_rd[1] = 13'h0000;
    wFi_rd[2] = 13'h0000;
    wFi_rd[3] = 13'h0000;
    wFi_rd[4] = 13'h0000;
    wFi_rd[5] = 13'h0000;
    wFi_rd[6] = 13'h0000;
    wFi_rd[7] = 13'h0000;
    wFi_rd[8] = 13'h0000;
    wFi_rd[9] = 13'h0000;
    wFi_rd[10] = 13'h0000;
    wFi_rd[11] = 13'h0000;
    wFi_rd[12] = 13'h0000;
    wFi_rd[13] = 13'h0000;
    wFi_rd[14] = 13'h0000;
    wFi_rd[15] = 13'h0000;
    wFi_rd[16] = 13'h0000;
    wFi_rd[17] = 13'h0000;
    wFi_rd[18] = 13'h0000;
    wFi_rd[19] = 13'h0000;
    wFi_rd[20] = 13'h0000;
    wFi_rd[21] = 13'h0000;
    wFi_rd[22] = 13'h0000;
    wFi_rd[23] = 13'h0000;
    wFi_rd[24] = 13'h0000;
    wFi_rd[25] = 13'h0000;
    wFi_rd[26] = 13'h0000;
    wFi_rd[27] = 13'h0000;
    wFi_rd[28] = 13'h0000;
    wFi_rd[29] = 13'h0000;
    wFi_rd[30] = 13'h0000;
    wFi_rd[31] = 13'h0000;
    wFi_rd[32] = 13'h0000;
    wFi_rd[33] = 13'h0000;
    wFi_rd[34] = 13'h0000;
    wFi_rd[35] = 13'h0000;
    wFi_rd[36] = 13'h0000;
    wFi_rd[37] = 13'h0000;
    wFi_rd[38] = 13'h0000;
    wFi_rd[39] = 13'h0000;
    wFi_rd[40] = 13'h0000;
    wFi_rd[41] = 13'h0000;
    wFi_rd[42] = 13'h0000;
    wFi_rd[43] = 13'h0000;
    wFi_rd[44] = 13'h0000;
    wFi_rd[45] = 13'h0000;
    wFi_rd[46] = 13'h0000;
    wFi_rd[47] = 13'h0000;
    wFi_rd[48] = 13'h0000;
    wFi_rd[49] = 13'h0000;
    wFi_rd[50] = 13'h0000;
    wFi_rd[51] = 13'h0000;
    wFi_rd[52] = 13'h0000;
    wFi_rd[53] = 13'h0000;
    wFi_rd[54] = 13'h0000;
    wFi_rd[55] = 13'h0000;
    wFi_rd[56] = 13'h0000;
    wFi_rd[57] = 13'h0000;
    wFi_rd[58] = 13'h0000;
    wFi_rd[59] = 13'h0000;
    wFi_rd[60] = 13'h0000;
    wFi_rd[61] = 13'h0000;
    wFi_rd[62] = 13'h0000;
    wFi_rd[63] = 13'h0000;
    wFi_rd[64] = 13'h0000;
    wFi_rd[65] = 13'h0000;
    wFi_rd[66] = 13'h0000;
    wFi_rd[67] = 13'h0000;
    wFi_rd[68] = 13'h0000;
    wFi_rd[69] = 13'h0000;
    wFi_rd[70] = 13'h0000;
    wFi_rd[71] = 13'h0000;
    wFi_rd[72] = 13'h0000;
    wFi_rd[73] = 13'h0000;
    wFi_rd[74] = 13'h0000;
    wFi_rd[75] = 13'h0000;
    wFi_rd[76] = 13'h0000;
    wFi_rd[77] = 13'h0000;
    wFi_rd[78] = 13'h0000;
    wFi_rd[79] = 13'h0000;
    wFi_rd[80] = 13'h0000;
    wFi_rd[81] = 13'h0000;
    wFi_rd[82] = 13'h0000;
    wFi_rd[83] = 13'h0000;
    wFi_rd[84] = 13'h0000;
    wFi_rd[85] = 13'h0000;
    wFi_rd[86] = 13'h0000;
    wFi_rd[87] = 13'h0000;
    wFi_rd[88] = 13'h0000;
    wFi_rd[89] = 13'h0000;
    wFi_rd[90] = 13'h0000;
    wFi_rd[91] = 13'h0000;
    wFi_rd[92] = 13'h0000;
    wFi_rd[93] = 13'h0000;
    wFi_rd[94] = 13'h0000;
    wFi_rd[95] = 13'h0000;
    wFi_rd[96] = 13'h0000;
    wFi_rd[97] = 13'h0000;
    wFi_rd[98] = 13'h0000;
    wFi_rd[99] = 13'h0000;
    wFi_rd[100] = 13'h0000;
    wFi_rd[101] = 13'h0000;
    wFi_rd[102] = 13'h0000;
    wFi_rd[103] = 13'h0000;
    wFi_rd[104] = 13'h0000;
    wFi_rd[105] = 13'h0000;
    wFi_rd[106] = 13'h0000;
    wFi_rd[107] = 13'h0000;
    wFi_rd[108] = 13'h0000;
    wFi_rd[109] = 13'h0000;
    wFi_rd[110] = 13'h0000;
    wFi_rd[111] = 13'h0000;
    wFi_rd[112] = 13'h0000;
    wFi_rd[113] = 13'h0000;
    wFi_rd[114] = 13'h0000;
    wFi_rd[115] = 13'h0000;
    wFi_rd[116] = 13'h0000;
    wFi_rd[117] = 13'h0000;
    wFi_rd[118] = 13'h0000;
    wFi_rd[119] = 13'h0000;
    wFi_rd[120] = 13'h0000;
    wFi_rd[121] = 13'h0000;
    wFi_rd[122] = 13'h0000;
    wFi_rd[123] = 13'h0000;
    wFi_rd[124] = 13'h0000;
    wFi_rd[125] = 13'h0000;
    wFi_rd[126] = 13'h0000;
    wFi_rd[127] = 13'h0000;
    wFi_rd[128] = 13'h0000;
    wFi_rd[129] = 13'h0000;
    wFi_rd[130] = 13'h0000;
    wFi_rd[131] = 13'h0000;
    wFi_rd[132] = 13'h0000;
    wFi_rd[133] = 13'h0000;
    wFi_rd[134] = 13'h0000;
    wFi_rd[135] = 13'h0000;
    wFi_rd[136] = 13'h0000;
    wFi_rd[137] = 13'h0000;
    wFi_rd[138] = 13'h0000;
    wFi_rd[139] = 13'h0000;
    wFi_rd[140] = 13'h0000;
    wFi_rd[141] = 13'h0000;
    wFi_rd[142] = 13'h0000;
    wFi_rd[143] = 13'h0000;
    wFi_rd[144] = 13'h0000;
    wFi_rd[145] = 13'h0000;
    wFi_rd[146] = 13'h0000;
    wFi_rd[147] = 13'h0000;
    wFi_rd[148] = 13'h0000;
    wFi_rd[149] = 13'h0000;
    wFi_rd[150] = 13'h0000;
    wFi_rd[151] = 13'h0000;
    wFi_rd[152] = 13'h0000;
    wFi_rd[153] = 13'h0000;
    wFi_rd[154] = 13'h0000;
    wFi_rd[155] = 13'h0000;
    wFi_rd[156] = 13'h0000;
    wFi_rd[157] = 13'h0000;
    wFi_rd[158] = 13'h0000;
    wFi_rd[159] = 13'h0000;
    wFi_rd[160] = 13'h0000;
    wFi_rd[161] = 13'h0000;
    wFi_rd[162] = 13'h0000;
    wFi_rd[163] = 13'h0000;
    wFi_rd[164] = 13'h0000;
    wFi_rd[165] = 13'h0000;
    wFi_rd[166] = 13'h0000;
    wFi_rd[167] = 13'h0000;
    wFi_rd[168] = 13'h0000;
    wFi_rd[169] = 13'h0000;
    wFi_rd[170] = 13'h0000;
    wFi_rd[171] = 13'h0000;
    wFi_rd[172] = 13'h0000;
    wFi_rd[173] = 13'h0000;
    wFi_rd[174] = 13'h0000;
    wFi_rd[175] = 13'h0000;
    wFi_rd[176] = 13'h0000;
    wFi_rd[177] = 13'h0000;
    wFi_rd[178] = 13'h0000;
    wFi_rd[179] = 13'h0000;
    wFi_rd[180] = 13'h0000;
    wFi_rd[181] = 13'h0000;
    wFi_rd[182] = 13'h0000;
    wFi_rd[183] = 13'h0000;
    wFi_rd[184] = 13'h0000;
    wFi_rd[185] = 13'h0000;
    wFi_rd[186] = 13'h0000;
    wFi_rd[187] = 13'h0000;
    wFi_rd[188] = 13'h0000;
    wFi_rd[189] = 13'h0000;
    wFi_rd[190] = 13'h0000;
    wFi_rd[191] = 13'h0000;
    wFi_rd[192] = 13'h0000;
    wFi_rd[193] = 13'h0000;
    wFi_rd[194] = 13'h0000;
    wFi_rd[195] = 13'h0000;
    wFi_rd[196] = 13'h0000;
    wFi_rd[197] = 13'h0000;
    wFi_rd[198] = 13'h0000;
    wFi_rd[199] = 13'h0000;
    wFi_rd[200] = 13'h0000;
    wFi_rd[201] = 13'h0000;
    wFi_rd[202] = 13'h0000;
    wFi_rd[203] = 13'h0000;
    wFi_rd[204] = 13'h0000;
    wFi_rd[205] = 13'h0000;
    wFi_rd[206] = 13'h0000;
    wFi_rd[207] = 13'h0000;
    wFi_rd[208] = 13'h0000;
    wFi_rd[209] = 13'h0000;
    wFi_rd[210] = 13'h0000;
    wFi_rd[211] = 13'h0000;
    wFi_rd[212] = 13'h0000;
    wFi_rd[213] = 13'h0000;
    wFi_rd[214] = 13'h0000;
    wFi_rd[215] = 13'h0000;
    wFi_rd[216] = 13'h0000;
    wFi_rd[217] = 13'h0000;
    wFi_rd[218] = 13'h0000;
    wFi_rd[219] = 13'h0000;
    wFi_rd[220] = 13'h0000;
    wFi_rd[221] = 13'h0000;
    wFi_rd[222] = 13'h0000;
    wFi_rd[223] = 13'h0000;
    wFi_rd[224] = 13'h0000;
    wFi_rd[225] = 13'h0000;
    wFi_rd[226] = 13'h0000;
    wFi_rd[227] = 13'h0000;
    wFi_rd[228] = 13'h0000;
    wFi_rd[229] = 13'h0000;
    wFi_rd[230] = 13'h0000;
    wFi_rd[231] = 13'h0000;
    wFi_rd[232] = 13'h0000;
    wFi_rd[233] = 13'h0000;
    wFi_rd[234] = 13'h0000;
    wFi_rd[235] = 13'h0000;
    wFi_rd[236] = 13'h0000;
    wFi_rd[237] = 13'h0000;
    wFi_rd[238] = 13'h0000;
    wFi_rd[239] = 13'h0000;
    wFi_rd[240] = 13'h0000;
    wFi_rd[241] = 13'h0000;
    wFi_rd[242] = 13'h0000;
    wFi_rd[243] = 13'h0000;
    wFi_rd[244] = 13'h0000;
    wFi_rd[245] = 13'h0000;
    wFi_rd[246] = 13'h0000;
    wFi_rd[247] = 13'h0000;
    wFi_rd[248] = 13'h0000;
    wFi_rd[249] = 13'h0000;
    wFi_rd[250] = 13'h0000;
    wFi_rd[251] = 13'h0000;
    wFi_rd[252] = 13'h0000;
    wFi_rd[253] = 13'h0000;
    wFi_rd[254] = 13'h0000;
    wFi_rd[255] = 13'h0000;
    wFi_rd[256] = 13'h0000;
    wFi_rd[257] = 13'h0000;
    wFi_rd[258] = 13'h0000;
    wFi_rd[259] = 13'h0000;
    wFi_rd[260] = 13'h0000;
    wFi_rd[261] = 13'h0000;
    wFi_rd[262] = 13'h0000;
    wFi_rd[263] = 13'h0000;
    wFi_rd[264] = 13'h0000;
    wFi_rd[265] = 13'h0000;
    wFi_rd[266] = 13'h0000;
    wFi_rd[267] = 13'h0000;
    wFi_rd[268] = 13'h0000;
    wFi_rd[269] = 13'h0000;
    wFi_rd[270] = 13'h0000;
    wFi_rd[271] = 13'h0000;
    wFi_rd[272] = 13'h0000;
    wFi_rd[273] = 13'h0000;
    wFi_rd[274] = 13'h0000;
    wFi_rd[275] = 13'h0000;
    wFi_rd[276] = 13'h0000;
    wFi_rd[277] = 13'h0000;
    wFi_rd[278] = 13'h0000;
    wFi_rd[279] = 13'h0000;
    wFi_rd[280] = 13'h0000;
    wFi_rd[281] = 13'h0000;
    wFi_rd[282] = 13'h0000;
    wFi_rd[283] = 13'h0000;
    wFi_rd[284] = 13'h0000;
    wFi_rd[285] = 13'h0000;
    wFi_rd[286] = 13'h0000;
    wFi_rd[287] = 13'h0000;
    wFi_rd[288] = 13'h0000;
    wFi_rd[289] = 13'h0000;
    wFi_rd[290] = 13'h0000;
    wFi_rd[291] = 13'h0000;
    wFi_rd[292] = 13'h0000;
    wFi_rd[293] = 13'h0000;
    wFi_rd[294] = 13'h0000;
    wFi_rd[295] = 13'h0000;
    wFi_rd[296] = 13'h0000;
    wFi_rd[297] = 13'h0000;
    wFi_rd[298] = 13'h0000;
    wFi_rd[299] = 13'h0000;
    wFi_rd[300] = 13'h0000;
    wFi_rd[301] = 13'h0000;
    wFi_rd[302] = 13'h0000;
    wFi_rd[303] = 13'h0000;
    wFi_rd[304] = 13'h0000;
    wFi_rd[305] = 13'h0000;
    wFi_rd[306] = 13'h0000;
    wFi_rd[307] = 13'h0000;
    wFi_rd[308] = 13'h0000;
    wFi_rd[309] = 13'h0000;
    wFi_rd[310] = 13'h0000;
    wFi_rd[311] = 13'h0000;
    wFi_rd[312] = 13'h0000;
    wFi_rd[313] = 13'h0000;
    wFi_rd[314] = 13'h0000;
    wFi_rd[315] = 13'h0000;
    wFi_rd[316] = 13'h0000;
    wFi_rd[317] = 13'h0000;
    wFi_rd[318] = 13'h0000;
    wFi_rd[319] = 13'h0000;
    wFi_rd[320] = 13'h0000;
    wFi_rd[321] = 13'h0000;
    wFi_rd[322] = 13'h0000;
    wFi_rd[323] = 13'h0000;
    wFi_rd[324] = 13'h0000;
    wFi_rd[325] = 13'h0000;
    wFi_rd[326] = 13'h0000;
    wFi_rd[327] = 13'h0000;
    wFi_rd[328] = 13'h0000;
    wFi_rd[329] = 13'h0000;
    wFi_rd[330] = 13'h0000;
    wFi_rd[331] = 13'h0000;
    wFi_rd[332] = 13'h0000;
    wFi_rd[333] = 13'h0000;
    wFi_rd[334] = 13'h0000;
    wFi_rd[335] = 13'h0000;
    wFi_rd[336] = 13'h0000;
    wFi_rd[337] = 13'h0000;
    wFi_rd[338] = 13'h0000;
    wFi_rd[339] = 13'h0000;
    wFi_rd[340] = 13'h0000;
    wFi_rd[341] = 13'h0000;
    wFi_rd[342] = 13'h0000;
    wFi_rd[343] = 13'h0000;
    wFi_rd[344] = 13'h0000;
    wFi_rd[345] = 13'h0000;
    wFi_rd[346] = 13'h0000;
    wFi_rd[347] = 13'h0000;
    wFi_rd[348] = 13'h0000;
    wFi_rd[349] = 13'h0000;
    wFi_rd[350] = 13'h0000;
    wFi_rd[351] = 13'h0000;
    wFi_rd[352] = 13'h0000;
    wFi_rd[353] = 13'h0000;
    wFi_rd[354] = 13'h0000;
    wFi_rd[355] = 13'h0000;
    wFi_rd[356] = 13'h0000;
    wFi_rd[357] = 13'h0000;
    wFi_rd[358] = 13'h0000;
    wFi_rd[359] = 13'h0000;
    wFi_rd[360] = 13'h0000;
    wFi_rd[361] = 13'h0000;
    wFi_rd[362] = 13'h0000;
    wFi_rd[363] = 13'h0000;
    wFi_rd[364] = 13'h0000;
    wFi_rd[365] = 13'h0000;
    wFi_rd[366] = 13'h0000;
    wFi_rd[367] = 13'h0000;
    wFi_rd[368] = 13'h0000;
    wFi_rd[369] = 13'h0000;
    wFi_rd[370] = 13'h0000;
    wFi_rd[371] = 13'h0000;
    wFi_rd[372] = 13'h0000;
    wFi_rd[373] = 13'h0000;
    wFi_rd[374] = 13'h0000;
    wFi_rd[375] = 13'h0000;
    wFi_rd[376] = 13'h0000;
    wFi_rd[377] = 13'h0000;
    wFi_rd[378] = 13'h0000;
    wFi_rd[379] = 13'h0000;
    wFi_rd[380] = 13'h0000;
    wFi_rd[381] = 13'h0000;
    wFi_rd[382] = 13'h0000;
    wFi_rd[383] = 13'h0000;
    wFi_rd[384] = 13'h0000;
    wFi_rd[385] = 13'h0000;
    wFi_rd[386] = 13'h0000;
    wFi_rd[387] = 13'h0000;
    wFi_rd[388] = 13'h0000;
    wFi_rd[389] = 13'h0000;
    wFi_rd[390] = 13'h0000;
    wFi_rd[391] = 13'h0000;
    wFi_rd[392] = 13'h0000;
    wFi_rd[393] = 13'h0000;
    wFi_rd[394] = 13'h0000;
    wFi_rd[395] = 13'h0000;
    wFi_rd[396] = 13'h0000;
    wFi_rd[397] = 13'h0000;
    wFi_rd[398] = 13'h0000;
    wFi_rd[399] = 13'h0000;
    wFi_rd[400] = 13'h0000;
    wFi_rd[401] = 13'h0000;
    wFi_rd[402] = 13'h0000;
    wFi_rd[403] = 13'h0000;
    wFi_rd[404] = 13'h0000;
    wFi_rd[405] = 13'h0000;
    wFi_rd[406] = 13'h0000;
    wFi_rd[407] = 13'h0000;
    wFi_rd[408] = 13'h0000;
    wFi_rd[409] = 13'h0000;
    wFi_rd[410] = 13'h0000;
    wFi_rd[411] = 13'h0000;
    wFi_rd[412] = 13'h0000;
    wFi_rd[413] = 13'h0000;
    wFi_rd[414] = 13'h0000;
    wFi_rd[415] = 13'h0000;
    wFi_rd[416] = 13'h0000;
    wFi_rd[417] = 13'h0000;
    wFi_rd[418] = 13'h0000;
    wFi_rd[419] = 13'h0000;
    wFi_rd[420] = 13'h0000;
    wFi_rd[421] = 13'h0000;
    wFi_rd[422] = 13'h0000;
    wFi_rd[423] = 13'h0000;
    wFi_rd[424] = 13'h0000;
    wFi_rd[425] = 13'h0000;
    wFi_rd[426] = 13'h0000;
    wFi_rd[427] = 13'h0000;
    wFi_rd[428] = 13'h0000;
    wFi_rd[429] = 13'h0000;
    wFi_rd[430] = 13'h0000;
    wFi_rd[431] = 13'h0000;
    wFi_rd[432] = 13'h0000;
    wFi_rd[433] = 13'h0000;
    wFi_rd[434] = 13'h0000;
    wFi_rd[435] = 13'h0000;
    wFi_rd[436] = 13'h0000;
    wFi_rd[437] = 13'h0000;
    wFi_rd[438] = 13'h0000;
    wFi_rd[439] = 13'h0000;
    wFi_rd[440] = 13'h0000;
    wFi_rd[441] = 13'h0000;
    wFi_rd[442] = 13'h0000;
    wFi_rd[443] = 13'h0000;
    wFi_rd[444] = 13'h0000;
    wFi_rd[445] = 13'h0000;
    wFi_rd[446] = 13'h0000;
    wFi_rd[447] = 13'h0000;
    wFi_rd[448] = 13'h0000;
    wFi_rd[449] = 13'h0000;
    wFi_rd[450] = 13'h0000;
    wFi_rd[451] = 13'h0000;
    wFi_rd[452] = 13'h0000;
    wFi_rd[453] = 13'h0000;
    wFi_rd[454] = 13'h0000;
    wFi_rd[455] = 13'h0000;
    wFi_rd[456] = 13'h0000;
    wFi_rd[457] = 13'h0000;
    wFi_rd[458] = 13'h0000;
    wFi_rd[459] = 13'h0000;
    wFi_rd[460] = 13'h0000;
    wFi_rd[461] = 13'h0000;
    wFi_rd[462] = 13'h0000;
    wFi_rd[463] = 13'h0000;
    wFi_rd[464] = 13'h0000;
    wFi_rd[465] = 13'h0000;
    wFi_rd[466] = 13'h0000;
    wFi_rd[467] = 13'h0000;
    wFi_rd[468] = 13'h0000;
    wFi_rd[469] = 13'h0000;
    wFi_rd[470] = 13'h0000;
    wFi_rd[471] = 13'h0000;
    wFi_rd[472] = 13'h0000;
    wFi_rd[473] = 13'h0000;
    wFi_rd[474] = 13'h0000;
    wFi_rd[475] = 13'h0000;
    wFi_rd[476] = 13'h0000;
    wFi_rd[477] = 13'h0000;
    wFi_rd[478] = 13'h0000;
    wFi_rd[479] = 13'h0000;
    wFi_rd[480] = 13'h0000;
    wFi_rd[481] = 13'h0000;
    wFi_rd[482] = 13'h0000;
    wFi_rd[483] = 13'h0000;
    wFi_rd[484] = 13'h0000;
    wFi_rd[485] = 13'h0000;
    wFi_rd[486] = 13'h0000;
    wFi_rd[487] = 13'h0000;
    wFi_rd[488] = 13'h0000;
    wFi_rd[489] = 13'h0000;
    wFi_rd[490] = 13'h0000;
    wFi_rd[491] = 13'h0000;
    wFi_rd[492] = 13'h0000;
    wFi_rd[493] = 13'h0000;
    wFi_rd[494] = 13'h0000;
    wFi_rd[495] = 13'h0000;
    wFi_rd[496] = 13'h0000;
    wFi_rd[497] = 13'h0000;
    wFi_rd[498] = 13'h0000;
    wFi_rd[499] = 13'h0000;
    wFi_rd[500] = 13'h0000;
    wFi_rd[501] = 13'h0000;
    wFi_rd[502] = 13'h0000;
    wFi_rd[503] = 13'h0000;
    wFi_rd[504] = 13'h0000;
    wFi_rd[505] = 13'h0000;
    wFi_rd[506] = 13'h0000;
    wFi_rd[507] = 13'h0000;
    wFi_rd[508] = 13'h0000;
    wFi_rd[509] = 13'h0000;
    wFi_rd[510] = 13'h0000;
    wFi_rd[511] = 13'h0000;
  end
  always @(posedge clk) begin
    if (wFi_w_en)
      wFi_rd[9'h000] <= wf_imag;
  end
  reg [8:0] _2_;
  always @(posedge clk) begin
    _2_ <= idx[8:0];
  end
  assign wfi = wFi_rd[_2_];
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:107" *)
  reg [12:0] wFr_rd [511:0];
  initial begin
    wFr_rd[0] = 13'h0000;
    wFr_rd[1] = 13'h0000;
    wFr_rd[2] = 13'h0000;
    wFr_rd[3] = 13'h0000;
    wFr_rd[4] = 13'h0000;
    wFr_rd[5] = 13'h0000;
    wFr_rd[6] = 13'h0000;
    wFr_rd[7] = 13'h0000;
    wFr_rd[8] = 13'h0000;
    wFr_rd[9] = 13'h0000;
    wFr_rd[10] = 13'h0000;
    wFr_rd[11] = 13'h0000;
    wFr_rd[12] = 13'h0000;
    wFr_rd[13] = 13'h0000;
    wFr_rd[14] = 13'h0001;
    wFr_rd[15] = 13'h0001;
    wFr_rd[16] = 13'h0001;
    wFr_rd[17] = 13'h0001;
    wFr_rd[18] = 13'h0001;
    wFr_rd[19] = 13'h0001;
    wFr_rd[20] = 13'h0002;
    wFr_rd[21] = 13'h0002;
    wFr_rd[22] = 13'h0002;
    wFr_rd[23] = 13'h0002;
    wFr_rd[24] = 13'h0003;
    wFr_rd[25] = 13'h0003;
    wFr_rd[26] = 13'h0003;
    wFr_rd[27] = 13'h0004;
    wFr_rd[28] = 13'h0004;
    wFr_rd[29] = 13'h0004;
    wFr_rd[30] = 13'h0005;
    wFr_rd[31] = 13'h0005;
    wFr_rd[32] = 13'h0006;
    wFr_rd[33] = 13'h0006;
    wFr_rd[34] = 13'h0007;
    wFr_rd[35] = 13'h0007;
    wFr_rd[36] = 13'h0008;
    wFr_rd[37] = 13'h0009;
    wFr_rd[38] = 13'h0009;
    wFr_rd[39] = 13'h000a;
    wFr_rd[40] = 13'h000b;
    wFr_rd[41] = 13'h000b;
    wFr_rd[42] = 13'h000c;
    wFr_rd[43] = 13'h000d;
    wFr_rd[44] = 13'h000e;
    wFr_rd[45] = 13'h000f;
    wFr_rd[46] = 13'h0010;
    wFr_rd[47] = 13'h0011;
    wFr_rd[48] = 13'h0012;
    wFr_rd[49] = 13'h0013;
    wFr_rd[50] = 13'h0014;
    wFr_rd[51] = 13'h0016;
    wFr_rd[52] = 13'h0017;
    wFr_rd[53] = 13'h0018;
    wFr_rd[54] = 13'h001a;
    wFr_rd[55] = 13'h001b;
    wFr_rd[56] = 13'h001d;
    wFr_rd[57] = 13'h001f;
    wFr_rd[58] = 13'h0020;
    wFr_rd[59] = 13'h0022;
    wFr_rd[60] = 13'h0024;
    wFr_rd[61] = 13'h0026;
    wFr_rd[62] = 13'h0028;
    wFr_rd[63] = 13'h002a;
    wFr_rd[64] = 13'h002c;
    wFr_rd[65] = 13'h002e;
    wFr_rd[66] = 13'h0031;
    wFr_rd[67] = 13'h0033;
    wFr_rd[68] = 13'h0036;
    wFr_rd[69] = 13'h0038;
    wFr_rd[70] = 13'h003b;
    wFr_rd[71] = 13'h003e;
    wFr_rd[72] = 13'h0040;
    wFr_rd[73] = 13'h0043;
    wFr_rd[74] = 13'h0047;
    wFr_rd[75] = 13'h004a;
    wFr_rd[76] = 13'h004d;
    wFr_rd[77] = 13'h0050;
    wFr_rd[78] = 13'h0054;
    wFr_rd[79] = 13'h0058;
    wFr_rd[80] = 13'h005b;
    wFr_rd[81] = 13'h005f;
    wFr_rd[82] = 13'h0063;
    wFr_rd[83] = 13'h0067;
    wFr_rd[84] = 13'h006c;
    wFr_rd[85] = 13'h0070;
    wFr_rd[86] = 13'h0074;
    wFr_rd[87] = 13'h0079;
    wFr_rd[88] = 13'h007e;
    wFr_rd[89] = 13'h0083;
    wFr_rd[90] = 13'h0088;
    wFr_rd[91] = 13'h008d;
    wFr_rd[92] = 13'h0092;
    wFr_rd[93] = 13'h0098;
    wFr_rd[94] = 13'h009d;
    wFr_rd[95] = 13'h00a3;
    wFr_rd[96] = 13'h00a9;
    wFr_rd[97] = 13'h00af;
    wFr_rd[98] = 13'h00b5;
    wFr_rd[99] = 13'h00bc;
    wFr_rd[100] = 13'h00c2;
    wFr_rd[101] = 13'h00c9;
    wFr_rd[102] = 13'h00d0;
    wFr_rd[103] = 13'h00d7;
    wFr_rd[104] = 13'h00de;
    wFr_rd[105] = 13'h00e5;
    wFr_rd[106] = 13'h00ed;
    wFr_rd[107] = 13'h00f4;
    wFr_rd[108] = 13'h00fc;
    wFr_rd[109] = 13'h0104;
    wFr_rd[110] = 13'h010c;
    wFr_rd[111] = 13'h0115;
    wFr_rd[112] = 13'h011d;
    wFr_rd[113] = 13'h0126;
    wFr_rd[114] = 13'h012f;
    wFr_rd[115] = 13'h0138;
    wFr_rd[116] = 13'h0141;
    wFr_rd[117] = 13'h014a;
    wFr_rd[118] = 13'h0154;
    wFr_rd[119] = 13'h015d;
    wFr_rd[120] = 13'h0167;
    wFr_rd[121] = 13'h0171;
    wFr_rd[122] = 13'h017c;
    wFr_rd[123] = 13'h0186;
    wFr_rd[124] = 13'h0191;
    wFr_rd[125] = 13'h019b;
    wFr_rd[126] = 13'h01a6;
    wFr_rd[127] = 13'h01b2;
    wFr_rd[128] = 13'h01bd;
    wFr_rd[129] = 13'h01c8;
    wFr_rd[130] = 13'h01d4;
    wFr_rd[131] = 13'h01e0;
    wFr_rd[132] = 13'h01ec;
    wFr_rd[133] = 13'h01f8;
    wFr_rd[134] = 13'h0204;
    wFr_rd[135] = 13'h0211;
    wFr_rd[136] = 13'h021e;
    wFr_rd[137] = 13'h022a;
    wFr_rd[138] = 13'h0237;
    wFr_rd[139] = 13'h0245;
    wFr_rd[140] = 13'h0252;
    wFr_rd[141] = 13'h025f;
    wFr_rd[142] = 13'h026d;
    wFr_rd[143] = 13'h027b;
    wFr_rd[144] = 13'h0289;
    wFr_rd[145] = 13'h0297;
    wFr_rd[146] = 13'h02a5;
    wFr_rd[147] = 13'h02b3;
    wFr_rd[148] = 13'h02c2;
    wFr_rd[149] = 13'h02d1;
    wFr_rd[150] = 13'h02df;
    wFr_rd[151] = 13'h02ee;
    wFr_rd[152] = 13'h02fd;
    wFr_rd[153] = 13'h030d;
    wFr_rd[154] = 13'h031c;
    wFr_rd[155] = 13'h032b;
    wFr_rd[156] = 13'h033b;
    wFr_rd[157] = 13'h034b;
    wFr_rd[158] = 13'h035a;
    wFr_rd[159] = 13'h036a;
    wFr_rd[160] = 13'h037a;
    wFr_rd[161] = 13'h038a;
    wFr_rd[162] = 13'h039a;
    wFr_rd[163] = 13'h03ab;
    wFr_rd[164] = 13'h03bb;
    wFr_rd[165] = 13'h03cb;
    wFr_rd[166] = 13'h03dc;
    wFr_rd[167] = 13'h03ec;
    wFr_rd[168] = 13'h03fd;
    wFr_rd[169] = 13'h040e;
    wFr_rd[170] = 13'h041e;
    wFr_rd[171] = 13'h042f;
    wFr_rd[172] = 13'h0440;
    wFr_rd[173] = 13'h0451;
    wFr_rd[174] = 13'h0462;
    wFr_rd[175] = 13'h0473;
    wFr_rd[176] = 13'h0484;
    wFr_rd[177] = 13'h0495;
    wFr_rd[178] = 13'h04a6;
    wFr_rd[179] = 13'h04b6;
    wFr_rd[180] = 13'h04c7;
    wFr_rd[181] = 13'h04d8;
    wFr_rd[182] = 13'h04e9;
    wFr_rd[183] = 13'h04fa;
    wFr_rd[184] = 13'h050b;
    wFr_rd[185] = 13'h051c;
    wFr_rd[186] = 13'h052d;
    wFr_rd[187] = 13'h053e;
    wFr_rd[188] = 13'h054e;
    wFr_rd[189] = 13'h055f;
    wFr_rd[190] = 13'h056f;
    wFr_rd[191] = 13'h0580;
    wFr_rd[192] = 13'h0590;
    wFr_rd[193] = 13'h05a1;
    wFr_rd[194] = 13'h05b1;
    wFr_rd[195] = 13'h05c1;
    wFr_rd[196] = 13'h05d1;
    wFr_rd[197] = 13'h05e1;
    wFr_rd[198] = 13'h05f1;
    wFr_rd[199] = 13'h0601;
    wFr_rd[200] = 13'h0610;
    wFr_rd[201] = 13'h0620;
    wFr_rd[202] = 13'h062f;
    wFr_rd[203] = 13'h063e;
    wFr_rd[204] = 13'h064d;
    wFr_rd[205] = 13'h065c;
    wFr_rd[206] = 13'h066b;
    wFr_rd[207] = 13'h0679;
    wFr_rd[208] = 13'h0688;
    wFr_rd[209] = 13'h0696;
    wFr_rd[210] = 13'h06a4;
    wFr_rd[211] = 13'h06b2;
    wFr_rd[212] = 13'h06bf;
    wFr_rd[213] = 13'h06cd;
    wFr_rd[214] = 13'h06da;
    wFr_rd[215] = 13'h06e7;
    wFr_rd[216] = 13'h06f3;
    wFr_rd[217] = 13'h0700;
    wFr_rd[218] = 13'h070c;
    wFr_rd[219] = 13'h0718;
    wFr_rd[220] = 13'h0724;
    wFr_rd[221] = 13'h072f;
    wFr_rd[222] = 13'h073a;
    wFr_rd[223] = 13'h0745;
    wFr_rd[224] = 13'h0750;
    wFr_rd[225] = 13'h075a;
    wFr_rd[226] = 13'h0764;
    wFr_rd[227] = 13'h076e;
    wFr_rd[228] = 13'h0778;
    wFr_rd[229] = 13'h0781;
    wFr_rd[230] = 13'h078a;
    wFr_rd[231] = 13'h0793;
    wFr_rd[232] = 13'h079b;
    wFr_rd[233] = 13'h07a3;
    wFr_rd[234] = 13'h07ab;
    wFr_rd[235] = 13'h07b2;
    wFr_rd[236] = 13'h07b9;
    wFr_rd[237] = 13'h07c0;
    wFr_rd[238] = 13'h07c6;
    wFr_rd[239] = 13'h07cc;
    wFr_rd[240] = 13'h07d2;
    wFr_rd[241] = 13'h07d8;
    wFr_rd[242] = 13'h07dd;
    wFr_rd[243] = 13'h07e2;
    wFr_rd[244] = 13'h07e6;
    wFr_rd[245] = 13'h07ea;
    wFr_rd[246] = 13'h07ee;
    wFr_rd[247] = 13'h07f1;
    wFr_rd[248] = 13'h07f4;
    wFr_rd[249] = 13'h07f7;
    wFr_rd[250] = 13'h07f9;
    wFr_rd[251] = 13'h07fb;
    wFr_rd[252] = 13'h07fd;
    wFr_rd[253] = 13'h07fe;
    wFr_rd[254] = 13'h07ff;
    wFr_rd[255] = 13'h07ff;
    wFr_rd[256] = 13'h0800;
    wFr_rd[257] = 13'h07ff;
    wFr_rd[258] = 13'h07ff;
    wFr_rd[259] = 13'h07fe;
    wFr_rd[260] = 13'h07fd;
    wFr_rd[261] = 13'h07fb;
    wFr_rd[262] = 13'h07f9;
    wFr_rd[263] = 13'h07f7;
    wFr_rd[264] = 13'h07f4;
    wFr_rd[265] = 13'h07f1;
    wFr_rd[266] = 13'h07ee;
    wFr_rd[267] = 13'h07ea;
    wFr_rd[268] = 13'h07e6;
    wFr_rd[269] = 13'h07e2;
    wFr_rd[270] = 13'h07dd;
    wFr_rd[271] = 13'h07d8;
    wFr_rd[272] = 13'h07d2;
    wFr_rd[273] = 13'h07cc;
    wFr_rd[274] = 13'h07c6;
    wFr_rd[275] = 13'h07c0;
    wFr_rd[276] = 13'h07b9;
    wFr_rd[277] = 13'h07b2;
    wFr_rd[278] = 13'h07ab;
    wFr_rd[279] = 13'h07a3;
    wFr_rd[280] = 13'h079b;
    wFr_rd[281] = 13'h0793;
    wFr_rd[282] = 13'h078a;
    wFr_rd[283] = 13'h0781;
    wFr_rd[284] = 13'h0778;
    wFr_rd[285] = 13'h076e;
    wFr_rd[286] = 13'h0764;
    wFr_rd[287] = 13'h075a;
    wFr_rd[288] = 13'h0750;
    wFr_rd[289] = 13'h0745;
    wFr_rd[290] = 13'h073a;
    wFr_rd[291] = 13'h072f;
    wFr_rd[292] = 13'h0724;
    wFr_rd[293] = 13'h0718;
    wFr_rd[294] = 13'h070c;
    wFr_rd[295] = 13'h0700;
    wFr_rd[296] = 13'h06f3;
    wFr_rd[297] = 13'h06e7;
    wFr_rd[298] = 13'h06da;
    wFr_rd[299] = 13'h06cd;
    wFr_rd[300] = 13'h06bf;
    wFr_rd[301] = 13'h06b2;
    wFr_rd[302] = 13'h06a4;
    wFr_rd[303] = 13'h0696;
    wFr_rd[304] = 13'h0688;
    wFr_rd[305] = 13'h0679;
    wFr_rd[306] = 13'h066b;
    wFr_rd[307] = 13'h065c;
    wFr_rd[308] = 13'h064d;
    wFr_rd[309] = 13'h063e;
    wFr_rd[310] = 13'h062f;
    wFr_rd[311] = 13'h0620;
    wFr_rd[312] = 13'h0610;
    wFr_rd[313] = 13'h0601;
    wFr_rd[314] = 13'h05f1;
    wFr_rd[315] = 13'h05e1;
    wFr_rd[316] = 13'h05d1;
    wFr_rd[317] = 13'h05c1;
    wFr_rd[318] = 13'h05b1;
    wFr_rd[319] = 13'h05a1;
    wFr_rd[320] = 13'h0590;
    wFr_rd[321] = 13'h0580;
    wFr_rd[322] = 13'h056f;
    wFr_rd[323] = 13'h055f;
    wFr_rd[324] = 13'h054e;
    wFr_rd[325] = 13'h053e;
    wFr_rd[326] = 13'h052d;
    wFr_rd[327] = 13'h051c;
    wFr_rd[328] = 13'h050b;
    wFr_rd[329] = 13'h04fa;
    wFr_rd[330] = 13'h04e9;
    wFr_rd[331] = 13'h04d8;
    wFr_rd[332] = 13'h04c7;
    wFr_rd[333] = 13'h04b6;
    wFr_rd[334] = 13'h04a6;
    wFr_rd[335] = 13'h0495;
    wFr_rd[336] = 13'h0484;
    wFr_rd[337] = 13'h0473;
    wFr_rd[338] = 13'h0462;
    wFr_rd[339] = 13'h0451;
    wFr_rd[340] = 13'h0440;
    wFr_rd[341] = 13'h042f;
    wFr_rd[342] = 13'h041e;
    wFr_rd[343] = 13'h040e;
    wFr_rd[344] = 13'h03fd;
    wFr_rd[345] = 13'h03ec;
    wFr_rd[346] = 13'h03dc;
    wFr_rd[347] = 13'h03cb;
    wFr_rd[348] = 13'h03bb;
    wFr_rd[349] = 13'h03ab;
    wFr_rd[350] = 13'h039a;
    wFr_rd[351] = 13'h038a;
    wFr_rd[352] = 13'h037a;
    wFr_rd[353] = 13'h036a;
    wFr_rd[354] = 13'h035a;
    wFr_rd[355] = 13'h034b;
    wFr_rd[356] = 13'h033b;
    wFr_rd[357] = 13'h032b;
    wFr_rd[358] = 13'h031c;
    wFr_rd[359] = 13'h030d;
    wFr_rd[360] = 13'h02fd;
    wFr_rd[361] = 13'h02ee;
    wFr_rd[362] = 13'h02df;
    wFr_rd[363] = 13'h02d1;
    wFr_rd[364] = 13'h02c2;
    wFr_rd[365] = 13'h02b3;
    wFr_rd[366] = 13'h02a5;
    wFr_rd[367] = 13'h0297;
    wFr_rd[368] = 13'h0289;
    wFr_rd[369] = 13'h027b;
    wFr_rd[370] = 13'h026d;
    wFr_rd[371] = 13'h025f;
    wFr_rd[372] = 13'h0252;
    wFr_rd[373] = 13'h0245;
    wFr_rd[374] = 13'h0237;
    wFr_rd[375] = 13'h022a;
    wFr_rd[376] = 13'h021e;
    wFr_rd[377] = 13'h0211;
    wFr_rd[378] = 13'h0204;
    wFr_rd[379] = 13'h01f8;
    wFr_rd[380] = 13'h01ec;
    wFr_rd[381] = 13'h01e0;
    wFr_rd[382] = 13'h01d4;
    wFr_rd[383] = 13'h01c8;
    wFr_rd[384] = 13'h01bd;
    wFr_rd[385] = 13'h01b2;
    wFr_rd[386] = 13'h01a6;
    wFr_rd[387] = 13'h019b;
    wFr_rd[388] = 13'h0191;
    wFr_rd[389] = 13'h0186;
    wFr_rd[390] = 13'h017c;
    wFr_rd[391] = 13'h0171;
    wFr_rd[392] = 13'h0167;
    wFr_rd[393] = 13'h015d;
    wFr_rd[394] = 13'h0154;
    wFr_rd[395] = 13'h014a;
    wFr_rd[396] = 13'h0141;
    wFr_rd[397] = 13'h0138;
    wFr_rd[398] = 13'h012f;
    wFr_rd[399] = 13'h0126;
    wFr_rd[400] = 13'h011d;
    wFr_rd[401] = 13'h0115;
    wFr_rd[402] = 13'h010c;
    wFr_rd[403] = 13'h0104;
    wFr_rd[404] = 13'h00fc;
    wFr_rd[405] = 13'h00f4;
    wFr_rd[406] = 13'h00ed;
    wFr_rd[407] = 13'h00e5;
    wFr_rd[408] = 13'h00de;
    wFr_rd[409] = 13'h00d7;
    wFr_rd[410] = 13'h00d0;
    wFr_rd[411] = 13'h00c9;
    wFr_rd[412] = 13'h00c2;
    wFr_rd[413] = 13'h00bc;
    wFr_rd[414] = 13'h00b5;
    wFr_rd[415] = 13'h00af;
    wFr_rd[416] = 13'h00a9;
    wFr_rd[417] = 13'h00a3;
    wFr_rd[418] = 13'h009d;
    wFr_rd[419] = 13'h0098;
    wFr_rd[420] = 13'h0092;
    wFr_rd[421] = 13'h008d;
    wFr_rd[422] = 13'h0088;
    wFr_rd[423] = 13'h0083;
    wFr_rd[424] = 13'h007e;
    wFr_rd[425] = 13'h0079;
    wFr_rd[426] = 13'h0074;
    wFr_rd[427] = 13'h0070;
    wFr_rd[428] = 13'h006c;
    wFr_rd[429] = 13'h0067;
    wFr_rd[430] = 13'h0063;
    wFr_rd[431] = 13'h005f;
    wFr_rd[432] = 13'h005b;
    wFr_rd[433] = 13'h0058;
    wFr_rd[434] = 13'h0054;
    wFr_rd[435] = 13'h0050;
    wFr_rd[436] = 13'h004d;
    wFr_rd[437] = 13'h004a;
    wFr_rd[438] = 13'h0047;
    wFr_rd[439] = 13'h0043;
    wFr_rd[440] = 13'h0040;
    wFr_rd[441] = 13'h003e;
    wFr_rd[442] = 13'h003b;
    wFr_rd[443] = 13'h0038;
    wFr_rd[444] = 13'h0036;
    wFr_rd[445] = 13'h0033;
    wFr_rd[446] = 13'h0031;
    wFr_rd[447] = 13'h002e;
    wFr_rd[448] = 13'h002c;
    wFr_rd[449] = 13'h002a;
    wFr_rd[450] = 13'h0028;
    wFr_rd[451] = 13'h0026;
    wFr_rd[452] = 13'h0024;
    wFr_rd[453] = 13'h0022;
    wFr_rd[454] = 13'h0020;
    wFr_rd[455] = 13'h001f;
    wFr_rd[456] = 13'h001d;
    wFr_rd[457] = 13'h001b;
    wFr_rd[458] = 13'h001a;
    wFr_rd[459] = 13'h0018;
    wFr_rd[460] = 13'h0017;
    wFr_rd[461] = 13'h0016;
    wFr_rd[462] = 13'h0014;
    wFr_rd[463] = 13'h0013;
    wFr_rd[464] = 13'h0012;
    wFr_rd[465] = 13'h0011;
    wFr_rd[466] = 13'h0010;
    wFr_rd[467] = 13'h000f;
    wFr_rd[468] = 13'h000e;
    wFr_rd[469] = 13'h000d;
    wFr_rd[470] = 13'h000c;
    wFr_rd[471] = 13'h000b;
    wFr_rd[472] = 13'h000b;
    wFr_rd[473] = 13'h000a;
    wFr_rd[474] = 13'h0009;
    wFr_rd[475] = 13'h0009;
    wFr_rd[476] = 13'h0008;
    wFr_rd[477] = 13'h0007;
    wFr_rd[478] = 13'h0007;
    wFr_rd[479] = 13'h0006;
    wFr_rd[480] = 13'h0006;
    wFr_rd[481] = 13'h0005;
    wFr_rd[482] = 13'h0005;
    wFr_rd[483] = 13'h0004;
    wFr_rd[484] = 13'h0004;
    wFr_rd[485] = 13'h0004;
    wFr_rd[486] = 13'h0003;
    wFr_rd[487] = 13'h0003;
    wFr_rd[488] = 13'h0003;
    wFr_rd[489] = 13'h0002;
    wFr_rd[490] = 13'h0002;
    wFr_rd[491] = 13'h0002;
    wFr_rd[492] = 13'h0002;
    wFr_rd[493] = 13'h0001;
    wFr_rd[494] = 13'h0001;
    wFr_rd[495] = 13'h0001;
    wFr_rd[496] = 13'h0001;
    wFr_rd[497] = 13'h0001;
    wFr_rd[498] = 13'h0001;
    wFr_rd[499] = 13'h0000;
    wFr_rd[500] = 13'h0000;
    wFr_rd[501] = 13'h0000;
    wFr_rd[502] = 13'h0000;
    wFr_rd[503] = 13'h0000;
    wFr_rd[504] = 13'h0000;
    wFr_rd[505] = 13'h0000;
    wFr_rd[506] = 13'h0000;
    wFr_rd[507] = 13'h0000;
    wFr_rd[508] = 13'h0000;
    wFr_rd[509] = 13'h0000;
    wFr_rd[510] = 13'h0000;
    wFr_rd[511] = 13'h0000;
  end
  always @(posedge clk) begin
    if (wFr_w_en)
      wFr_rd[wFr_w_addr] <= wf_real;
  end
  reg [8:0] _3_;
  always @(posedge clk) begin
    _3_ <= idx[8:0];
  end
  assign wfr = wFr_rd[_3_];
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:103" *)
  reg [20:0] xi_rd [511:0];
  initial begin
    xi_rd[0] = 21'h000000;
    xi_rd[1] = 21'h000000;
    xi_rd[2] = 21'h000000;
    xi_rd[3] = 21'h000000;
    xi_rd[4] = 21'h000000;
    xi_rd[5] = 21'h000000;
    xi_rd[6] = 21'h000000;
    xi_rd[7] = 21'h000000;
    xi_rd[8] = 21'h000000;
    xi_rd[9] = 21'h000000;
    xi_rd[10] = 21'h000000;
    xi_rd[11] = 21'h000000;
    xi_rd[12] = 21'h000000;
    xi_rd[13] = 21'h000000;
    xi_rd[14] = 21'h000000;
    xi_rd[15] = 21'h000000;
    xi_rd[16] = 21'h000000;
    xi_rd[17] = 21'h000000;
    xi_rd[18] = 21'h000000;
    xi_rd[19] = 21'h000000;
    xi_rd[20] = 21'h000000;
    xi_rd[21] = 21'h000000;
    xi_rd[22] = 21'h000000;
    xi_rd[23] = 21'h000000;
    xi_rd[24] = 21'h000000;
    xi_rd[25] = 21'h000000;
    xi_rd[26] = 21'h000000;
    xi_rd[27] = 21'h000000;
    xi_rd[28] = 21'h000000;
    xi_rd[29] = 21'h000000;
    xi_rd[30] = 21'h000000;
    xi_rd[31] = 21'h000000;
    xi_rd[32] = 21'h000000;
    xi_rd[33] = 21'h000000;
    xi_rd[34] = 21'h000000;
    xi_rd[35] = 21'h000000;
    xi_rd[36] = 21'h000000;
    xi_rd[37] = 21'h000000;
    xi_rd[38] = 21'h000000;
    xi_rd[39] = 21'h000000;
    xi_rd[40] = 21'h000000;
    xi_rd[41] = 21'h000000;
    xi_rd[42] = 21'h000000;
    xi_rd[43] = 21'h000000;
    xi_rd[44] = 21'h000000;
    xi_rd[45] = 21'h000000;
    xi_rd[46] = 21'h000000;
    xi_rd[47] = 21'h000000;
    xi_rd[48] = 21'h000000;
    xi_rd[49] = 21'h000000;
    xi_rd[50] = 21'h000000;
    xi_rd[51] = 21'h000000;
    xi_rd[52] = 21'h000000;
    xi_rd[53] = 21'h000000;
    xi_rd[54] = 21'h000000;
    xi_rd[55] = 21'h000000;
    xi_rd[56] = 21'h000000;
    xi_rd[57] = 21'h000000;
    xi_rd[58] = 21'h000000;
    xi_rd[59] = 21'h000000;
    xi_rd[60] = 21'h000000;
    xi_rd[61] = 21'h000000;
    xi_rd[62] = 21'h000000;
    xi_rd[63] = 21'h000000;
    xi_rd[64] = 21'h000000;
    xi_rd[65] = 21'h000000;
    xi_rd[66] = 21'h000000;
    xi_rd[67] = 21'h000000;
    xi_rd[68] = 21'h000000;
    xi_rd[69] = 21'h000000;
    xi_rd[70] = 21'h000000;
    xi_rd[71] = 21'h000000;
    xi_rd[72] = 21'h000000;
    xi_rd[73] = 21'h000000;
    xi_rd[74] = 21'h000000;
    xi_rd[75] = 21'h000000;
    xi_rd[76] = 21'h000000;
    xi_rd[77] = 21'h000000;
    xi_rd[78] = 21'h000000;
    xi_rd[79] = 21'h000000;
    xi_rd[80] = 21'h000000;
    xi_rd[81] = 21'h000000;
    xi_rd[82] = 21'h000000;
    xi_rd[83] = 21'h000000;
    xi_rd[84] = 21'h000000;
    xi_rd[85] = 21'h000000;
    xi_rd[86] = 21'h000000;
    xi_rd[87] = 21'h000000;
    xi_rd[88] = 21'h000000;
    xi_rd[89] = 21'h000000;
    xi_rd[90] = 21'h000000;
    xi_rd[91] = 21'h000000;
    xi_rd[92] = 21'h000000;
    xi_rd[93] = 21'h000000;
    xi_rd[94] = 21'h000000;
    xi_rd[95] = 21'h000000;
    xi_rd[96] = 21'h000000;
    xi_rd[97] = 21'h000000;
    xi_rd[98] = 21'h000000;
    xi_rd[99] = 21'h000000;
    xi_rd[100] = 21'h000000;
    xi_rd[101] = 21'h000000;
    xi_rd[102] = 21'h000000;
    xi_rd[103] = 21'h000000;
    xi_rd[104] = 21'h000000;
    xi_rd[105] = 21'h000000;
    xi_rd[106] = 21'h000000;
    xi_rd[107] = 21'h000000;
    xi_rd[108] = 21'h000000;
    xi_rd[109] = 21'h000000;
    xi_rd[110] = 21'h000000;
    xi_rd[111] = 21'h000000;
    xi_rd[112] = 21'h000000;
    xi_rd[113] = 21'h000000;
    xi_rd[114] = 21'h000000;
    xi_rd[115] = 21'h000000;
    xi_rd[116] = 21'h000000;
    xi_rd[117] = 21'h000000;
    xi_rd[118] = 21'h000000;
    xi_rd[119] = 21'h000000;
    xi_rd[120] = 21'h000000;
    xi_rd[121] = 21'h000000;
    xi_rd[122] = 21'h000000;
    xi_rd[123] = 21'h000000;
    xi_rd[124] = 21'h000000;
    xi_rd[125] = 21'h000000;
    xi_rd[126] = 21'h000000;
    xi_rd[127] = 21'h000000;
    xi_rd[128] = 21'h000000;
    xi_rd[129] = 21'h000000;
    xi_rd[130] = 21'h000000;
    xi_rd[131] = 21'h000000;
    xi_rd[132] = 21'h000000;
    xi_rd[133] = 21'h000000;
    xi_rd[134] = 21'h000000;
    xi_rd[135] = 21'h000000;
    xi_rd[136] = 21'h000000;
    xi_rd[137] = 21'h000000;
    xi_rd[138] = 21'h000000;
    xi_rd[139] = 21'h000000;
    xi_rd[140] = 21'h000000;
    xi_rd[141] = 21'h000000;
    xi_rd[142] = 21'h000000;
    xi_rd[143] = 21'h000000;
    xi_rd[144] = 21'h000000;
    xi_rd[145] = 21'h000000;
    xi_rd[146] = 21'h000000;
    xi_rd[147] = 21'h000000;
    xi_rd[148] = 21'h000000;
    xi_rd[149] = 21'h000000;
    xi_rd[150] = 21'h000000;
    xi_rd[151] = 21'h000000;
    xi_rd[152] = 21'h000000;
    xi_rd[153] = 21'h000000;
    xi_rd[154] = 21'h000000;
    xi_rd[155] = 21'h000000;
    xi_rd[156] = 21'h000000;
    xi_rd[157] = 21'h000000;
    xi_rd[158] = 21'h000000;
    xi_rd[159] = 21'h000000;
    xi_rd[160] = 21'h000000;
    xi_rd[161] = 21'h000000;
    xi_rd[162] = 21'h000000;
    xi_rd[163] = 21'h000000;
    xi_rd[164] = 21'h000000;
    xi_rd[165] = 21'h000000;
    xi_rd[166] = 21'h000000;
    xi_rd[167] = 21'h000000;
    xi_rd[168] = 21'h000000;
    xi_rd[169] = 21'h000000;
    xi_rd[170] = 21'h000000;
    xi_rd[171] = 21'h000000;
    xi_rd[172] = 21'h000000;
    xi_rd[173] = 21'h000000;
    xi_rd[174] = 21'h000000;
    xi_rd[175] = 21'h000000;
    xi_rd[176] = 21'h000000;
    xi_rd[177] = 21'h000000;
    xi_rd[178] = 21'h000000;
    xi_rd[179] = 21'h000000;
    xi_rd[180] = 21'h000000;
    xi_rd[181] = 21'h000000;
    xi_rd[182] = 21'h000000;
    xi_rd[183] = 21'h000000;
    xi_rd[184] = 21'h000000;
    xi_rd[185] = 21'h000000;
    xi_rd[186] = 21'h000000;
    xi_rd[187] = 21'h000000;
    xi_rd[188] = 21'h000000;
    xi_rd[189] = 21'h000000;
    xi_rd[190] = 21'h000000;
    xi_rd[191] = 21'h000000;
    xi_rd[192] = 21'h000000;
    xi_rd[193] = 21'h000000;
    xi_rd[194] = 21'h000000;
    xi_rd[195] = 21'h000000;
    xi_rd[196] = 21'h000000;
    xi_rd[197] = 21'h000000;
    xi_rd[198] = 21'h000000;
    xi_rd[199] = 21'h000000;
    xi_rd[200] = 21'h000000;
    xi_rd[201] = 21'h000000;
    xi_rd[202] = 21'h000000;
    xi_rd[203] = 21'h000000;
    xi_rd[204] = 21'h000000;
    xi_rd[205] = 21'h000000;
    xi_rd[206] = 21'h000000;
    xi_rd[207] = 21'h000000;
    xi_rd[208] = 21'h000000;
    xi_rd[209] = 21'h000000;
    xi_rd[210] = 21'h000000;
    xi_rd[211] = 21'h000000;
    xi_rd[212] = 21'h000000;
    xi_rd[213] = 21'h000000;
    xi_rd[214] = 21'h000000;
    xi_rd[215] = 21'h000000;
    xi_rd[216] = 21'h000000;
    xi_rd[217] = 21'h000000;
    xi_rd[218] = 21'h000000;
    xi_rd[219] = 21'h000000;
    xi_rd[220] = 21'h000000;
    xi_rd[221] = 21'h000000;
    xi_rd[222] = 21'h000000;
    xi_rd[223] = 21'h000000;
    xi_rd[224] = 21'h000000;
    xi_rd[225] = 21'h000000;
    xi_rd[226] = 21'h000000;
    xi_rd[227] = 21'h000000;
    xi_rd[228] = 21'h000000;
    xi_rd[229] = 21'h000000;
    xi_rd[230] = 21'h000000;
    xi_rd[231] = 21'h000000;
    xi_rd[232] = 21'h000000;
    xi_rd[233] = 21'h000000;
    xi_rd[234] = 21'h000000;
    xi_rd[235] = 21'h000000;
    xi_rd[236] = 21'h000000;
    xi_rd[237] = 21'h000000;
    xi_rd[238] = 21'h000000;
    xi_rd[239] = 21'h000000;
    xi_rd[240] = 21'h000000;
    xi_rd[241] = 21'h000000;
    xi_rd[242] = 21'h000000;
    xi_rd[243] = 21'h000000;
    xi_rd[244] = 21'h000000;
    xi_rd[245] = 21'h000000;
    xi_rd[246] = 21'h000000;
    xi_rd[247] = 21'h000000;
    xi_rd[248] = 21'h000000;
    xi_rd[249] = 21'h000000;
    xi_rd[250] = 21'h000000;
    xi_rd[251] = 21'h000000;
    xi_rd[252] = 21'h000000;
    xi_rd[253] = 21'h000000;
    xi_rd[254] = 21'h000000;
    xi_rd[255] = 21'h000000;
    xi_rd[256] = 21'h000000;
    xi_rd[257] = 21'h000000;
    xi_rd[258] = 21'h000000;
    xi_rd[259] = 21'h000000;
    xi_rd[260] = 21'h000000;
    xi_rd[261] = 21'h000000;
    xi_rd[262] = 21'h000000;
    xi_rd[263] = 21'h000000;
    xi_rd[264] = 21'h000000;
    xi_rd[265] = 21'h000000;
    xi_rd[266] = 21'h000000;
    xi_rd[267] = 21'h000000;
    xi_rd[268] = 21'h000000;
    xi_rd[269] = 21'h000000;
    xi_rd[270] = 21'h000000;
    xi_rd[271] = 21'h000000;
    xi_rd[272] = 21'h000000;
    xi_rd[273] = 21'h000000;
    xi_rd[274] = 21'h000000;
    xi_rd[275] = 21'h000000;
    xi_rd[276] = 21'h000000;
    xi_rd[277] = 21'h000000;
    xi_rd[278] = 21'h000000;
    xi_rd[279] = 21'h000000;
    xi_rd[280] = 21'h000000;
    xi_rd[281] = 21'h000000;
    xi_rd[282] = 21'h000000;
    xi_rd[283] = 21'h000000;
    xi_rd[284] = 21'h000000;
    xi_rd[285] = 21'h000000;
    xi_rd[286] = 21'h000000;
    xi_rd[287] = 21'h000000;
    xi_rd[288] = 21'h000000;
    xi_rd[289] = 21'h000000;
    xi_rd[290] = 21'h000000;
    xi_rd[291] = 21'h000000;
    xi_rd[292] = 21'h000000;
    xi_rd[293] = 21'h000000;
    xi_rd[294] = 21'h000000;
    xi_rd[295] = 21'h000000;
    xi_rd[296] = 21'h000000;
    xi_rd[297] = 21'h000000;
    xi_rd[298] = 21'h000000;
    xi_rd[299] = 21'h000000;
    xi_rd[300] = 21'h000000;
    xi_rd[301] = 21'h000000;
    xi_rd[302] = 21'h000000;
    xi_rd[303] = 21'h000000;
    xi_rd[304] = 21'h000000;
    xi_rd[305] = 21'h000000;
    xi_rd[306] = 21'h000000;
    xi_rd[307] = 21'h000000;
    xi_rd[308] = 21'h000000;
    xi_rd[309] = 21'h000000;
    xi_rd[310] = 21'h000000;
    xi_rd[311] = 21'h000000;
    xi_rd[312] = 21'h000000;
    xi_rd[313] = 21'h000000;
    xi_rd[314] = 21'h000000;
    xi_rd[315] = 21'h000000;
    xi_rd[316] = 21'h000000;
    xi_rd[317] = 21'h000000;
    xi_rd[318] = 21'h000000;
    xi_rd[319] = 21'h000000;
    xi_rd[320] = 21'h000000;
    xi_rd[321] = 21'h000000;
    xi_rd[322] = 21'h000000;
    xi_rd[323] = 21'h000000;
    xi_rd[324] = 21'h000000;
    xi_rd[325] = 21'h000000;
    xi_rd[326] = 21'h000000;
    xi_rd[327] = 21'h000000;
    xi_rd[328] = 21'h000000;
    xi_rd[329] = 21'h000000;
    xi_rd[330] = 21'h000000;
    xi_rd[331] = 21'h000000;
    xi_rd[332] = 21'h000000;
    xi_rd[333] = 21'h000000;
    xi_rd[334] = 21'h000000;
    xi_rd[335] = 21'h000000;
    xi_rd[336] = 21'h000000;
    xi_rd[337] = 21'h000000;
    xi_rd[338] = 21'h000000;
    xi_rd[339] = 21'h000000;
    xi_rd[340] = 21'h000000;
    xi_rd[341] = 21'h000000;
    xi_rd[342] = 21'h000000;
    xi_rd[343] = 21'h000000;
    xi_rd[344] = 21'h000000;
    xi_rd[345] = 21'h000000;
    xi_rd[346] = 21'h000000;
    xi_rd[347] = 21'h000000;
    xi_rd[348] = 21'h000000;
    xi_rd[349] = 21'h000000;
    xi_rd[350] = 21'h000000;
    xi_rd[351] = 21'h000000;
    xi_rd[352] = 21'h000000;
    xi_rd[353] = 21'h000000;
    xi_rd[354] = 21'h000000;
    xi_rd[355] = 21'h000000;
    xi_rd[356] = 21'h000000;
    xi_rd[357] = 21'h000000;
    xi_rd[358] = 21'h000000;
    xi_rd[359] = 21'h000000;
    xi_rd[360] = 21'h000000;
    xi_rd[361] = 21'h000000;
    xi_rd[362] = 21'h000000;
    xi_rd[363] = 21'h000000;
    xi_rd[364] = 21'h000000;
    xi_rd[365] = 21'h000000;
    xi_rd[366] = 21'h000000;
    xi_rd[367] = 21'h000000;
    xi_rd[368] = 21'h000000;
    xi_rd[369] = 21'h000000;
    xi_rd[370] = 21'h000000;
    xi_rd[371] = 21'h000000;
    xi_rd[372] = 21'h000000;
    xi_rd[373] = 21'h000000;
    xi_rd[374] = 21'h000000;
    xi_rd[375] = 21'h000000;
    xi_rd[376] = 21'h000000;
    xi_rd[377] = 21'h000000;
    xi_rd[378] = 21'h000000;
    xi_rd[379] = 21'h000000;
    xi_rd[380] = 21'h000000;
    xi_rd[381] = 21'h000000;
    xi_rd[382] = 21'h000000;
    xi_rd[383] = 21'h000000;
    xi_rd[384] = 21'h000000;
    xi_rd[385] = 21'h000000;
    xi_rd[386] = 21'h000000;
    xi_rd[387] = 21'h000000;
    xi_rd[388] = 21'h000000;
    xi_rd[389] = 21'h000000;
    xi_rd[390] = 21'h000000;
    xi_rd[391] = 21'h000000;
    xi_rd[392] = 21'h000000;
    xi_rd[393] = 21'h000000;
    xi_rd[394] = 21'h000000;
    xi_rd[395] = 21'h000000;
    xi_rd[396] = 21'h000000;
    xi_rd[397] = 21'h000000;
    xi_rd[398] = 21'h000000;
    xi_rd[399] = 21'h000000;
    xi_rd[400] = 21'h000000;
    xi_rd[401] = 21'h000000;
    xi_rd[402] = 21'h000000;
    xi_rd[403] = 21'h000000;
    xi_rd[404] = 21'h000000;
    xi_rd[405] = 21'h000000;
    xi_rd[406] = 21'h000000;
    xi_rd[407] = 21'h000000;
    xi_rd[408] = 21'h000000;
    xi_rd[409] = 21'h000000;
    xi_rd[410] = 21'h000000;
    xi_rd[411] = 21'h000000;
    xi_rd[412] = 21'h000000;
    xi_rd[413] = 21'h000000;
    xi_rd[414] = 21'h000000;
    xi_rd[415] = 21'h000000;
    xi_rd[416] = 21'h000000;
    xi_rd[417] = 21'h000000;
    xi_rd[418] = 21'h000000;
    xi_rd[419] = 21'h000000;
    xi_rd[420] = 21'h000000;
    xi_rd[421] = 21'h000000;
    xi_rd[422] = 21'h000000;
    xi_rd[423] = 21'h000000;
    xi_rd[424] = 21'h000000;
    xi_rd[425] = 21'h000000;
    xi_rd[426] = 21'h000000;
    xi_rd[427] = 21'h000000;
    xi_rd[428] = 21'h000000;
    xi_rd[429] = 21'h000000;
    xi_rd[430] = 21'h000000;
    xi_rd[431] = 21'h000000;
    xi_rd[432] = 21'h000000;
    xi_rd[433] = 21'h000000;
    xi_rd[434] = 21'h000000;
    xi_rd[435] = 21'h000000;
    xi_rd[436] = 21'h000000;
    xi_rd[437] = 21'h000000;
    xi_rd[438] = 21'h000000;
    xi_rd[439] = 21'h000000;
    xi_rd[440] = 21'h000000;
    xi_rd[441] = 21'h000000;
    xi_rd[442] = 21'h000000;
    xi_rd[443] = 21'h000000;
    xi_rd[444] = 21'h000000;
    xi_rd[445] = 21'h000000;
    xi_rd[446] = 21'h000000;
    xi_rd[447] = 21'h000000;
    xi_rd[448] = 21'h000000;
    xi_rd[449] = 21'h000000;
    xi_rd[450] = 21'h000000;
    xi_rd[451] = 21'h000000;
    xi_rd[452] = 21'h000000;
    xi_rd[453] = 21'h000000;
    xi_rd[454] = 21'h000000;
    xi_rd[455] = 21'h000000;
    xi_rd[456] = 21'h000000;
    xi_rd[457] = 21'h000000;
    xi_rd[458] = 21'h000000;
    xi_rd[459] = 21'h000000;
    xi_rd[460] = 21'h000000;
    xi_rd[461] = 21'h000000;
    xi_rd[462] = 21'h000000;
    xi_rd[463] = 21'h000000;
    xi_rd[464] = 21'h000000;
    xi_rd[465] = 21'h000000;
    xi_rd[466] = 21'h000000;
    xi_rd[467] = 21'h000000;
    xi_rd[468] = 21'h000000;
    xi_rd[469] = 21'h000000;
    xi_rd[470] = 21'h000000;
    xi_rd[471] = 21'h000000;
    xi_rd[472] = 21'h000000;
    xi_rd[473] = 21'h000000;
    xi_rd[474] = 21'h000000;
    xi_rd[475] = 21'h000000;
    xi_rd[476] = 21'h000000;
    xi_rd[477] = 21'h000000;
    xi_rd[478] = 21'h000000;
    xi_rd[479] = 21'h000000;
    xi_rd[480] = 21'h000000;
    xi_rd[481] = 21'h000000;
    xi_rd[482] = 21'h000000;
    xi_rd[483] = 21'h000000;
    xi_rd[484] = 21'h000000;
    xi_rd[485] = 21'h000000;
    xi_rd[486] = 21'h000000;
    xi_rd[487] = 21'h000000;
    xi_rd[488] = 21'h000000;
    xi_rd[489] = 21'h000000;
    xi_rd[490] = 21'h000000;
    xi_rd[491] = 21'h000000;
    xi_rd[492] = 21'h000000;
    xi_rd[493] = 21'h000000;
    xi_rd[494] = 21'h000000;
    xi_rd[495] = 21'h000000;
    xi_rd[496] = 21'h000000;
    xi_rd[497] = 21'h000000;
    xi_rd[498] = 21'h000000;
    xi_rd[499] = 21'h000000;
    xi_rd[500] = 21'h000000;
    xi_rd[501] = 21'h000000;
    xi_rd[502] = 21'h000000;
    xi_rd[503] = 21'h000000;
    xi_rd[504] = 21'h000000;
    xi_rd[505] = 21'h000000;
    xi_rd[506] = 21'h000000;
    xi_rd[507] = 21'h000000;
    xi_rd[508] = 21'h000000;
    xi_rd[509] = 21'h000000;
    xi_rd[510] = 21'h000000;
    xi_rd[511] = 21'h000000;
  end
  always @(posedge clk) begin
    if (xi_w_en)
      xi_rd[xi_w_addr] <= xi_w_data;
  end
  reg [8:0] _4_;
  always @(posedge clk) begin
    _4_ <= xi_r_addr;
  end
  assign xi_r_data = xi_rd[_4_];
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:102" *)
  reg [20:0] xr_rd [511:0];
  initial begin
    xr_rd[0] = 21'h000000;
    xr_rd[1] = 21'h000000;
    xr_rd[2] = 21'h000000;
    xr_rd[3] = 21'h000000;
    xr_rd[4] = 21'h000000;
    xr_rd[5] = 21'h000000;
    xr_rd[6] = 21'h000000;
    xr_rd[7] = 21'h000000;
    xr_rd[8] = 21'h000000;
    xr_rd[9] = 21'h000000;
    xr_rd[10] = 21'h000000;
    xr_rd[11] = 21'h000000;
    xr_rd[12] = 21'h000000;
    xr_rd[13] = 21'h000000;
    xr_rd[14] = 21'h000000;
    xr_rd[15] = 21'h000000;
    xr_rd[16] = 21'h000000;
    xr_rd[17] = 21'h000000;
    xr_rd[18] = 21'h000000;
    xr_rd[19] = 21'h000000;
    xr_rd[20] = 21'h000000;
    xr_rd[21] = 21'h000000;
    xr_rd[22] = 21'h000000;
    xr_rd[23] = 21'h000000;
    xr_rd[24] = 21'h000000;
    xr_rd[25] = 21'h000000;
    xr_rd[26] = 21'h000000;
    xr_rd[27] = 21'h000000;
    xr_rd[28] = 21'h000000;
    xr_rd[29] = 21'h000000;
    xr_rd[30] = 21'h000000;
    xr_rd[31] = 21'h000000;
    xr_rd[32] = 21'h000000;
    xr_rd[33] = 21'h000000;
    xr_rd[34] = 21'h000000;
    xr_rd[35] = 21'h000000;
    xr_rd[36] = 21'h000000;
    xr_rd[37] = 21'h000000;
    xr_rd[38] = 21'h000000;
    xr_rd[39] = 21'h000000;
    xr_rd[40] = 21'h000000;
    xr_rd[41] = 21'h000000;
    xr_rd[42] = 21'h000000;
    xr_rd[43] = 21'h000000;
    xr_rd[44] = 21'h000000;
    xr_rd[45] = 21'h000000;
    xr_rd[46] = 21'h000000;
    xr_rd[47] = 21'h000000;
    xr_rd[48] = 21'h000000;
    xr_rd[49] = 21'h000000;
    xr_rd[50] = 21'h000000;
    xr_rd[51] = 21'h000000;
    xr_rd[52] = 21'h000000;
    xr_rd[53] = 21'h000000;
    xr_rd[54] = 21'h000000;
    xr_rd[55] = 21'h000000;
    xr_rd[56] = 21'h000000;
    xr_rd[57] = 21'h000000;
    xr_rd[58] = 21'h000000;
    xr_rd[59] = 21'h000000;
    xr_rd[60] = 21'h000000;
    xr_rd[61] = 21'h000000;
    xr_rd[62] = 21'h000000;
    xr_rd[63] = 21'h000000;
    xr_rd[64] = 21'h000000;
    xr_rd[65] = 21'h000000;
    xr_rd[66] = 21'h000000;
    xr_rd[67] = 21'h000000;
    xr_rd[68] = 21'h000000;
    xr_rd[69] = 21'h000000;
    xr_rd[70] = 21'h000000;
    xr_rd[71] = 21'h000000;
    xr_rd[72] = 21'h000000;
    xr_rd[73] = 21'h000000;
    xr_rd[74] = 21'h000000;
    xr_rd[75] = 21'h000000;
    xr_rd[76] = 21'h000000;
    xr_rd[77] = 21'h000000;
    xr_rd[78] = 21'h000000;
    xr_rd[79] = 21'h000000;
    xr_rd[80] = 21'h000000;
    xr_rd[81] = 21'h000000;
    xr_rd[82] = 21'h000000;
    xr_rd[83] = 21'h000000;
    xr_rd[84] = 21'h000000;
    xr_rd[85] = 21'h000000;
    xr_rd[86] = 21'h000000;
    xr_rd[87] = 21'h000000;
    xr_rd[88] = 21'h000000;
    xr_rd[89] = 21'h000000;
    xr_rd[90] = 21'h000000;
    xr_rd[91] = 21'h000000;
    xr_rd[92] = 21'h000000;
    xr_rd[93] = 21'h000000;
    xr_rd[94] = 21'h000000;
    xr_rd[95] = 21'h000000;
    xr_rd[96] = 21'h000000;
    xr_rd[97] = 21'h000000;
    xr_rd[98] = 21'h000000;
    xr_rd[99] = 21'h000000;
    xr_rd[100] = 21'h000000;
    xr_rd[101] = 21'h000000;
    xr_rd[102] = 21'h000000;
    xr_rd[103] = 21'h000000;
    xr_rd[104] = 21'h000000;
    xr_rd[105] = 21'h000000;
    xr_rd[106] = 21'h000000;
    xr_rd[107] = 21'h000000;
    xr_rd[108] = 21'h000000;
    xr_rd[109] = 21'h000000;
    xr_rd[110] = 21'h000000;
    xr_rd[111] = 21'h000000;
    xr_rd[112] = 21'h000000;
    xr_rd[113] = 21'h000000;
    xr_rd[114] = 21'h000000;
    xr_rd[115] = 21'h000000;
    xr_rd[116] = 21'h000000;
    xr_rd[117] = 21'h000000;
    xr_rd[118] = 21'h000000;
    xr_rd[119] = 21'h000000;
    xr_rd[120] = 21'h000000;
    xr_rd[121] = 21'h000000;
    xr_rd[122] = 21'h000000;
    xr_rd[123] = 21'h000000;
    xr_rd[124] = 21'h000000;
    xr_rd[125] = 21'h000000;
    xr_rd[126] = 21'h000000;
    xr_rd[127] = 21'h000000;
    xr_rd[128] = 21'h000000;
    xr_rd[129] = 21'h000000;
    xr_rd[130] = 21'h000000;
    xr_rd[131] = 21'h000000;
    xr_rd[132] = 21'h000000;
    xr_rd[133] = 21'h000000;
    xr_rd[134] = 21'h000000;
    xr_rd[135] = 21'h000000;
    xr_rd[136] = 21'h000000;
    xr_rd[137] = 21'h000000;
    xr_rd[138] = 21'h000000;
    xr_rd[139] = 21'h000000;
    xr_rd[140] = 21'h000000;
    xr_rd[141] = 21'h000000;
    xr_rd[142] = 21'h000000;
    xr_rd[143] = 21'h000000;
    xr_rd[144] = 21'h000000;
    xr_rd[145] = 21'h000000;
    xr_rd[146] = 21'h000000;
    xr_rd[147] = 21'h000000;
    xr_rd[148] = 21'h000000;
    xr_rd[149] = 21'h000000;
    xr_rd[150] = 21'h000000;
    xr_rd[151] = 21'h000000;
    xr_rd[152] = 21'h000000;
    xr_rd[153] = 21'h000000;
    xr_rd[154] = 21'h000000;
    xr_rd[155] = 21'h000000;
    xr_rd[156] = 21'h000000;
    xr_rd[157] = 21'h000000;
    xr_rd[158] = 21'h000000;
    xr_rd[159] = 21'h000000;
    xr_rd[160] = 21'h000000;
    xr_rd[161] = 21'h000000;
    xr_rd[162] = 21'h000000;
    xr_rd[163] = 21'h000000;
    xr_rd[164] = 21'h000000;
    xr_rd[165] = 21'h000000;
    xr_rd[166] = 21'h000000;
    xr_rd[167] = 21'h000000;
    xr_rd[168] = 21'h000000;
    xr_rd[169] = 21'h000000;
    xr_rd[170] = 21'h000000;
    xr_rd[171] = 21'h000000;
    xr_rd[172] = 21'h000000;
    xr_rd[173] = 21'h000000;
    xr_rd[174] = 21'h000000;
    xr_rd[175] = 21'h000000;
    xr_rd[176] = 21'h000000;
    xr_rd[177] = 21'h000000;
    xr_rd[178] = 21'h000000;
    xr_rd[179] = 21'h000000;
    xr_rd[180] = 21'h000000;
    xr_rd[181] = 21'h000000;
    xr_rd[182] = 21'h000000;
    xr_rd[183] = 21'h000000;
    xr_rd[184] = 21'h000000;
    xr_rd[185] = 21'h000000;
    xr_rd[186] = 21'h000000;
    xr_rd[187] = 21'h000000;
    xr_rd[188] = 21'h000000;
    xr_rd[189] = 21'h000000;
    xr_rd[190] = 21'h000000;
    xr_rd[191] = 21'h000000;
    xr_rd[192] = 21'h000000;
    xr_rd[193] = 21'h000000;
    xr_rd[194] = 21'h000000;
    xr_rd[195] = 21'h000000;
    xr_rd[196] = 21'h000000;
    xr_rd[197] = 21'h000000;
    xr_rd[198] = 21'h000000;
    xr_rd[199] = 21'h000000;
    xr_rd[200] = 21'h000000;
    xr_rd[201] = 21'h000000;
    xr_rd[202] = 21'h000000;
    xr_rd[203] = 21'h000000;
    xr_rd[204] = 21'h000000;
    xr_rd[205] = 21'h000000;
    xr_rd[206] = 21'h000000;
    xr_rd[207] = 21'h000000;
    xr_rd[208] = 21'h000000;
    xr_rd[209] = 21'h000000;
    xr_rd[210] = 21'h000000;
    xr_rd[211] = 21'h000000;
    xr_rd[212] = 21'h000000;
    xr_rd[213] = 21'h000000;
    xr_rd[214] = 21'h000000;
    xr_rd[215] = 21'h000000;
    xr_rd[216] = 21'h000000;
    xr_rd[217] = 21'h000000;
    xr_rd[218] = 21'h000000;
    xr_rd[219] = 21'h000000;
    xr_rd[220] = 21'h000000;
    xr_rd[221] = 21'h000000;
    xr_rd[222] = 21'h000000;
    xr_rd[223] = 21'h000000;
    xr_rd[224] = 21'h000000;
    xr_rd[225] = 21'h000000;
    xr_rd[226] = 21'h000000;
    xr_rd[227] = 21'h000000;
    xr_rd[228] = 21'h000000;
    xr_rd[229] = 21'h000000;
    xr_rd[230] = 21'h000000;
    xr_rd[231] = 21'h000000;
    xr_rd[232] = 21'h000000;
    xr_rd[233] = 21'h000000;
    xr_rd[234] = 21'h000000;
    xr_rd[235] = 21'h000000;
    xr_rd[236] = 21'h000000;
    xr_rd[237] = 21'h000000;
    xr_rd[238] = 21'h000000;
    xr_rd[239] = 21'h000000;
    xr_rd[240] = 21'h000000;
    xr_rd[241] = 21'h000000;
    xr_rd[242] = 21'h000000;
    xr_rd[243] = 21'h000000;
    xr_rd[244] = 21'h000000;
    xr_rd[245] = 21'h000000;
    xr_rd[246] = 21'h000000;
    xr_rd[247] = 21'h000000;
    xr_rd[248] = 21'h000000;
    xr_rd[249] = 21'h000000;
    xr_rd[250] = 21'h000000;
    xr_rd[251] = 21'h000000;
    xr_rd[252] = 21'h000000;
    xr_rd[253] = 21'h000000;
    xr_rd[254] = 21'h000000;
    xr_rd[255] = 21'h000000;
    xr_rd[256] = 21'h000000;
    xr_rd[257] = 21'h000000;
    xr_rd[258] = 21'h000000;
    xr_rd[259] = 21'h000000;
    xr_rd[260] = 21'h000000;
    xr_rd[261] = 21'h000000;
    xr_rd[262] = 21'h000000;
    xr_rd[263] = 21'h000000;
    xr_rd[264] = 21'h000000;
    xr_rd[265] = 21'h000000;
    xr_rd[266] = 21'h000000;
    xr_rd[267] = 21'h000000;
    xr_rd[268] = 21'h000000;
    xr_rd[269] = 21'h000000;
    xr_rd[270] = 21'h000000;
    xr_rd[271] = 21'h000000;
    xr_rd[272] = 21'h000000;
    xr_rd[273] = 21'h000000;
    xr_rd[274] = 21'h000000;
    xr_rd[275] = 21'h000000;
    xr_rd[276] = 21'h000000;
    xr_rd[277] = 21'h000000;
    xr_rd[278] = 21'h000000;
    xr_rd[279] = 21'h000000;
    xr_rd[280] = 21'h000000;
    xr_rd[281] = 21'h000000;
    xr_rd[282] = 21'h000000;
    xr_rd[283] = 21'h000000;
    xr_rd[284] = 21'h000000;
    xr_rd[285] = 21'h000000;
    xr_rd[286] = 21'h000000;
    xr_rd[287] = 21'h000000;
    xr_rd[288] = 21'h000000;
    xr_rd[289] = 21'h000000;
    xr_rd[290] = 21'h000000;
    xr_rd[291] = 21'h000000;
    xr_rd[292] = 21'h000000;
    xr_rd[293] = 21'h000000;
    xr_rd[294] = 21'h000000;
    xr_rd[295] = 21'h000000;
    xr_rd[296] = 21'h000000;
    xr_rd[297] = 21'h000000;
    xr_rd[298] = 21'h000000;
    xr_rd[299] = 21'h000000;
    xr_rd[300] = 21'h000000;
    xr_rd[301] = 21'h000000;
    xr_rd[302] = 21'h000000;
    xr_rd[303] = 21'h000000;
    xr_rd[304] = 21'h000000;
    xr_rd[305] = 21'h000000;
    xr_rd[306] = 21'h000000;
    xr_rd[307] = 21'h000000;
    xr_rd[308] = 21'h000000;
    xr_rd[309] = 21'h000000;
    xr_rd[310] = 21'h000000;
    xr_rd[311] = 21'h000000;
    xr_rd[312] = 21'h000000;
    xr_rd[313] = 21'h000000;
    xr_rd[314] = 21'h000000;
    xr_rd[315] = 21'h000000;
    xr_rd[316] = 21'h000000;
    xr_rd[317] = 21'h000000;
    xr_rd[318] = 21'h000000;
    xr_rd[319] = 21'h000000;
    xr_rd[320] = 21'h000000;
    xr_rd[321] = 21'h000000;
    xr_rd[322] = 21'h000000;
    xr_rd[323] = 21'h000000;
    xr_rd[324] = 21'h000000;
    xr_rd[325] = 21'h000000;
    xr_rd[326] = 21'h000000;
    xr_rd[327] = 21'h000000;
    xr_rd[328] = 21'h000000;
    xr_rd[329] = 21'h000000;
    xr_rd[330] = 21'h000000;
    xr_rd[331] = 21'h000000;
    xr_rd[332] = 21'h000000;
    xr_rd[333] = 21'h000000;
    xr_rd[334] = 21'h000000;
    xr_rd[335] = 21'h000000;
    xr_rd[336] = 21'h000000;
    xr_rd[337] = 21'h000000;
    xr_rd[338] = 21'h000000;
    xr_rd[339] = 21'h000000;
    xr_rd[340] = 21'h000000;
    xr_rd[341] = 21'h000000;
    xr_rd[342] = 21'h000000;
    xr_rd[343] = 21'h000000;
    xr_rd[344] = 21'h000000;
    xr_rd[345] = 21'h000000;
    xr_rd[346] = 21'h000000;
    xr_rd[347] = 21'h000000;
    xr_rd[348] = 21'h000000;
    xr_rd[349] = 21'h000000;
    xr_rd[350] = 21'h000000;
    xr_rd[351] = 21'h000000;
    xr_rd[352] = 21'h000000;
    xr_rd[353] = 21'h000000;
    xr_rd[354] = 21'h000000;
    xr_rd[355] = 21'h000000;
    xr_rd[356] = 21'h000000;
    xr_rd[357] = 21'h000000;
    xr_rd[358] = 21'h000000;
    xr_rd[359] = 21'h000000;
    xr_rd[360] = 21'h000000;
    xr_rd[361] = 21'h000000;
    xr_rd[362] = 21'h000000;
    xr_rd[363] = 21'h000000;
    xr_rd[364] = 21'h000000;
    xr_rd[365] = 21'h000000;
    xr_rd[366] = 21'h000000;
    xr_rd[367] = 21'h000000;
    xr_rd[368] = 21'h000000;
    xr_rd[369] = 21'h000000;
    xr_rd[370] = 21'h000000;
    xr_rd[371] = 21'h000000;
    xr_rd[372] = 21'h000000;
    xr_rd[373] = 21'h000000;
    xr_rd[374] = 21'h000000;
    xr_rd[375] = 21'h000000;
    xr_rd[376] = 21'h000000;
    xr_rd[377] = 21'h000000;
    xr_rd[378] = 21'h000000;
    xr_rd[379] = 21'h000000;
    xr_rd[380] = 21'h000000;
    xr_rd[381] = 21'h000000;
    xr_rd[382] = 21'h000000;
    xr_rd[383] = 21'h000000;
    xr_rd[384] = 21'h000000;
    xr_rd[385] = 21'h000000;
    xr_rd[386] = 21'h000000;
    xr_rd[387] = 21'h000000;
    xr_rd[388] = 21'h000000;
    xr_rd[389] = 21'h000000;
    xr_rd[390] = 21'h000000;
    xr_rd[391] = 21'h000000;
    xr_rd[392] = 21'h000000;
    xr_rd[393] = 21'h000000;
    xr_rd[394] = 21'h000000;
    xr_rd[395] = 21'h000000;
    xr_rd[396] = 21'h000000;
    xr_rd[397] = 21'h000000;
    xr_rd[398] = 21'h000000;
    xr_rd[399] = 21'h000000;
    xr_rd[400] = 21'h000000;
    xr_rd[401] = 21'h000000;
    xr_rd[402] = 21'h000000;
    xr_rd[403] = 21'h000000;
    xr_rd[404] = 21'h000000;
    xr_rd[405] = 21'h000000;
    xr_rd[406] = 21'h000000;
    xr_rd[407] = 21'h000000;
    xr_rd[408] = 21'h000000;
    xr_rd[409] = 21'h000000;
    xr_rd[410] = 21'h000000;
    xr_rd[411] = 21'h000000;
    xr_rd[412] = 21'h000000;
    xr_rd[413] = 21'h000000;
    xr_rd[414] = 21'h000000;
    xr_rd[415] = 21'h000000;
    xr_rd[416] = 21'h000000;
    xr_rd[417] = 21'h000000;
    xr_rd[418] = 21'h000000;
    xr_rd[419] = 21'h000000;
    xr_rd[420] = 21'h000000;
    xr_rd[421] = 21'h000000;
    xr_rd[422] = 21'h000000;
    xr_rd[423] = 21'h000000;
    xr_rd[424] = 21'h000000;
    xr_rd[425] = 21'h000000;
    xr_rd[426] = 21'h000000;
    xr_rd[427] = 21'h000000;
    xr_rd[428] = 21'h000000;
    xr_rd[429] = 21'h000000;
    xr_rd[430] = 21'h000000;
    xr_rd[431] = 21'h000000;
    xr_rd[432] = 21'h000000;
    xr_rd[433] = 21'h000000;
    xr_rd[434] = 21'h000000;
    xr_rd[435] = 21'h000000;
    xr_rd[436] = 21'h000000;
    xr_rd[437] = 21'h000000;
    xr_rd[438] = 21'h000000;
    xr_rd[439] = 21'h000000;
    xr_rd[440] = 21'h000000;
    xr_rd[441] = 21'h000000;
    xr_rd[442] = 21'h000000;
    xr_rd[443] = 21'h000000;
    xr_rd[444] = 21'h000000;
    xr_rd[445] = 21'h000000;
    xr_rd[446] = 21'h000000;
    xr_rd[447] = 21'h000000;
    xr_rd[448] = 21'h000000;
    xr_rd[449] = 21'h000000;
    xr_rd[450] = 21'h000000;
    xr_rd[451] = 21'h000000;
    xr_rd[452] = 21'h000000;
    xr_rd[453] = 21'h000000;
    xr_rd[454] = 21'h000000;
    xr_rd[455] = 21'h000000;
    xr_rd[456] = 21'h000000;
    xr_rd[457] = 21'h000000;
    xr_rd[458] = 21'h000000;
    xr_rd[459] = 21'h000000;
    xr_rd[460] = 21'h000000;
    xr_rd[461] = 21'h000000;
    xr_rd[462] = 21'h000000;
    xr_rd[463] = 21'h000000;
    xr_rd[464] = 21'h000000;
    xr_rd[465] = 21'h000000;
    xr_rd[466] = 21'h000000;
    xr_rd[467] = 21'h000000;
    xr_rd[468] = 21'h000000;
    xr_rd[469] = 21'h000000;
    xr_rd[470] = 21'h000000;
    xr_rd[471] = 21'h000000;
    xr_rd[472] = 21'h000000;
    xr_rd[473] = 21'h000000;
    xr_rd[474] = 21'h000000;
    xr_rd[475] = 21'h000000;
    xr_rd[476] = 21'h000000;
    xr_rd[477] = 21'h000000;
    xr_rd[478] = 21'h000000;
    xr_rd[479] = 21'h000000;
    xr_rd[480] = 21'h000000;
    xr_rd[481] = 21'h000000;
    xr_rd[482] = 21'h000000;
    xr_rd[483] = 21'h000000;
    xr_rd[484] = 21'h000000;
    xr_rd[485] = 21'h000000;
    xr_rd[486] = 21'h000000;
    xr_rd[487] = 21'h000000;
    xr_rd[488] = 21'h000000;
    xr_rd[489] = 21'h000000;
    xr_rd[490] = 21'h000000;
    xr_rd[491] = 21'h000000;
    xr_rd[492] = 21'h000000;
    xr_rd[493] = 21'h000000;
    xr_rd[494] = 21'h000000;
    xr_rd[495] = 21'h000000;
    xr_rd[496] = 21'h000000;
    xr_rd[497] = 21'h000000;
    xr_rd[498] = 21'h000000;
    xr_rd[499] = 21'h000000;
    xr_rd[500] = 21'h000000;
    xr_rd[501] = 21'h000000;
    xr_rd[502] = 21'h000000;
    xr_rd[503] = 21'h000000;
    xr_rd[504] = 21'h000000;
    xr_rd[505] = 21'h000000;
    xr_rd[506] = 21'h000000;
    xr_rd[507] = 21'h000000;
    xr_rd[508] = 21'h000000;
    xr_rd[509] = 21'h000000;
    xr_rd[510] = 21'h000000;
    xr_rd[511] = 21'h000000;
  end
  always @(posedge clk) begin
    if (xr_w_en)
      xr_rd[xr_w_addr] <= xr_w_data;
  end
  reg [8:0] _5_;
  always @(posedge clk) begin
    _5_ <= xr_r_addr;
  end
  assign xr_r_data = xr_rd[_5_];
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:105" *)
  reg [20:0] yi_rd [511:0];
  initial begin
    yi_rd[0] = 21'h000000;
    yi_rd[1] = 21'h000000;
    yi_rd[2] = 21'h000000;
    yi_rd[3] = 21'h000000;
    yi_rd[4] = 21'h000000;
    yi_rd[5] = 21'h000000;
    yi_rd[6] = 21'h000000;
    yi_rd[7] = 21'h000000;
    yi_rd[8] = 21'h000000;
    yi_rd[9] = 21'h000000;
    yi_rd[10] = 21'h000000;
    yi_rd[11] = 21'h000000;
    yi_rd[12] = 21'h000000;
    yi_rd[13] = 21'h000000;
    yi_rd[14] = 21'h000000;
    yi_rd[15] = 21'h000000;
    yi_rd[16] = 21'h000000;
    yi_rd[17] = 21'h000000;
    yi_rd[18] = 21'h000000;
    yi_rd[19] = 21'h000000;
    yi_rd[20] = 21'h000000;
    yi_rd[21] = 21'h000000;
    yi_rd[22] = 21'h000000;
    yi_rd[23] = 21'h000000;
    yi_rd[24] = 21'h000000;
    yi_rd[25] = 21'h000000;
    yi_rd[26] = 21'h000000;
    yi_rd[27] = 21'h000000;
    yi_rd[28] = 21'h000000;
    yi_rd[29] = 21'h000000;
    yi_rd[30] = 21'h000000;
    yi_rd[31] = 21'h000000;
    yi_rd[32] = 21'h000000;
    yi_rd[33] = 21'h000000;
    yi_rd[34] = 21'h000000;
    yi_rd[35] = 21'h000000;
    yi_rd[36] = 21'h000000;
    yi_rd[37] = 21'h000000;
    yi_rd[38] = 21'h000000;
    yi_rd[39] = 21'h000000;
    yi_rd[40] = 21'h000000;
    yi_rd[41] = 21'h000000;
    yi_rd[42] = 21'h000000;
    yi_rd[43] = 21'h000000;
    yi_rd[44] = 21'h000000;
    yi_rd[45] = 21'h000000;
    yi_rd[46] = 21'h000000;
    yi_rd[47] = 21'h000000;
    yi_rd[48] = 21'h000000;
    yi_rd[49] = 21'h000000;
    yi_rd[50] = 21'h000000;
    yi_rd[51] = 21'h000000;
    yi_rd[52] = 21'h000000;
    yi_rd[53] = 21'h000000;
    yi_rd[54] = 21'h000000;
    yi_rd[55] = 21'h000000;
    yi_rd[56] = 21'h000000;
    yi_rd[57] = 21'h000000;
    yi_rd[58] = 21'h000000;
    yi_rd[59] = 21'h000000;
    yi_rd[60] = 21'h000000;
    yi_rd[61] = 21'h000000;
    yi_rd[62] = 21'h000000;
    yi_rd[63] = 21'h000000;
    yi_rd[64] = 21'h000000;
    yi_rd[65] = 21'h000000;
    yi_rd[66] = 21'h000000;
    yi_rd[67] = 21'h000000;
    yi_rd[68] = 21'h000000;
    yi_rd[69] = 21'h000000;
    yi_rd[70] = 21'h000000;
    yi_rd[71] = 21'h000000;
    yi_rd[72] = 21'h000000;
    yi_rd[73] = 21'h000000;
    yi_rd[74] = 21'h000000;
    yi_rd[75] = 21'h000000;
    yi_rd[76] = 21'h000000;
    yi_rd[77] = 21'h000000;
    yi_rd[78] = 21'h000000;
    yi_rd[79] = 21'h000000;
    yi_rd[80] = 21'h000000;
    yi_rd[81] = 21'h000000;
    yi_rd[82] = 21'h000000;
    yi_rd[83] = 21'h000000;
    yi_rd[84] = 21'h000000;
    yi_rd[85] = 21'h000000;
    yi_rd[86] = 21'h000000;
    yi_rd[87] = 21'h000000;
    yi_rd[88] = 21'h000000;
    yi_rd[89] = 21'h000000;
    yi_rd[90] = 21'h000000;
    yi_rd[91] = 21'h000000;
    yi_rd[92] = 21'h000000;
    yi_rd[93] = 21'h000000;
    yi_rd[94] = 21'h000000;
    yi_rd[95] = 21'h000000;
    yi_rd[96] = 21'h000000;
    yi_rd[97] = 21'h000000;
    yi_rd[98] = 21'h000000;
    yi_rd[99] = 21'h000000;
    yi_rd[100] = 21'h000000;
    yi_rd[101] = 21'h000000;
    yi_rd[102] = 21'h000000;
    yi_rd[103] = 21'h000000;
    yi_rd[104] = 21'h000000;
    yi_rd[105] = 21'h000000;
    yi_rd[106] = 21'h000000;
    yi_rd[107] = 21'h000000;
    yi_rd[108] = 21'h000000;
    yi_rd[109] = 21'h000000;
    yi_rd[110] = 21'h000000;
    yi_rd[111] = 21'h000000;
    yi_rd[112] = 21'h000000;
    yi_rd[113] = 21'h000000;
    yi_rd[114] = 21'h000000;
    yi_rd[115] = 21'h000000;
    yi_rd[116] = 21'h000000;
    yi_rd[117] = 21'h000000;
    yi_rd[118] = 21'h000000;
    yi_rd[119] = 21'h000000;
    yi_rd[120] = 21'h000000;
    yi_rd[121] = 21'h000000;
    yi_rd[122] = 21'h000000;
    yi_rd[123] = 21'h000000;
    yi_rd[124] = 21'h000000;
    yi_rd[125] = 21'h000000;
    yi_rd[126] = 21'h000000;
    yi_rd[127] = 21'h000000;
    yi_rd[128] = 21'h000000;
    yi_rd[129] = 21'h000000;
    yi_rd[130] = 21'h000000;
    yi_rd[131] = 21'h000000;
    yi_rd[132] = 21'h000000;
    yi_rd[133] = 21'h000000;
    yi_rd[134] = 21'h000000;
    yi_rd[135] = 21'h000000;
    yi_rd[136] = 21'h000000;
    yi_rd[137] = 21'h000000;
    yi_rd[138] = 21'h000000;
    yi_rd[139] = 21'h000000;
    yi_rd[140] = 21'h000000;
    yi_rd[141] = 21'h000000;
    yi_rd[142] = 21'h000000;
    yi_rd[143] = 21'h000000;
    yi_rd[144] = 21'h000000;
    yi_rd[145] = 21'h000000;
    yi_rd[146] = 21'h000000;
    yi_rd[147] = 21'h000000;
    yi_rd[148] = 21'h000000;
    yi_rd[149] = 21'h000000;
    yi_rd[150] = 21'h000000;
    yi_rd[151] = 21'h000000;
    yi_rd[152] = 21'h000000;
    yi_rd[153] = 21'h000000;
    yi_rd[154] = 21'h000000;
    yi_rd[155] = 21'h000000;
    yi_rd[156] = 21'h000000;
    yi_rd[157] = 21'h000000;
    yi_rd[158] = 21'h000000;
    yi_rd[159] = 21'h000000;
    yi_rd[160] = 21'h000000;
    yi_rd[161] = 21'h000000;
    yi_rd[162] = 21'h000000;
    yi_rd[163] = 21'h000000;
    yi_rd[164] = 21'h000000;
    yi_rd[165] = 21'h000000;
    yi_rd[166] = 21'h000000;
    yi_rd[167] = 21'h000000;
    yi_rd[168] = 21'h000000;
    yi_rd[169] = 21'h000000;
    yi_rd[170] = 21'h000000;
    yi_rd[171] = 21'h000000;
    yi_rd[172] = 21'h000000;
    yi_rd[173] = 21'h000000;
    yi_rd[174] = 21'h000000;
    yi_rd[175] = 21'h000000;
    yi_rd[176] = 21'h000000;
    yi_rd[177] = 21'h000000;
    yi_rd[178] = 21'h000000;
    yi_rd[179] = 21'h000000;
    yi_rd[180] = 21'h000000;
    yi_rd[181] = 21'h000000;
    yi_rd[182] = 21'h000000;
    yi_rd[183] = 21'h000000;
    yi_rd[184] = 21'h000000;
    yi_rd[185] = 21'h000000;
    yi_rd[186] = 21'h000000;
    yi_rd[187] = 21'h000000;
    yi_rd[188] = 21'h000000;
    yi_rd[189] = 21'h000000;
    yi_rd[190] = 21'h000000;
    yi_rd[191] = 21'h000000;
    yi_rd[192] = 21'h000000;
    yi_rd[193] = 21'h000000;
    yi_rd[194] = 21'h000000;
    yi_rd[195] = 21'h000000;
    yi_rd[196] = 21'h000000;
    yi_rd[197] = 21'h000000;
    yi_rd[198] = 21'h000000;
    yi_rd[199] = 21'h000000;
    yi_rd[200] = 21'h000000;
    yi_rd[201] = 21'h000000;
    yi_rd[202] = 21'h000000;
    yi_rd[203] = 21'h000000;
    yi_rd[204] = 21'h000000;
    yi_rd[205] = 21'h000000;
    yi_rd[206] = 21'h000000;
    yi_rd[207] = 21'h000000;
    yi_rd[208] = 21'h000000;
    yi_rd[209] = 21'h000000;
    yi_rd[210] = 21'h000000;
    yi_rd[211] = 21'h000000;
    yi_rd[212] = 21'h000000;
    yi_rd[213] = 21'h000000;
    yi_rd[214] = 21'h000000;
    yi_rd[215] = 21'h000000;
    yi_rd[216] = 21'h000000;
    yi_rd[217] = 21'h000000;
    yi_rd[218] = 21'h000000;
    yi_rd[219] = 21'h000000;
    yi_rd[220] = 21'h000000;
    yi_rd[221] = 21'h000000;
    yi_rd[222] = 21'h000000;
    yi_rd[223] = 21'h000000;
    yi_rd[224] = 21'h000000;
    yi_rd[225] = 21'h000000;
    yi_rd[226] = 21'h000000;
    yi_rd[227] = 21'h000000;
    yi_rd[228] = 21'h000000;
    yi_rd[229] = 21'h000000;
    yi_rd[230] = 21'h000000;
    yi_rd[231] = 21'h000000;
    yi_rd[232] = 21'h000000;
    yi_rd[233] = 21'h000000;
    yi_rd[234] = 21'h000000;
    yi_rd[235] = 21'h000000;
    yi_rd[236] = 21'h000000;
    yi_rd[237] = 21'h000000;
    yi_rd[238] = 21'h000000;
    yi_rd[239] = 21'h000000;
    yi_rd[240] = 21'h000000;
    yi_rd[241] = 21'h000000;
    yi_rd[242] = 21'h000000;
    yi_rd[243] = 21'h000000;
    yi_rd[244] = 21'h000000;
    yi_rd[245] = 21'h000000;
    yi_rd[246] = 21'h000000;
    yi_rd[247] = 21'h000000;
    yi_rd[248] = 21'h000000;
    yi_rd[249] = 21'h000000;
    yi_rd[250] = 21'h000000;
    yi_rd[251] = 21'h000000;
    yi_rd[252] = 21'h000000;
    yi_rd[253] = 21'h000000;
    yi_rd[254] = 21'h000000;
    yi_rd[255] = 21'h000000;
    yi_rd[256] = 21'h000000;
    yi_rd[257] = 21'h000000;
    yi_rd[258] = 21'h000000;
    yi_rd[259] = 21'h000000;
    yi_rd[260] = 21'h000000;
    yi_rd[261] = 21'h000000;
    yi_rd[262] = 21'h000000;
    yi_rd[263] = 21'h000000;
    yi_rd[264] = 21'h000000;
    yi_rd[265] = 21'h000000;
    yi_rd[266] = 21'h000000;
    yi_rd[267] = 21'h000000;
    yi_rd[268] = 21'h000000;
    yi_rd[269] = 21'h000000;
    yi_rd[270] = 21'h000000;
    yi_rd[271] = 21'h000000;
    yi_rd[272] = 21'h000000;
    yi_rd[273] = 21'h000000;
    yi_rd[274] = 21'h000000;
    yi_rd[275] = 21'h000000;
    yi_rd[276] = 21'h000000;
    yi_rd[277] = 21'h000000;
    yi_rd[278] = 21'h000000;
    yi_rd[279] = 21'h000000;
    yi_rd[280] = 21'h000000;
    yi_rd[281] = 21'h000000;
    yi_rd[282] = 21'h000000;
    yi_rd[283] = 21'h000000;
    yi_rd[284] = 21'h000000;
    yi_rd[285] = 21'h000000;
    yi_rd[286] = 21'h000000;
    yi_rd[287] = 21'h000000;
    yi_rd[288] = 21'h000000;
    yi_rd[289] = 21'h000000;
    yi_rd[290] = 21'h000000;
    yi_rd[291] = 21'h000000;
    yi_rd[292] = 21'h000000;
    yi_rd[293] = 21'h000000;
    yi_rd[294] = 21'h000000;
    yi_rd[295] = 21'h000000;
    yi_rd[296] = 21'h000000;
    yi_rd[297] = 21'h000000;
    yi_rd[298] = 21'h000000;
    yi_rd[299] = 21'h000000;
    yi_rd[300] = 21'h000000;
    yi_rd[301] = 21'h000000;
    yi_rd[302] = 21'h000000;
    yi_rd[303] = 21'h000000;
    yi_rd[304] = 21'h000000;
    yi_rd[305] = 21'h000000;
    yi_rd[306] = 21'h000000;
    yi_rd[307] = 21'h000000;
    yi_rd[308] = 21'h000000;
    yi_rd[309] = 21'h000000;
    yi_rd[310] = 21'h000000;
    yi_rd[311] = 21'h000000;
    yi_rd[312] = 21'h000000;
    yi_rd[313] = 21'h000000;
    yi_rd[314] = 21'h000000;
    yi_rd[315] = 21'h000000;
    yi_rd[316] = 21'h000000;
    yi_rd[317] = 21'h000000;
    yi_rd[318] = 21'h000000;
    yi_rd[319] = 21'h000000;
    yi_rd[320] = 21'h000000;
    yi_rd[321] = 21'h000000;
    yi_rd[322] = 21'h000000;
    yi_rd[323] = 21'h000000;
    yi_rd[324] = 21'h000000;
    yi_rd[325] = 21'h000000;
    yi_rd[326] = 21'h000000;
    yi_rd[327] = 21'h000000;
    yi_rd[328] = 21'h000000;
    yi_rd[329] = 21'h000000;
    yi_rd[330] = 21'h000000;
    yi_rd[331] = 21'h000000;
    yi_rd[332] = 21'h000000;
    yi_rd[333] = 21'h000000;
    yi_rd[334] = 21'h000000;
    yi_rd[335] = 21'h000000;
    yi_rd[336] = 21'h000000;
    yi_rd[337] = 21'h000000;
    yi_rd[338] = 21'h000000;
    yi_rd[339] = 21'h000000;
    yi_rd[340] = 21'h000000;
    yi_rd[341] = 21'h000000;
    yi_rd[342] = 21'h000000;
    yi_rd[343] = 21'h000000;
    yi_rd[344] = 21'h000000;
    yi_rd[345] = 21'h000000;
    yi_rd[346] = 21'h000000;
    yi_rd[347] = 21'h000000;
    yi_rd[348] = 21'h000000;
    yi_rd[349] = 21'h000000;
    yi_rd[350] = 21'h000000;
    yi_rd[351] = 21'h000000;
    yi_rd[352] = 21'h000000;
    yi_rd[353] = 21'h000000;
    yi_rd[354] = 21'h000000;
    yi_rd[355] = 21'h000000;
    yi_rd[356] = 21'h000000;
    yi_rd[357] = 21'h000000;
    yi_rd[358] = 21'h000000;
    yi_rd[359] = 21'h000000;
    yi_rd[360] = 21'h000000;
    yi_rd[361] = 21'h000000;
    yi_rd[362] = 21'h000000;
    yi_rd[363] = 21'h000000;
    yi_rd[364] = 21'h000000;
    yi_rd[365] = 21'h000000;
    yi_rd[366] = 21'h000000;
    yi_rd[367] = 21'h000000;
    yi_rd[368] = 21'h000000;
    yi_rd[369] = 21'h000000;
    yi_rd[370] = 21'h000000;
    yi_rd[371] = 21'h000000;
    yi_rd[372] = 21'h000000;
    yi_rd[373] = 21'h000000;
    yi_rd[374] = 21'h000000;
    yi_rd[375] = 21'h000000;
    yi_rd[376] = 21'h000000;
    yi_rd[377] = 21'h000000;
    yi_rd[378] = 21'h000000;
    yi_rd[379] = 21'h000000;
    yi_rd[380] = 21'h000000;
    yi_rd[381] = 21'h000000;
    yi_rd[382] = 21'h000000;
    yi_rd[383] = 21'h000000;
    yi_rd[384] = 21'h000000;
    yi_rd[385] = 21'h000000;
    yi_rd[386] = 21'h000000;
    yi_rd[387] = 21'h000000;
    yi_rd[388] = 21'h000000;
    yi_rd[389] = 21'h000000;
    yi_rd[390] = 21'h000000;
    yi_rd[391] = 21'h000000;
    yi_rd[392] = 21'h000000;
    yi_rd[393] = 21'h000000;
    yi_rd[394] = 21'h000000;
    yi_rd[395] = 21'h000000;
    yi_rd[396] = 21'h000000;
    yi_rd[397] = 21'h000000;
    yi_rd[398] = 21'h000000;
    yi_rd[399] = 21'h000000;
    yi_rd[400] = 21'h000000;
    yi_rd[401] = 21'h000000;
    yi_rd[402] = 21'h000000;
    yi_rd[403] = 21'h000000;
    yi_rd[404] = 21'h000000;
    yi_rd[405] = 21'h000000;
    yi_rd[406] = 21'h000000;
    yi_rd[407] = 21'h000000;
    yi_rd[408] = 21'h000000;
    yi_rd[409] = 21'h000000;
    yi_rd[410] = 21'h000000;
    yi_rd[411] = 21'h000000;
    yi_rd[412] = 21'h000000;
    yi_rd[413] = 21'h000000;
    yi_rd[414] = 21'h000000;
    yi_rd[415] = 21'h000000;
    yi_rd[416] = 21'h000000;
    yi_rd[417] = 21'h000000;
    yi_rd[418] = 21'h000000;
    yi_rd[419] = 21'h000000;
    yi_rd[420] = 21'h000000;
    yi_rd[421] = 21'h000000;
    yi_rd[422] = 21'h000000;
    yi_rd[423] = 21'h000000;
    yi_rd[424] = 21'h000000;
    yi_rd[425] = 21'h000000;
    yi_rd[426] = 21'h000000;
    yi_rd[427] = 21'h000000;
    yi_rd[428] = 21'h000000;
    yi_rd[429] = 21'h000000;
    yi_rd[430] = 21'h000000;
    yi_rd[431] = 21'h000000;
    yi_rd[432] = 21'h000000;
    yi_rd[433] = 21'h000000;
    yi_rd[434] = 21'h000000;
    yi_rd[435] = 21'h000000;
    yi_rd[436] = 21'h000000;
    yi_rd[437] = 21'h000000;
    yi_rd[438] = 21'h000000;
    yi_rd[439] = 21'h000000;
    yi_rd[440] = 21'h000000;
    yi_rd[441] = 21'h000000;
    yi_rd[442] = 21'h000000;
    yi_rd[443] = 21'h000000;
    yi_rd[444] = 21'h000000;
    yi_rd[445] = 21'h000000;
    yi_rd[446] = 21'h000000;
    yi_rd[447] = 21'h000000;
    yi_rd[448] = 21'h000000;
    yi_rd[449] = 21'h000000;
    yi_rd[450] = 21'h000000;
    yi_rd[451] = 21'h000000;
    yi_rd[452] = 21'h000000;
    yi_rd[453] = 21'h000000;
    yi_rd[454] = 21'h000000;
    yi_rd[455] = 21'h000000;
    yi_rd[456] = 21'h000000;
    yi_rd[457] = 21'h000000;
    yi_rd[458] = 21'h000000;
    yi_rd[459] = 21'h000000;
    yi_rd[460] = 21'h000000;
    yi_rd[461] = 21'h000000;
    yi_rd[462] = 21'h000000;
    yi_rd[463] = 21'h000000;
    yi_rd[464] = 21'h000000;
    yi_rd[465] = 21'h000000;
    yi_rd[466] = 21'h000000;
    yi_rd[467] = 21'h000000;
    yi_rd[468] = 21'h000000;
    yi_rd[469] = 21'h000000;
    yi_rd[470] = 21'h000000;
    yi_rd[471] = 21'h000000;
    yi_rd[472] = 21'h000000;
    yi_rd[473] = 21'h000000;
    yi_rd[474] = 21'h000000;
    yi_rd[475] = 21'h000000;
    yi_rd[476] = 21'h000000;
    yi_rd[477] = 21'h000000;
    yi_rd[478] = 21'h000000;
    yi_rd[479] = 21'h000000;
    yi_rd[480] = 21'h000000;
    yi_rd[481] = 21'h000000;
    yi_rd[482] = 21'h000000;
    yi_rd[483] = 21'h000000;
    yi_rd[484] = 21'h000000;
    yi_rd[485] = 21'h000000;
    yi_rd[486] = 21'h000000;
    yi_rd[487] = 21'h000000;
    yi_rd[488] = 21'h000000;
    yi_rd[489] = 21'h000000;
    yi_rd[490] = 21'h000000;
    yi_rd[491] = 21'h000000;
    yi_rd[492] = 21'h000000;
    yi_rd[493] = 21'h000000;
    yi_rd[494] = 21'h000000;
    yi_rd[495] = 21'h000000;
    yi_rd[496] = 21'h000000;
    yi_rd[497] = 21'h000000;
    yi_rd[498] = 21'h000000;
    yi_rd[499] = 21'h000000;
    yi_rd[500] = 21'h000000;
    yi_rd[501] = 21'h000000;
    yi_rd[502] = 21'h000000;
    yi_rd[503] = 21'h000000;
    yi_rd[504] = 21'h000000;
    yi_rd[505] = 21'h000000;
    yi_rd[506] = 21'h000000;
    yi_rd[507] = 21'h000000;
    yi_rd[508] = 21'h000000;
    yi_rd[509] = 21'h000000;
    yi_rd[510] = 21'h000000;
    yi_rd[511] = 21'h000000;
  end
  always @(posedge clk) begin
    if (yi_w_en)
      yi_rd[yi_w_addr] <= yi_w_data;
  end
  reg [8:0] _6_;
  always @(posedge clk) begin
    _6_ <= yi_r_addr;
  end
  assign yi_r_data = yi_rd[_6_];
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:104" *)
  reg [20:0] yr_rd [511:0];
  initial begin
    yr_rd[0] = 21'h000000;
    yr_rd[1] = 21'h000000;
    yr_rd[2] = 21'h000000;
    yr_rd[3] = 21'h000000;
    yr_rd[4] = 21'h000000;
    yr_rd[5] = 21'h000000;
    yr_rd[6] = 21'h000000;
    yr_rd[7] = 21'h000000;
    yr_rd[8] = 21'h000000;
    yr_rd[9] = 21'h000000;
    yr_rd[10] = 21'h000000;
    yr_rd[11] = 21'h000000;
    yr_rd[12] = 21'h000000;
    yr_rd[13] = 21'h000000;
    yr_rd[14] = 21'h000000;
    yr_rd[15] = 21'h000000;
    yr_rd[16] = 21'h000000;
    yr_rd[17] = 21'h000000;
    yr_rd[18] = 21'h000000;
    yr_rd[19] = 21'h000000;
    yr_rd[20] = 21'h000000;
    yr_rd[21] = 21'h000000;
    yr_rd[22] = 21'h000000;
    yr_rd[23] = 21'h000000;
    yr_rd[24] = 21'h000000;
    yr_rd[25] = 21'h000000;
    yr_rd[26] = 21'h000000;
    yr_rd[27] = 21'h000000;
    yr_rd[28] = 21'h000000;
    yr_rd[29] = 21'h000000;
    yr_rd[30] = 21'h000000;
    yr_rd[31] = 21'h000000;
    yr_rd[32] = 21'h000000;
    yr_rd[33] = 21'h000000;
    yr_rd[34] = 21'h000000;
    yr_rd[35] = 21'h000000;
    yr_rd[36] = 21'h000000;
    yr_rd[37] = 21'h000000;
    yr_rd[38] = 21'h000000;
    yr_rd[39] = 21'h000000;
    yr_rd[40] = 21'h000000;
    yr_rd[41] = 21'h000000;
    yr_rd[42] = 21'h000000;
    yr_rd[43] = 21'h000000;
    yr_rd[44] = 21'h000000;
    yr_rd[45] = 21'h000000;
    yr_rd[46] = 21'h000000;
    yr_rd[47] = 21'h000000;
    yr_rd[48] = 21'h000000;
    yr_rd[49] = 21'h000000;
    yr_rd[50] = 21'h000000;
    yr_rd[51] = 21'h000000;
    yr_rd[52] = 21'h000000;
    yr_rd[53] = 21'h000000;
    yr_rd[54] = 21'h000000;
    yr_rd[55] = 21'h000000;
    yr_rd[56] = 21'h000000;
    yr_rd[57] = 21'h000000;
    yr_rd[58] = 21'h000000;
    yr_rd[59] = 21'h000000;
    yr_rd[60] = 21'h000000;
    yr_rd[61] = 21'h000000;
    yr_rd[62] = 21'h000000;
    yr_rd[63] = 21'h000000;
    yr_rd[64] = 21'h000000;
    yr_rd[65] = 21'h000000;
    yr_rd[66] = 21'h000000;
    yr_rd[67] = 21'h000000;
    yr_rd[68] = 21'h000000;
    yr_rd[69] = 21'h000000;
    yr_rd[70] = 21'h000000;
    yr_rd[71] = 21'h000000;
    yr_rd[72] = 21'h000000;
    yr_rd[73] = 21'h000000;
    yr_rd[74] = 21'h000000;
    yr_rd[75] = 21'h000000;
    yr_rd[76] = 21'h000000;
    yr_rd[77] = 21'h000000;
    yr_rd[78] = 21'h000000;
    yr_rd[79] = 21'h000000;
    yr_rd[80] = 21'h000000;
    yr_rd[81] = 21'h000000;
    yr_rd[82] = 21'h000000;
    yr_rd[83] = 21'h000000;
    yr_rd[84] = 21'h000000;
    yr_rd[85] = 21'h000000;
    yr_rd[86] = 21'h000000;
    yr_rd[87] = 21'h000000;
    yr_rd[88] = 21'h000000;
    yr_rd[89] = 21'h000000;
    yr_rd[90] = 21'h000000;
    yr_rd[91] = 21'h000000;
    yr_rd[92] = 21'h000000;
    yr_rd[93] = 21'h000000;
    yr_rd[94] = 21'h000000;
    yr_rd[95] = 21'h000000;
    yr_rd[96] = 21'h000000;
    yr_rd[97] = 21'h000000;
    yr_rd[98] = 21'h000000;
    yr_rd[99] = 21'h000000;
    yr_rd[100] = 21'h000000;
    yr_rd[101] = 21'h000000;
    yr_rd[102] = 21'h000000;
    yr_rd[103] = 21'h000000;
    yr_rd[104] = 21'h000000;
    yr_rd[105] = 21'h000000;
    yr_rd[106] = 21'h000000;
    yr_rd[107] = 21'h000000;
    yr_rd[108] = 21'h000000;
    yr_rd[109] = 21'h000000;
    yr_rd[110] = 21'h000000;
    yr_rd[111] = 21'h000000;
    yr_rd[112] = 21'h000000;
    yr_rd[113] = 21'h000000;
    yr_rd[114] = 21'h000000;
    yr_rd[115] = 21'h000000;
    yr_rd[116] = 21'h000000;
    yr_rd[117] = 21'h000000;
    yr_rd[118] = 21'h000000;
    yr_rd[119] = 21'h000000;
    yr_rd[120] = 21'h000000;
    yr_rd[121] = 21'h000000;
    yr_rd[122] = 21'h000000;
    yr_rd[123] = 21'h000000;
    yr_rd[124] = 21'h000000;
    yr_rd[125] = 21'h000000;
    yr_rd[126] = 21'h000000;
    yr_rd[127] = 21'h000000;
    yr_rd[128] = 21'h000000;
    yr_rd[129] = 21'h000000;
    yr_rd[130] = 21'h000000;
    yr_rd[131] = 21'h000000;
    yr_rd[132] = 21'h000000;
    yr_rd[133] = 21'h000000;
    yr_rd[134] = 21'h000000;
    yr_rd[135] = 21'h000000;
    yr_rd[136] = 21'h000000;
    yr_rd[137] = 21'h000000;
    yr_rd[138] = 21'h000000;
    yr_rd[139] = 21'h000000;
    yr_rd[140] = 21'h000000;
    yr_rd[141] = 21'h000000;
    yr_rd[142] = 21'h000000;
    yr_rd[143] = 21'h000000;
    yr_rd[144] = 21'h000000;
    yr_rd[145] = 21'h000000;
    yr_rd[146] = 21'h000000;
    yr_rd[147] = 21'h000000;
    yr_rd[148] = 21'h000000;
    yr_rd[149] = 21'h000000;
    yr_rd[150] = 21'h000000;
    yr_rd[151] = 21'h000000;
    yr_rd[152] = 21'h000000;
    yr_rd[153] = 21'h000000;
    yr_rd[154] = 21'h000000;
    yr_rd[155] = 21'h000000;
    yr_rd[156] = 21'h000000;
    yr_rd[157] = 21'h000000;
    yr_rd[158] = 21'h000000;
    yr_rd[159] = 21'h000000;
    yr_rd[160] = 21'h000000;
    yr_rd[161] = 21'h000000;
    yr_rd[162] = 21'h000000;
    yr_rd[163] = 21'h000000;
    yr_rd[164] = 21'h000000;
    yr_rd[165] = 21'h000000;
    yr_rd[166] = 21'h000000;
    yr_rd[167] = 21'h000000;
    yr_rd[168] = 21'h000000;
    yr_rd[169] = 21'h000000;
    yr_rd[170] = 21'h000000;
    yr_rd[171] = 21'h000000;
    yr_rd[172] = 21'h000000;
    yr_rd[173] = 21'h000000;
    yr_rd[174] = 21'h000000;
    yr_rd[175] = 21'h000000;
    yr_rd[176] = 21'h000000;
    yr_rd[177] = 21'h000000;
    yr_rd[178] = 21'h000000;
    yr_rd[179] = 21'h000000;
    yr_rd[180] = 21'h000000;
    yr_rd[181] = 21'h000000;
    yr_rd[182] = 21'h000000;
    yr_rd[183] = 21'h000000;
    yr_rd[184] = 21'h000000;
    yr_rd[185] = 21'h000000;
    yr_rd[186] = 21'h000000;
    yr_rd[187] = 21'h000000;
    yr_rd[188] = 21'h000000;
    yr_rd[189] = 21'h000000;
    yr_rd[190] = 21'h000000;
    yr_rd[191] = 21'h000000;
    yr_rd[192] = 21'h000000;
    yr_rd[193] = 21'h000000;
    yr_rd[194] = 21'h000000;
    yr_rd[195] = 21'h000000;
    yr_rd[196] = 21'h000000;
    yr_rd[197] = 21'h000000;
    yr_rd[198] = 21'h000000;
    yr_rd[199] = 21'h000000;
    yr_rd[200] = 21'h000000;
    yr_rd[201] = 21'h000000;
    yr_rd[202] = 21'h000000;
    yr_rd[203] = 21'h000000;
    yr_rd[204] = 21'h000000;
    yr_rd[205] = 21'h000000;
    yr_rd[206] = 21'h000000;
    yr_rd[207] = 21'h000000;
    yr_rd[208] = 21'h000000;
    yr_rd[209] = 21'h000000;
    yr_rd[210] = 21'h000000;
    yr_rd[211] = 21'h000000;
    yr_rd[212] = 21'h000000;
    yr_rd[213] = 21'h000000;
    yr_rd[214] = 21'h000000;
    yr_rd[215] = 21'h000000;
    yr_rd[216] = 21'h000000;
    yr_rd[217] = 21'h000000;
    yr_rd[218] = 21'h000000;
    yr_rd[219] = 21'h000000;
    yr_rd[220] = 21'h000000;
    yr_rd[221] = 21'h000000;
    yr_rd[222] = 21'h000000;
    yr_rd[223] = 21'h000000;
    yr_rd[224] = 21'h000000;
    yr_rd[225] = 21'h000000;
    yr_rd[226] = 21'h000000;
    yr_rd[227] = 21'h000000;
    yr_rd[228] = 21'h000000;
    yr_rd[229] = 21'h000000;
    yr_rd[230] = 21'h000000;
    yr_rd[231] = 21'h000000;
    yr_rd[232] = 21'h000000;
    yr_rd[233] = 21'h000000;
    yr_rd[234] = 21'h000000;
    yr_rd[235] = 21'h000000;
    yr_rd[236] = 21'h000000;
    yr_rd[237] = 21'h000000;
    yr_rd[238] = 21'h000000;
    yr_rd[239] = 21'h000000;
    yr_rd[240] = 21'h000000;
    yr_rd[241] = 21'h000000;
    yr_rd[242] = 21'h000000;
    yr_rd[243] = 21'h000000;
    yr_rd[244] = 21'h000000;
    yr_rd[245] = 21'h000000;
    yr_rd[246] = 21'h000000;
    yr_rd[247] = 21'h000000;
    yr_rd[248] = 21'h000000;
    yr_rd[249] = 21'h000000;
    yr_rd[250] = 21'h000000;
    yr_rd[251] = 21'h000000;
    yr_rd[252] = 21'h000000;
    yr_rd[253] = 21'h000000;
    yr_rd[254] = 21'h000000;
    yr_rd[255] = 21'h000000;
    yr_rd[256] = 21'h000000;
    yr_rd[257] = 21'h000000;
    yr_rd[258] = 21'h000000;
    yr_rd[259] = 21'h000000;
    yr_rd[260] = 21'h000000;
    yr_rd[261] = 21'h000000;
    yr_rd[262] = 21'h000000;
    yr_rd[263] = 21'h000000;
    yr_rd[264] = 21'h000000;
    yr_rd[265] = 21'h000000;
    yr_rd[266] = 21'h000000;
    yr_rd[267] = 21'h000000;
    yr_rd[268] = 21'h000000;
    yr_rd[269] = 21'h000000;
    yr_rd[270] = 21'h000000;
    yr_rd[271] = 21'h000000;
    yr_rd[272] = 21'h000000;
    yr_rd[273] = 21'h000000;
    yr_rd[274] = 21'h000000;
    yr_rd[275] = 21'h000000;
    yr_rd[276] = 21'h000000;
    yr_rd[277] = 21'h000000;
    yr_rd[278] = 21'h000000;
    yr_rd[279] = 21'h000000;
    yr_rd[280] = 21'h000000;
    yr_rd[281] = 21'h000000;
    yr_rd[282] = 21'h000000;
    yr_rd[283] = 21'h000000;
    yr_rd[284] = 21'h000000;
    yr_rd[285] = 21'h000000;
    yr_rd[286] = 21'h000000;
    yr_rd[287] = 21'h000000;
    yr_rd[288] = 21'h000000;
    yr_rd[289] = 21'h000000;
    yr_rd[290] = 21'h000000;
    yr_rd[291] = 21'h000000;
    yr_rd[292] = 21'h000000;
    yr_rd[293] = 21'h000000;
    yr_rd[294] = 21'h000000;
    yr_rd[295] = 21'h000000;
    yr_rd[296] = 21'h000000;
    yr_rd[297] = 21'h000000;
    yr_rd[298] = 21'h000000;
    yr_rd[299] = 21'h000000;
    yr_rd[300] = 21'h000000;
    yr_rd[301] = 21'h000000;
    yr_rd[302] = 21'h000000;
    yr_rd[303] = 21'h000000;
    yr_rd[304] = 21'h000000;
    yr_rd[305] = 21'h000000;
    yr_rd[306] = 21'h000000;
    yr_rd[307] = 21'h000000;
    yr_rd[308] = 21'h000000;
    yr_rd[309] = 21'h000000;
    yr_rd[310] = 21'h000000;
    yr_rd[311] = 21'h000000;
    yr_rd[312] = 21'h000000;
    yr_rd[313] = 21'h000000;
    yr_rd[314] = 21'h000000;
    yr_rd[315] = 21'h000000;
    yr_rd[316] = 21'h000000;
    yr_rd[317] = 21'h000000;
    yr_rd[318] = 21'h000000;
    yr_rd[319] = 21'h000000;
    yr_rd[320] = 21'h000000;
    yr_rd[321] = 21'h000000;
    yr_rd[322] = 21'h000000;
    yr_rd[323] = 21'h000000;
    yr_rd[324] = 21'h000000;
    yr_rd[325] = 21'h000000;
    yr_rd[326] = 21'h000000;
    yr_rd[327] = 21'h000000;
    yr_rd[328] = 21'h000000;
    yr_rd[329] = 21'h000000;
    yr_rd[330] = 21'h000000;
    yr_rd[331] = 21'h000000;
    yr_rd[332] = 21'h000000;
    yr_rd[333] = 21'h000000;
    yr_rd[334] = 21'h000000;
    yr_rd[335] = 21'h000000;
    yr_rd[336] = 21'h000000;
    yr_rd[337] = 21'h000000;
    yr_rd[338] = 21'h000000;
    yr_rd[339] = 21'h000000;
    yr_rd[340] = 21'h000000;
    yr_rd[341] = 21'h000000;
    yr_rd[342] = 21'h000000;
    yr_rd[343] = 21'h000000;
    yr_rd[344] = 21'h000000;
    yr_rd[345] = 21'h000000;
    yr_rd[346] = 21'h000000;
    yr_rd[347] = 21'h000000;
    yr_rd[348] = 21'h000000;
    yr_rd[349] = 21'h000000;
    yr_rd[350] = 21'h000000;
    yr_rd[351] = 21'h000000;
    yr_rd[352] = 21'h000000;
    yr_rd[353] = 21'h000000;
    yr_rd[354] = 21'h000000;
    yr_rd[355] = 21'h000000;
    yr_rd[356] = 21'h000000;
    yr_rd[357] = 21'h000000;
    yr_rd[358] = 21'h000000;
    yr_rd[359] = 21'h000000;
    yr_rd[360] = 21'h000000;
    yr_rd[361] = 21'h000000;
    yr_rd[362] = 21'h000000;
    yr_rd[363] = 21'h000000;
    yr_rd[364] = 21'h000000;
    yr_rd[365] = 21'h000000;
    yr_rd[366] = 21'h000000;
    yr_rd[367] = 21'h000000;
    yr_rd[368] = 21'h000000;
    yr_rd[369] = 21'h000000;
    yr_rd[370] = 21'h000000;
    yr_rd[371] = 21'h000000;
    yr_rd[372] = 21'h000000;
    yr_rd[373] = 21'h000000;
    yr_rd[374] = 21'h000000;
    yr_rd[375] = 21'h000000;
    yr_rd[376] = 21'h000000;
    yr_rd[377] = 21'h000000;
    yr_rd[378] = 21'h000000;
    yr_rd[379] = 21'h000000;
    yr_rd[380] = 21'h000000;
    yr_rd[381] = 21'h000000;
    yr_rd[382] = 21'h000000;
    yr_rd[383] = 21'h000000;
    yr_rd[384] = 21'h000000;
    yr_rd[385] = 21'h000000;
    yr_rd[386] = 21'h000000;
    yr_rd[387] = 21'h000000;
    yr_rd[388] = 21'h000000;
    yr_rd[389] = 21'h000000;
    yr_rd[390] = 21'h000000;
    yr_rd[391] = 21'h000000;
    yr_rd[392] = 21'h000000;
    yr_rd[393] = 21'h000000;
    yr_rd[394] = 21'h000000;
    yr_rd[395] = 21'h000000;
    yr_rd[396] = 21'h000000;
    yr_rd[397] = 21'h000000;
    yr_rd[398] = 21'h000000;
    yr_rd[399] = 21'h000000;
    yr_rd[400] = 21'h000000;
    yr_rd[401] = 21'h000000;
    yr_rd[402] = 21'h000000;
    yr_rd[403] = 21'h000000;
    yr_rd[404] = 21'h000000;
    yr_rd[405] = 21'h000000;
    yr_rd[406] = 21'h000000;
    yr_rd[407] = 21'h000000;
    yr_rd[408] = 21'h000000;
    yr_rd[409] = 21'h000000;
    yr_rd[410] = 21'h000000;
    yr_rd[411] = 21'h000000;
    yr_rd[412] = 21'h000000;
    yr_rd[413] = 21'h000000;
    yr_rd[414] = 21'h000000;
    yr_rd[415] = 21'h000000;
    yr_rd[416] = 21'h000000;
    yr_rd[417] = 21'h000000;
    yr_rd[418] = 21'h000000;
    yr_rd[419] = 21'h000000;
    yr_rd[420] = 21'h000000;
    yr_rd[421] = 21'h000000;
    yr_rd[422] = 21'h000000;
    yr_rd[423] = 21'h000000;
    yr_rd[424] = 21'h000000;
    yr_rd[425] = 21'h000000;
    yr_rd[426] = 21'h000000;
    yr_rd[427] = 21'h000000;
    yr_rd[428] = 21'h000000;
    yr_rd[429] = 21'h000000;
    yr_rd[430] = 21'h000000;
    yr_rd[431] = 21'h000000;
    yr_rd[432] = 21'h000000;
    yr_rd[433] = 21'h000000;
    yr_rd[434] = 21'h000000;
    yr_rd[435] = 21'h000000;
    yr_rd[436] = 21'h000000;
    yr_rd[437] = 21'h000000;
    yr_rd[438] = 21'h000000;
    yr_rd[439] = 21'h000000;
    yr_rd[440] = 21'h000000;
    yr_rd[441] = 21'h000000;
    yr_rd[442] = 21'h000000;
    yr_rd[443] = 21'h000000;
    yr_rd[444] = 21'h000000;
    yr_rd[445] = 21'h000000;
    yr_rd[446] = 21'h000000;
    yr_rd[447] = 21'h000000;
    yr_rd[448] = 21'h000000;
    yr_rd[449] = 21'h000000;
    yr_rd[450] = 21'h000000;
    yr_rd[451] = 21'h000000;
    yr_rd[452] = 21'h000000;
    yr_rd[453] = 21'h000000;
    yr_rd[454] = 21'h000000;
    yr_rd[455] = 21'h000000;
    yr_rd[456] = 21'h000000;
    yr_rd[457] = 21'h000000;
    yr_rd[458] = 21'h000000;
    yr_rd[459] = 21'h000000;
    yr_rd[460] = 21'h000000;
    yr_rd[461] = 21'h000000;
    yr_rd[462] = 21'h000000;
    yr_rd[463] = 21'h000000;
    yr_rd[464] = 21'h000000;
    yr_rd[465] = 21'h000000;
    yr_rd[466] = 21'h000000;
    yr_rd[467] = 21'h000000;
    yr_rd[468] = 21'h000000;
    yr_rd[469] = 21'h000000;
    yr_rd[470] = 21'h000000;
    yr_rd[471] = 21'h000000;
    yr_rd[472] = 21'h000000;
    yr_rd[473] = 21'h000000;
    yr_rd[474] = 21'h000000;
    yr_rd[475] = 21'h000000;
    yr_rd[476] = 21'h000000;
    yr_rd[477] = 21'h000000;
    yr_rd[478] = 21'h000000;
    yr_rd[479] = 21'h000000;
    yr_rd[480] = 21'h000000;
    yr_rd[481] = 21'h000000;
    yr_rd[482] = 21'h000000;
    yr_rd[483] = 21'h000000;
    yr_rd[484] = 21'h000000;
    yr_rd[485] = 21'h000000;
    yr_rd[486] = 21'h000000;
    yr_rd[487] = 21'h000000;
    yr_rd[488] = 21'h000000;
    yr_rd[489] = 21'h000000;
    yr_rd[490] = 21'h000000;
    yr_rd[491] = 21'h000000;
    yr_rd[492] = 21'h000000;
    yr_rd[493] = 21'h000000;
    yr_rd[494] = 21'h000000;
    yr_rd[495] = 21'h000000;
    yr_rd[496] = 21'h000000;
    yr_rd[497] = 21'h000000;
    yr_rd[498] = 21'h000000;
    yr_rd[499] = 21'h000000;
    yr_rd[500] = 21'h000000;
    yr_rd[501] = 21'h000000;
    yr_rd[502] = 21'h000000;
    yr_rd[503] = 21'h000000;
    yr_rd[504] = 21'h000000;
    yr_rd[505] = 21'h000000;
    yr_rd[506] = 21'h000000;
    yr_rd[507] = 21'h000000;
    yr_rd[508] = 21'h000000;
    yr_rd[509] = 21'h000000;
    yr_rd[510] = 21'h000000;
    yr_rd[511] = 21'h000000;
  end
  always @(posedge clk) begin
    if (yr_w_en)
      yr_rd[yr_w_addr] <= yr_w_data;
  end
  reg [8:0] _7_;
  always @(posedge clk) begin
    _7_ <= yr_r_addr;
  end
  assign yr_r_data = yr_rd[_7_];
  assign \$1  = $signed(wfr) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:144" *) $signed(in_i);
  assign \$2  = $signed(wfi) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:144" *) $signed(in_q);
  assign \$3  = $signed(\$1 ) - (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:144" *) $signed(\$2 );
  assign \$5  = $signed(wfr) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:145" *) $signed(in_q);
  assign \$6  = $signed(wfi) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:145" *) $signed(in_i);
  assign \$7  = $signed(\$5 ) + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:145" *) $signed(\$6 );
  assign \$9  = { 1'h0, idx } & (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:170" *) { mask[8], mask[8], mask };
  assign \$10  = $signed(br) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:186" *) $signed(wr);
  assign \$12  = $signed(bi) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:187" *) $signed(wi);
  assign \$14  = $signed(br) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:188" *) $signed(wi);
  assign \$16  = $signed(bi) * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:189" *) $signed(wr);
  assign \$18  = $signed(\$11 [20:0]) - (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:190" *) $signed(\$13 [20:0]);
  assign \$19  = $signed(\$15 [20:0]) + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:191" *) $signed(\$17 [20:0]);
  assign \$20  = $signed(ar) + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:200" *) $signed(\$18 [20:0]);
  assign \$21  = $signed(ai) + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:201" *) $signed(\$19 [20:0]);
  assign \$22  = $signed(ar) - (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:202" *) $signed(\$18 [20:0]);
  assign \$23  = $signed(ai) - (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:203" *) $signed(\$19 [20:0]);
  assign \$24  = ! (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) fsm_state;
  assign \$25  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 1'h1;
  assign \$26  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 2'h2;
  assign \$27  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 2'h3;
  assign \$28  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 3'h4;
  assign \$29  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 3'h5;
  assign \$30  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 3'h6;
  assign \$31  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 3'h7;
  assign \$32  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'h8;
  assign \$33  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'h9;
  assign \$34  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'ha;
  assign \$35  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'hb;
  assign \$36  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'hc;
  assign \$37  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'hd;
  assign \$38  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'he;
  assign \$39  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 4'hf;
  assign \$40  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 5'h10;
  assign \$41  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 5'h11;
  assign \$42  = fsm_state == (* src = "/home/ts/.local/lib/python3.12/site-packages/amaranth/hdl/_dsl.py:490" *) 5'h12;
  assign \$43  = wfidx >= (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:228" *) 10'h200;
  assign \$44  = wfidx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:232" *) 1'h1;
  assign \$45  = idx >= (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:249" *) 10'h200;
  assign \$46  = idx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:271" *) 1'h1;
  assign \$47  = idx >= (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:292" *) 10'h200;
  assign \$49  = stage + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:296" *) 1'h1;
  assign \$50  = stage >= (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:298" *) 4'h9;
  assign \$53  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:307" *) idx;
  assign \$54  = \$53  + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:307" *) 1'h1;
  assign \$55  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:308" *) idx;
  assign \$56  = \$55  + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:308" *) 1'h1;
  assign \$57  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:312" *) idx;
  assign \$58  = \$57  + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:312" *) 1'h1;
  assign \$59  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:313" *) idx;
  assign \$60  = \$59  + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:313" *) 1'h1;
  assign \$65  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:336" *) idx;
  assign \$66  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:337" *) idx;
  assign \$67  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:341" *) idx;
  assign \$68  = 2'h2 * (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:342" *) idx;
  assign \$77  = idx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:406" *) 9'h100;
  assign \$78  = idx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:407" *) 9'h100;
  assign \$79  = idx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:416" *) 9'h100;
  assign \$80  = idx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:417" *) 9'h100;
  assign \$83  = idx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:434" *) 1'h1;
  assign \$84  = idx >= (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:439" *) 10'h200;
  assign \$85  = idx + (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:468" *) 1'h1;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:70" *)
  always @(posedge clk)
    done <= \$86 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:130" *)
  always @(posedge clk)
    idx <= \$87 ;
  (* src = "/usr/lib/python3.12/contextlib.py:144" *)
  always @(posedge clk)
    fsm_state <= \$88 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:149" *)
  always @(posedge clk)
    wfidx <= \$89 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:122" *)
  always @(posedge clk)
    wFr_w_en <= \$90 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:124" *)
  always @(posedge clk)
    wFi_w_en <= \$91 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:122" *)
  always @(posedge clk)
    wFr_w_addr <= \$92 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:113" *)
  always @(posedge clk)
    xr_w_en <= \$93 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:115" *)
  always @(posedge clk)
    xi_w_en <= \$94 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:157" *)
  always @(posedge clk)
    stage <= \$95 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:158" *)
  always @(posedge clk)
    mask <= \$96 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:113" *)
  always @(posedge clk)
    xr_w_data <= \$97 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:115" *)
  always @(posedge clk)
    xi_w_data <= \$98 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:113" *)
  always @(posedge clk)
    xr_w_addr <= \$99 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:115" *)
  always @(posedge clk)
    xi_w_addr <= \$100 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:117" *)
  always @(posedge clk)
    yr_w_en <= \$101 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:119" *)
  always @(posedge clk)
    yi_w_en <= \$102 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:116" *)
  always @(posedge clk)
    yr_r_addr <= \$103 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:118" *)
  always @(posedge clk)
    yi_r_addr <= \$104 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:112" *)
  always @(posedge clk)
    xr_r_addr <= \$105 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:114" *)
  always @(posedge clk)
    xi_r_addr <= \$106 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:162" *)
  always @(posedge clk)
    br <= \$107 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:163" *)
  always @(posedge clk)
    bi <= \$108 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:160" *)
  always @(posedge clk)
    ar <= \$109 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:161" *)
  always @(posedge clk)
    ai <= \$110 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:117" *)
  always @(posedge clk)
    yr_w_data <= \$111 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:119" *)
  always @(posedge clk)
    yi_w_data <= \$112 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:117" *)
  always @(posedge clk)
    yr_w_addr <= \$113 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:119" *)
  always @(posedge clk)
    yi_w_addr <= \$114 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:77" *)
  always @(posedge clk)
    strobe_out <= \$115 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:74" *)
  always @(posedge clk)
    out_real <= \$116 ;
  (* src = "/home/ts/Work/ED_LimeSDR-XTRX_LiteX_GW/gateware/examples/fft/fixedpointfft.py:75" *)
  always @(posedge clk)
    out_imag <= \$117 ;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    wr_state_valid = 1'h0;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          wr_state_valid = 1'h1;
      5'h06:
          wr_state_valid = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    wr_state = 1'h0;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          wr_state = 1'h0;
      5'h06:
          wr_state = 1'h1;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$86  = done;
    casez (fsm_state)
      5'h00:
          if (start) begin
            \$86  = 1'h0;
          end else if (wf_start) begin
            \$86  = 1'h0;
          end
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h10:
          /* empty */;
      5'h11:
          /* empty */;
      5'h07:
          /* empty */;
      5'h12:
          /* empty */;
      5'h03:
          \$86  = 1'h1;
    endcase
    if (rst) begin
      \$86  = 1'h1;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$87  = idx;
    casez (fsm_state)
      5'h00:
          if (start) begin
            \$87  = 10'h000;
          end
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          if (\$45 ) begin
            \$87  = 10'h000;
          end
      5'h06:
          if (strobe_in) begin
            \$87  = \$46 [9:0];
          end
      5'h05:
        begin
          if (\$47 ) begin
            \$87  = 10'h000;
          end
          if (\$50 ) begin
            \$87  = 10'h000;
          end
        end
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h10:
          /* empty */;
      5'h11:
          \$87  = \$83 [9:0];
      5'h07:
          /* empty */;
      5'h12:
          \$87  = \$85 [9:0];
    endcase
    if (rst) begin
      \$87  = 10'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$88  = fsm_state;
    casez (fsm_state)
      5'h00:
          if (start) begin
            \$88  = 5'h01;
          end else if (wf_start) begin
            \$88  = 5'h02;
          end
      5'h02:
          (* full_case = 32'd1 *)
          if (\$43 ) begin
            \$88  = 5'h03;
          end else begin
            \$88  = 5'h04;
          end
      5'h04:
          if (wf_strobe) begin
            \$88  = 5'h02;
          end
      5'h01:
          (* full_case = 32'd1 *)
          if (\$45 ) begin
            \$88  = 5'h05;
          end else begin
            \$88  = 5'h06;
          end
      5'h06:
          if (strobe_in) begin
            \$88  = 5'h01;
          end
      5'h05:
          (* full_case = 32'd1 *)
          if (\$50 ) begin
            \$88  = 5'h07;
          end else begin
            \$88  = 5'h08;
          end
      5'h08:
          \$88  = 5'h09;
      5'h09:
          \$88  = 5'h0a;
      5'h0a:
          \$88  = 5'h0b;
      5'h0b:
          \$88  = 5'h0c;
      5'h0c:
          \$88  = 5'h0d;
      5'h0d:
          \$88  = 5'h0e;
      5'h0e:
          \$88  = 5'h0f;
      5'h0f:
          \$88  = 5'h10;
      5'h10:
          \$88  = 5'h11;
      5'h11:
          \$88  = 5'h05;
      5'h07:
          (* full_case = 32'd1 *)
          if (\$84 ) begin
            \$88  = 5'h03;
          end else begin
            \$88  = 5'h12;
          end
      5'h12:
          \$88  = 5'h07;
      5'h03:
          \$88  = 5'h00;
    endcase
    if (rst) begin
      \$88  = 5'h00;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$89  = wfidx;
    casez (fsm_state)
      5'h00:
          if (start) begin
          end else if (wf_start) begin
            \$89  = 10'h000;
          end
      5'h02:
          (* full_case = 32'd1 *)
          if (\$43 ) begin
            \$89  = 10'h000;
          end else begin
            \$89  = \$44 [9:0];
          end
    endcase
    if (rst) begin
      \$89  = 10'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$90  = wFr_w_en;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          \$90  = 1'h0;
      5'h04:
          if (wf_strobe) begin
            \$90  = 1'h1;
          end
    endcase
    if (rst) begin
      \$90  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$91  = wFi_w_en;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          \$91  = 1'h0;
      5'h04:
          if (wf_strobe) begin
            \$91  = 1'h1;
          end
    endcase
    if (rst) begin
      \$91  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$92  = wFr_w_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          if (wf_strobe) begin
            \$92  = wfidx[8:0];
          end
    endcase
    if (rst) begin
      \$92  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$93  = xr_w_en;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          \$93  = 1'h0;
      5'h06:
          if (strobe_in) begin
            \$93  = 1'h1;
          end
      5'h05:
          \$93  = 1'h0;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          if (\$72 ) begin
            \$93  = 1'h1;
          end
      5'h0f:
          if (\$74 ) begin
            \$93  = 1'h1;
          end
      5'h10:
          if (\$76 ) begin
            \$93  = 1'h0;
          end
      5'h11:
          if (\$82 ) begin
            \$93  = 1'h1;
          end
    endcase
    if (rst) begin
      \$93  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$94  = xi_w_en;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          \$94  = 1'h0;
      5'h06:
          if (strobe_in) begin
            \$94  = 1'h1;
          end
      5'h05:
          \$94  = 1'h0;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          if (\$72 ) begin
            \$94  = 1'h1;
          end
      5'h0f:
          if (\$74 ) begin
            \$94  = 1'h1;
          end
      5'h10:
          if (\$76 ) begin
            \$94  = 1'h0;
          end
      5'h11:
          if (\$82 ) begin
            \$94  = 1'h1;
          end
    endcase
    if (rst) begin
      \$94  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$95  = stage;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          if (\$45 ) begin
            \$95  = 4'h0;
          end
      5'h06:
          /* empty */;
      5'h05:
          if (\$47 ) begin
            \$95  = \$49 [3:0];
          end
    endcase
    if (rst) begin
      \$95  = 4'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$96  = mask;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          if (\$45 ) begin
            \$96  = 9'h100;
          end
      5'h06:
          /* empty */;
      5'h05:
          if (\$47 ) begin
            \$96  = \$48 ;
          end
    endcase
    if (rst) begin
      \$96  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$97  = xr_w_data;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          if (strobe_in) begin
            \$97  = { \$4 [11], \$4 [11], \$4 [11], \$4 [11], \$4 [11], \$4 [11], \$4 [11], \$4 [11], \$4 [11], \$4 [11:0] };
          end
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          if (\$72 ) begin
            \$97  = \$20 [20:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          if (\$76 ) begin
            \$97  = \$22 [20:0];
          end
    endcase
    if (rst) begin
      \$97  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$98  = xi_w_data;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          if (strobe_in) begin
            \$98  = { \$8 [11], \$8 [11], \$8 [11], \$8 [11], \$8 [11], \$8 [11], \$8 [11], \$8 [11], \$8 [11], \$8 [11:0] };
          end
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          if (\$72 ) begin
            \$98  = \$21 [20:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          if (\$76 ) begin
            \$98  = \$23 [20:0];
          end
    endcase
    if (rst) begin
      \$98  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$99  = xr_w_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          if (strobe_in) begin
            \$99  = { idx[0], idx[1], idx[2], idx[3], idx[4], idx[5], idx[6], idx[7], idx[8] };
          end
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          if (\$72 ) begin
            \$99  = idx[8:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          if (\$76 ) begin
            \$99  = \$77 [8:0];
          end
    endcase
    if (rst) begin
      \$99  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$100  = xi_w_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          if (strobe_in) begin
            \$100  = { idx[0], idx[1], idx[2], idx[3], idx[4], idx[5], idx[6], idx[7], idx[8] };
          end
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          if (\$72 ) begin
            \$100  = idx[8:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          if (\$76 ) begin
            \$100  = \$78 [8:0];
          end
    endcase
    if (rst) begin
      \$100  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$101  = yr_w_en;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          \$101  = 1'h0;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
          end else begin
            \$101  = 1'h1;
          end
      5'h0f:
          (* full_case = 32'd1 *)
          if (\$74 ) begin
          end else begin
            \$101  = 1'h1;
          end
      5'h10:
          (* full_case = 32'd1 *)
          if (\$76 ) begin
          end else begin
            \$101  = 1'h0;
          end
      5'h11:
          (* full_case = 32'd1 *)
          if (\$82 ) begin
          end else begin
            \$101  = 1'h1;
          end
    endcase
    if (rst) begin
      \$101  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$102  = yi_w_en;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          \$102  = 1'h0;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
          end else begin
            \$102  = 1'h1;
          end
      5'h0f:
          (* full_case = 32'd1 *)
          if (\$74 ) begin
          end else begin
            \$102  = 1'h1;
          end
      5'h10:
          (* full_case = 32'd1 *)
          if (\$76 ) begin
          end else begin
            \$102  = 1'h0;
          end
      5'h11:
          (* full_case = 32'd1 *)
          if (\$82 ) begin
          end else begin
            \$102  = 1'h1;
          end
    endcase
    if (rst) begin
      \$102  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$103  = yr_r_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          if (\$52 ) begin
            \$103  = \$54 [8:0];
          end
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          if (\$64 ) begin
            \$103  = \$65 [8:0];
          end
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h10:
          /* empty */;
      5'h11:
          /* empty */;
      5'h07:
          (* full_case = 32'd1 *)
          if (\$84 ) begin
          end else begin
            \$103  = idx[8:0];
          end
    endcase
    if (rst) begin
      \$103  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$104  = yi_r_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          if (\$52 ) begin
            \$104  = \$56 [8:0];
          end
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          if (\$64 ) begin
            \$104  = \$66 [8:0];
          end
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h10:
          /* empty */;
      5'h11:
          /* empty */;
      5'h07:
          (* full_case = 32'd1 *)
          if (\$84 ) begin
          end else begin
            \$104  = idx[8:0];
          end
    endcase
    if (rst) begin
      \$104  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$105  = xr_r_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          (* full_case = 32'd1 *)
          if (\$52 ) begin
          end else begin
            \$105  = \$58 [8:0];
          end
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          (* full_case = 32'd1 *)
          if (\$64 ) begin
          end else begin
            \$105  = \$67 [8:0];
          end
    endcase
    if (rst) begin
      \$105  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$106  = xi_r_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          (* full_case = 32'd1 *)
          if (\$52 ) begin
          end else begin
            \$106  = \$60 [8:0];
          end
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          (* full_case = 32'd1 *)
          if (\$64 ) begin
          end else begin
            \$106  = \$68 [8:0];
          end
    endcase
    if (rst) begin
      \$106  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$107  = br;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          (* full_case = 32'd1 *)
          if (\$62 ) begin
            \$107  = yr_r_data;
          end else begin
            \$107  = xr_r_data;
          end
    endcase
    if (rst) begin
      \$107  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$108  = bi;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          (* full_case = 32'd1 *)
          if (\$62 ) begin
            \$108  = yi_r_data;
          end else begin
            \$108  = xi_r_data;
          end
    endcase
    if (rst) begin
      \$108  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$109  = ar;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          (* full_case = 32'd1 *)
          if (\$70 ) begin
            \$109  = yr_r_data;
          end else begin
            \$109  = xr_r_data;
          end
    endcase
    if (rst) begin
      \$109  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$110  = ai;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          (* full_case = 32'd1 *)
          if (\$70 ) begin
            \$110  = yi_r_data;
          end else begin
            \$110  = xi_r_data;
          end
    endcase
    if (rst) begin
      \$110  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$111  = yr_w_data;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
          end else begin
            \$111  = \$20 [20:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          (* full_case = 32'd1 *)
          if (\$76 ) begin
          end else begin
            \$111  = \$22 [20:0];
          end
    endcase
    if (rst) begin
      \$111  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$112  = yi_w_data;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
          end else begin
            \$112  = \$21 [20:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          (* full_case = 32'd1 *)
          if (\$76 ) begin
          end else begin
            \$112  = \$23 [20:0];
          end
    endcase
    if (rst) begin
      \$112  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$113  = yr_w_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
          end else begin
            \$113  = idx[8:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          (* full_case = 32'd1 *)
          if (\$76 ) begin
          end else begin
            \$113  = \$79 [8:0];
          end
    endcase
    if (rst) begin
      \$113  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$114  = yi_w_addr;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          (* full_case = 32'd1 *)
          if (\$72 ) begin
          end else begin
            \$114  = idx[8:0];
          end
      5'h0f:
          /* empty */;
      5'h10:
          (* full_case = 32'd1 *)
          if (\$76 ) begin
          end else begin
            \$114  = \$80 [8:0];
          end
    endcase
    if (rst) begin
      \$114  = 9'h000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$115  = strobe_out;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h10:
          /* empty */;
      5'h11:
          /* empty */;
      5'h07:
          \$115  = 1'h0;
      5'h12:
          \$115  = 1'h1;
    endcase
    if (rst) begin
      \$115  = 1'h0;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$116  = out_real;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h10:
          /* empty */;
      5'h11:
          /* empty */;
      5'h07:
          /* empty */;
      5'h12:
          \$116  = yr_r_data;
    endcase
    if (rst) begin
      \$116  = 21'h000000;
    end
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$1 ) begin end
    \$117  = out_imag;
    casez (fsm_state)
      5'h00:
          /* empty */;
      5'h02:
          /* empty */;
      5'h04:
          /* empty */;
      5'h01:
          /* empty */;
      5'h06:
          /* empty */;
      5'h05:
          /* empty */;
      5'h08:
          /* empty */;
      5'h09:
          /* empty */;
      5'h0a:
          /* empty */;
      5'h0b:
          /* empty */;
      5'h0c:
          /* empty */;
      5'h0d:
          /* empty */;
      5'h0e:
          /* empty */;
      5'h0f:
          /* empty */;
      5'h10:
          /* empty */;
      5'h11:
          /* empty */;
      5'h07:
          /* empty */;
      5'h12:
          \$117  = yi_r_data;
    endcase
    if (rst) begin
      \$117  = 21'h000000;
    end
  end
  assign revidx = { idx[0], idx[1], idx[2], idx[3], idx[4], idx[5], idx[6], idx[7], idx[8] };
  assign wFr_r_addr = idx[8:0];
  assign wFr_r_data = wfr;
  assign wFi_r_addr = idx[8:0];
  assign wFi_r_data = wfi;
  assign i_cooked = \$4 [11:0];
  assign q_cooked = \$8 [11:0];
  assign wFr_w_data = wf_real;
  assign wFi_w_data = wf_imag;
  assign widx = \$9 [8:0];
  assign Wr_r_addr = \$9 [8:0];
  assign Wi_r_addr = \$9 [8:0];
  assign Wr_r_data = wr;
  assign Wi_r_data = wi;
  assign mrr = \$11 [20:0];
  assign mii = \$13 [20:0];
  assign mri = \$15 [20:0];
  assign mir = \$17 [20:0];
  assign bwr = \$18 [20:0];
  assign bwi = \$19 [20:0];
  assign sr = \$20 [20:0];
  assign si = \$21 [20:0];
  assign dr = \$22 [20:0];
  assign di = \$23 [20:0];
  assign \$4  = { \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25], \$3 [25:11] };
  assign \$8  = { \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25], \$7 [25:11] };
  assign \$11  = { \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33], \$10 [33:11] };
  assign \$13  = { \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33], \$12 [33:11] };
  assign \$15  = { \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33], \$14 [33:11] };
  assign \$17  = { \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33], \$16 [33:11] };
  assign \$48  = { mask[8], mask[8:1] };
  assign \$51 [3:1] = 3'h0;
  assign \$51 [0] = stage[0];
  assign \$52  = stage[0];
  assign \$61 [3:1] = 3'h0;
  assign \$61 [0] = stage[0];
  assign \$62  = stage[0];
  assign \$63 [3:1] = 3'h0;
  assign \$63 [0] = stage[0];
  assign \$64  = stage[0];
  assign \$69 [3:1] = 3'h0;
  assign \$69 [0] = stage[0];
  assign \$70  = stage[0];
  assign \$71 [3:1] = 3'h0;
  assign \$71 [0] = stage[0];
  assign \$72  = stage[0];
  assign \$73 [3:1] = 3'h0;
  assign \$73 [0] = stage[0];
  assign \$74  = stage[0];
  assign \$75 [3:1] = 3'h0;
  assign \$75 [0] = stage[0];
  assign \$76  = stage[0];
  assign \$81 [3:1] = 3'h0;
  assign \$81 [0] = stage[0];
  assign \$82  = stage[0];
endmodule
